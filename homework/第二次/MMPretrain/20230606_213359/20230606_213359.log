2023/06/06 21:34:01 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.9.16 | packaged by conda-forge | (main, Feb  1 2023, 21:28:38) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    numpy_random_seed: 980091700
    GPU 0: NVIDIA GeForce RTX 2080 Ti
    CUDA_HOME: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.64
    MSVC: 用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.35.32217.1 版
    GCC: n/a
    PyTorch: 2.0.1+cu117
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 193431937
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj /FS -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=OFF, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.2+cu117
    OpenCV: 4.5.4
    MMEngine: 0.7.3

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: None
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/06 21:34:01 - mmengine - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=30,
        in_channels=2048,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),
        topk=(1, 5)),
    init_cfg=dict(
        type='Pretrained',
        checkpoint=
        'https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth'
    ))
dataset_type = 'CustomDataset'
data_preprocessor = dict(
    num_classes=30,
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', scale=224),
    dict(type='RandomFlip', prob=0.5, direction='horizontal'),
    dict(type='PackInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='ResizeEdge', scale=256, edge='short'),
    dict(type='CenterCrop', crop_size=224),
    dict(type='PackInputs')
]
train_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=8,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='D:\\workspace\\datasets\\fruit30_train\\train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', scale=224),
            dict(type='RandomFlip', prob=0.5, direction='horizontal'),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=True))
val_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=8,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='D:\\workspace\\datasets\\fruit30_train\\val',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='ResizeEdge', scale=256, edge='short'),
            dict(type='CenterCrop', crop_size=224),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=False))
val_evaluator = dict(type='Accuracy', topk=(1, 5))
test_dataloader = dict(
    pin_memory=True,
    persistent_workers=True,
    collate_fn=dict(type='default_collate'),
    batch_size=8,
    num_workers=5,
    dataset=dict(
        type='CustomDataset',
        data_root='D:\\workspace\\datasets\\fruit30_train\\test',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='ResizeEdge', scale=256, edge='short'),
            dict(type='CenterCrop', crop_size=224),
            dict(type='PackInputs')
        ]),
    sampler=dict(type='DefaultSampler', shuffle=False))
test_evaluator = dict(type='Accuracy', topk=(1, 5))
optim_wrapper = dict(
    optimizer=dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0001))
param_scheduler = dict(
    type='MultiStepLR', by_epoch=True, milestones=[30, 60, 90], gamma=0.1)
train_cfg = dict(by_epoch=True, max_epochs=20, val_interval=1)
val_cfg = dict()
test_cfg = dict()
auto_scale_lr = dict(base_batch_size=256)
default_scope = 'mmpretrain'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=100),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(type='CheckpointHook', interval=1),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='VisualizationHook', enable=False))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='UniversalVisualizer', vis_backends=[dict(type='LocalVisBackend')])
log_level = 'INFO'
load_from = None
resume = False
randomness = dict(seed=None, deterministic=False)
launcher = 'none'
work_dir = './exp'

2023/06/06 21:34:03 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/06 21:34:04 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/06 21:34:06 - mmengine - INFO - load model from: https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth
2023/06/06 21:34:06 - mmengine - INFO - Loads checkpoint by http backend from path: https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth
2023/06/06 21:34:27 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for head.fc.weight: copying a param with shape torch.Size([1000, 2048]) from checkpoint, the shape in current model is torch.Size([30, 2048]).
size mismatch for head.fc.bias: copying a param with shape torch.Size([1000]) from checkpoint, the shape in current model is torch.Size([30]).
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/resnet/resnet50_8xb32_in1k_20210831-ea4938fc.pth 

head.fc.weight - torch.Size([30, 2048]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([30]): 
NormalInit: mean=0, std=0.01, bias=0 
2023/06/06 21:34:27 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/06 21:34:27 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/06 21:34:27 - mmengine - INFO - Checkpoints will be saved to D:\workspace\mmpretrain\exp.
2023/06/06 21:34:50 - mmengine - INFO - Epoch(train)  [1][100/436]  lr: 1.0000e-01  eta: 0:32:46  time: 0.0444  data_time: 0.0005  memory: 922  loss: 3.3668
2023/06/06 21:34:55 - mmengine - INFO - Epoch(train)  [1][200/436]  lr: 1.0000e-01  eta: 0:19:31  time: 0.0475  data_time: 0.0004  memory: 922  loss: 3.3078
2023/06/06 21:35:00 - mmengine - INFO - Epoch(train)  [1][300/436]  lr: 1.0000e-01  eta: 0:15:07  time: 0.0491  data_time: 0.0007  memory: 922  loss: 3.2259
2023/06/06 21:35:05 - mmengine - INFO - Epoch(train)  [1][400/436]  lr: 1.0000e-01  eta: 0:12:54  time: 0.0495  data_time: 0.0004  memory: 922  loss: 3.2739
2023/06/06 21:35:06 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:35:06 - mmengine - INFO - Saving checkpoint at 1 epochs
2023/06/06 21:35:21 - mmengine - INFO - Epoch(val) [1][55/55]    accuracy/top1: 7.1101  accuracy/top5: 34.6330  data_time: 0.2100  time: 0.2315
2023/06/06 21:35:26 - mmengine - INFO - Epoch(train)  [2][100/436]  lr: 1.0000e-01  eta: 0:11:02  time: 0.0479  data_time: 0.0005  memory: 922  loss: 3.2592
2023/06/06 21:35:31 - mmengine - INFO - Epoch(train)  [2][200/436]  lr: 1.0000e-01  eta: 0:10:12  time: 0.0482  data_time: 0.0003  memory: 922  loss: 3.1492
2023/06/06 21:35:35 - mmengine - INFO - Epoch(train)  [2][300/436]  lr: 1.0000e-01  eta: 0:09:36  time: 0.0499  data_time: 0.0002  memory: 922  loss: 3.0682
2023/06/06 21:35:40 - mmengine - INFO - Epoch(train)  [2][400/436]  lr: 1.0000e-01  eta: 0:09:08  time: 0.0496  data_time: 0.0004  memory: 922  loss: 3.1533
2023/06/06 21:35:42 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:35:42 - mmengine - INFO - Saving checkpoint at 2 epochs
2023/06/06 21:35:46 - mmengine - INFO - Epoch(val) [2][55/55]    accuracy/top1: 9.4037  accuracy/top5: 40.5963  data_time: 0.0007  time: 0.0153
2023/06/06 21:35:50 - mmengine - INFO - Epoch(train)  [3][100/436]  lr: 1.0000e-01  eta: 0:08:36  time: 0.0501  data_time: 0.0005  memory: 922  loss: 3.1747
2023/06/06 21:35:52 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:35:55 - mmengine - INFO - Epoch(train)  [3][200/436]  lr: 1.0000e-01  eta: 0:08:18  time: 0.0504  data_time: 0.0004  memory: 922  loss: 3.0969
2023/06/06 21:36:00 - mmengine - INFO - Epoch(train)  [3][300/436]  lr: 1.0000e-01  eta: 0:08:02  time: 0.0508  data_time: 0.0004  memory: 922  loss: 3.1898
2023/06/06 21:36:06 - mmengine - INFO - Epoch(train)  [3][400/436]  lr: 1.0000e-01  eta: 0:07:48  time: 0.0513  data_time: 0.0007  memory: 922  loss: 3.0418
2023/06/06 21:36:07 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:36:07 - mmengine - INFO - Saving checkpoint at 3 epochs
2023/06/06 21:36:11 - mmengine - INFO - Epoch(val) [3][55/55]    accuracy/top1: 10.7798  accuracy/top5: 46.1009  data_time: 0.0006  time: 0.0136
2023/06/06 21:36:16 - mmengine - INFO - Epoch(train)  [4][100/436]  lr: 1.0000e-01  eta: 0:07:30  time: 0.0500  data_time: 0.0004  memory: 922  loss: 3.0386
2023/06/06 21:36:21 - mmengine - INFO - Epoch(train)  [4][200/436]  lr: 1.0000e-01  eta: 0:07:19  time: 0.0506  data_time: 0.0006  memory: 922  loss: 3.0780
2023/06/06 21:36:26 - mmengine - INFO - Epoch(train)  [4][300/436]  lr: 1.0000e-01  eta: 0:07:08  time: 0.0514  data_time: 0.0002  memory: 922  loss: 2.9267
2023/06/06 21:36:31 - mmengine - INFO - Epoch(train)  [4][400/436]  lr: 1.0000e-01  eta: 0:06:59  time: 0.0514  data_time: 0.0003  memory: 922  loss: 3.0261
2023/06/06 21:36:33 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:36:33 - mmengine - INFO - Saving checkpoint at 4 epochs
2023/06/06 21:36:36 - mmengine - INFO - Epoch(val) [4][55/55]    accuracy/top1: 10.5505  accuracy/top5: 44.7248  data_time: 0.0007  time: 0.0135
2023/06/06 21:36:41 - mmengine - INFO - Epoch(train)  [5][100/436]  lr: 1.0000e-01  eta: 0:06:46  time: 0.0500  data_time: 0.0005  memory: 922  loss: 3.0522
2023/06/06 21:36:46 - mmengine - INFO - Epoch(train)  [5][200/436]  lr: 1.0000e-01  eta: 0:06:37  time: 0.0506  data_time: 0.0004  memory: 922  loss: 3.0390
2023/06/06 21:36:49 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:36:51 - mmengine - INFO - Epoch(train)  [5][300/436]  lr: 1.0000e-01  eta: 0:06:29  time: 0.0514  data_time: 0.0008  memory: 922  loss: 2.9623
2023/06/06 21:36:56 - mmengine - INFO - Epoch(train)  [5][400/436]  lr: 1.0000e-01  eta: 0:06:21  time: 0.0520  data_time: 0.0007  memory: 922  loss: 3.1734
2023/06/06 21:36:58 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:36:58 - mmengine - INFO - Saving checkpoint at 5 epochs
2023/06/06 21:37:01 - mmengine - INFO - Epoch(val) [5][55/55]    accuracy/top1: 14.4495  accuracy/top5: 54.1284  data_time: 0.0007  time: 0.0138
2023/06/06 21:37:06 - mmengine - INFO - Epoch(train)  [6][100/436]  lr: 1.0000e-01  eta: 0:06:10  time: 0.0512  data_time: 0.0004  memory: 922  loss: 2.7829
2023/06/06 21:37:11 - mmengine - INFO - Epoch(train)  [6][200/436]  lr: 1.0000e-01  eta: 0:06:03  time: 0.0508  data_time: 0.0007  memory: 922  loss: 2.9027
2023/06/06 21:37:16 - mmengine - INFO - Epoch(train)  [6][300/436]  lr: 1.0000e-01  eta: 0:05:55  time: 0.0508  data_time: 0.0005  memory: 922  loss: 2.9223
2023/06/06 21:37:22 - mmengine - INFO - Epoch(train)  [6][400/436]  lr: 1.0000e-01  eta: 0:05:48  time: 0.0517  data_time: 0.0006  memory: 922  loss: 3.0741
2023/06/06 21:37:23 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:37:23 - mmengine - INFO - Saving checkpoint at 6 epochs
2023/06/06 21:37:27 - mmengine - INFO - Epoch(val) [6][55/55]    accuracy/top1: 21.5596  accuracy/top5: 60.7798  data_time: 0.0006  time: 0.0136
2023/06/06 21:37:32 - mmengine - INFO - Epoch(train)  [7][100/436]  lr: 1.0000e-01  eta: 0:05:39  time: 0.0512  data_time: 0.0004  memory: 922  loss: 2.6237
2023/06/06 21:37:37 - mmengine - INFO - Epoch(train)  [7][200/436]  lr: 1.0000e-01  eta: 0:05:32  time: 0.0521  data_time: 0.0002  memory: 922  loss: 2.6971
2023/06/06 21:37:42 - mmengine - INFO - Epoch(train)  [7][300/436]  lr: 1.0000e-01  eta: 0:05:26  time: 0.0520  data_time: 0.0006  memory: 922  loss: 2.6370
2023/06/06 21:37:46 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:37:47 - mmengine - INFO - Epoch(train)  [7][400/436]  lr: 1.0000e-01  eta: 0:05:19  time: 0.0521  data_time: 0.0005  memory: 922  loss: 2.7920
2023/06/06 21:37:49 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:37:49 - mmengine - INFO - Saving checkpoint at 7 epochs
2023/06/06 21:37:52 - mmengine - INFO - Epoch(val) [7][55/55]    accuracy/top1: 20.1835  accuracy/top5: 59.4037  data_time: 0.0007  time: 0.0136
2023/06/06 21:37:57 - mmengine - INFO - Epoch(train)  [8][100/436]  lr: 1.0000e-01  eta: 0:05:10  time: 0.0511  data_time: 0.0004  memory: 922  loss: 2.8149
2023/06/06 21:38:02 - mmengine - INFO - Epoch(train)  [8][200/436]  lr: 1.0000e-01  eta: 0:05:04  time: 0.0527  data_time: 0.0006  memory: 922  loss: 2.6934
2023/06/06 21:38:08 - mmengine - INFO - Epoch(train)  [8][300/436]  lr: 1.0000e-01  eta: 0:04:58  time: 0.0526  data_time: 0.0006  memory: 922  loss: 2.7757
2023/06/06 21:38:13 - mmengine - INFO - Epoch(train)  [8][400/436]  lr: 1.0000e-01  eta: 0:04:52  time: 0.0524  data_time: 0.0004  memory: 922  loss: 2.5003
2023/06/06 21:38:15 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:38:15 - mmengine - INFO - Saving checkpoint at 8 epochs
2023/06/06 21:38:18 - mmengine - INFO - Epoch(val) [8][55/55]    accuracy/top1: 22.7064  accuracy/top5: 66.9725  data_time: 0.0007  time: 0.0152
2023/06/06 21:38:23 - mmengine - INFO - Epoch(train)  [9][100/436]  lr: 1.0000e-01  eta: 0:04:44  time: 0.0521  data_time: 0.0004  memory: 922  loss: 2.7103
2023/06/06 21:38:28 - mmengine - INFO - Epoch(train)  [9][200/436]  lr: 1.0000e-01  eta: 0:04:38  time: 0.0514  data_time: 0.0005  memory: 922  loss: 2.4966
2023/06/06 21:38:33 - mmengine - INFO - Epoch(train)  [9][300/436]  lr: 1.0000e-01  eta: 0:04:32  time: 0.0526  data_time: 0.0004  memory: 922  loss: 2.8337
2023/06/06 21:38:39 - mmengine - INFO - Epoch(train)  [9][400/436]  lr: 1.0000e-01  eta: 0:04:26  time: 0.0518  data_time: 0.0003  memory: 922  loss: 2.5920
2023/06/06 21:38:41 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:38:41 - mmengine - INFO - Saving checkpoint at 9 epochs
2023/06/06 21:38:43 - mmengine - INFO - Epoch(val) [9][55/55]    accuracy/top1: 25.9174  accuracy/top5: 71.7890  data_time: 0.0006  time: 0.0135
2023/06/06 21:38:47 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:38:49 - mmengine - INFO - Epoch(train) [10][100/436]  lr: 1.0000e-01  eta: 0:04:18  time: 0.0529  data_time: 0.0004  memory: 922  loss: 2.6213
2023/06/06 21:38:54 - mmengine - INFO - Epoch(train) [10][200/436]  lr: 1.0000e-01  eta: 0:04:12  time: 0.0531  data_time: 0.0009  memory: 922  loss: 2.5527
2023/06/06 21:38:59 - mmengine - INFO - Epoch(train) [10][300/436]  lr: 1.0000e-01  eta: 0:04:06  time: 0.0534  data_time: 0.0006  memory: 922  loss: 2.7822
2023/06/06 21:39:05 - mmengine - INFO - Epoch(train) [10][400/436]  lr: 1.0000e-01  eta: 0:04:01  time: 0.0531  data_time: 0.0006  memory: 922  loss: 2.3851
2023/06/06 21:39:06 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:39:06 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/06 21:39:10 - mmengine - INFO - Epoch(val) [10][55/55]    accuracy/top1: 28.6697  accuracy/top5: 72.7064  data_time: 0.0006  time: 0.0135
2023/06/06 21:39:15 - mmengine - INFO - Epoch(train) [11][100/436]  lr: 1.0000e-01  eta: 0:03:53  time: 0.0532  data_time: 0.0006  memory: 922  loss: 2.4053
2023/06/06 21:39:20 - mmengine - INFO - Epoch(train) [11][200/436]  lr: 1.0000e-01  eta: 0:03:47  time: 0.0531  data_time: 0.0008  memory: 922  loss: 2.7622
2023/06/06 21:39:25 - mmengine - INFO - Epoch(train) [11][300/436]  lr: 1.0000e-01  eta: 0:03:42  time: 0.0536  data_time: 0.0007  memory: 922  loss: 2.5246
2023/06/06 21:39:31 - mmengine - INFO - Epoch(train) [11][400/436]  lr: 1.0000e-01  eta: 0:03:36  time: 0.0534  data_time: 0.0006  memory: 922  loss: 2.4261
2023/06/06 21:39:33 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:39:33 - mmengine - INFO - Saving checkpoint at 11 epochs
2023/06/06 21:39:36 - mmengine - INFO - Epoch(val) [11][55/55]    accuracy/top1: 30.9633  accuracy/top5: 71.7890  data_time: 0.0007  time: 0.0137
2023/06/06 21:39:41 - mmengine - INFO - Epoch(train) [12][100/436]  lr: 1.0000e-01  eta: 0:03:28  time: 0.0528  data_time: 0.0006  memory: 922  loss: 2.3716
2023/06/06 21:39:46 - mmengine - INFO - Epoch(train) [12][200/436]  lr: 1.0000e-01  eta: 0:03:23  time: 0.0539  data_time: 0.0005  memory: 922  loss: 2.4787
2023/06/06 21:39:46 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:39:52 - mmengine - INFO - Epoch(train) [12][300/436]  lr: 1.0000e-01  eta: 0:03:17  time: 0.0533  data_time: 0.0004  memory: 922  loss: 2.6656
2023/06/06 21:39:57 - mmengine - INFO - Epoch(train) [12][400/436]  lr: 1.0000e-01  eta: 0:03:12  time: 0.0530  data_time: 0.0003  memory: 922  loss: 2.5922
2023/06/06 21:39:59 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:39:59 - mmengine - INFO - Saving checkpoint at 12 epochs
2023/06/06 21:40:03 - mmengine - INFO - Epoch(val) [12][55/55]    accuracy/top1: 27.0642  accuracy/top5: 74.5413  data_time: 0.0008  time: 0.0165
2023/06/06 21:40:08 - mmengine - INFO - Epoch(train) [13][100/436]  lr: 1.0000e-01  eta: 0:03:04  time: 0.0529  data_time: 0.0005  memory: 922  loss: 2.4365
2023/06/06 21:40:13 - mmengine - INFO - Epoch(train) [13][200/436]  lr: 1.0000e-01  eta: 0:02:59  time: 0.0537  data_time: 0.0005  memory: 922  loss: 2.5944
2023/06/06 21:40:18 - mmengine - INFO - Epoch(train) [13][300/436]  lr: 1.0000e-01  eta: 0:02:53  time: 0.0523  data_time: 0.0007  memory: 922  loss: 2.6338
2023/06/06 21:40:24 - mmengine - INFO - Epoch(train) [13][400/436]  lr: 1.0000e-01  eta: 0:02:48  time: 0.0542  data_time: 0.0005  memory: 922  loss: 2.4796
2023/06/06 21:40:26 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:40:26 - mmengine - INFO - Saving checkpoint at 13 epochs
2023/06/06 21:40:29 - mmengine - INFO - Epoch(val) [13][55/55]    accuracy/top1: 30.2752  accuracy/top5: 75.9174  data_time: 0.0006  time: 0.0152
2023/06/06 21:40:34 - mmengine - INFO - Epoch(train) [14][100/436]  lr: 1.0000e-01  eta: 0:02:40  time: 0.0531  data_time: 0.0003  memory: 922  loss: 2.7867
2023/06/06 21:40:39 - mmengine - INFO - Epoch(train) [14][200/436]  lr: 1.0000e-01  eta: 0:02:35  time: 0.0542  data_time: 0.0003  memory: 922  loss: 2.4836
2023/06/06 21:40:45 - mmengine - INFO - Epoch(train) [14][300/436]  lr: 1.0000e-01  eta: 0:02:29  time: 0.0536  data_time: 0.0006  memory: 922  loss: 2.5378
2023/06/06 21:40:47 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:40:50 - mmengine - INFO - Epoch(train) [14][400/436]  lr: 1.0000e-01  eta: 0:02:24  time: 0.0538  data_time: 0.0006  memory: 922  loss: 2.5144
2023/06/06 21:40:52 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:40:52 - mmengine - INFO - Saving checkpoint at 14 epochs
2023/06/06 21:40:55 - mmengine - INFO - Epoch(val) [14][55/55]    accuracy/top1: 32.5688  accuracy/top5: 77.7523  data_time: 0.0006  time: 0.0141
2023/06/06 21:41:01 - mmengine - INFO - Epoch(train) [15][100/436]  lr: 1.0000e-01  eta: 0:02:16  time: 0.0531  data_time: 0.0008  memory: 922  loss: 2.4028
2023/06/06 21:41:06 - mmengine - INFO - Epoch(train) [15][200/436]  lr: 1.0000e-01  eta: 0:02:11  time: 0.0535  data_time: 0.0004  memory: 922  loss: 2.3522
2023/06/06 21:41:11 - mmengine - INFO - Epoch(train) [15][300/436]  lr: 1.0000e-01  eta: 0:02:05  time: 0.0534  data_time: 0.0003  memory: 922  loss: 2.3798
2023/06/06 21:41:17 - mmengine - INFO - Epoch(train) [15][400/436]  lr: 1.0000e-01  eta: 0:02:00  time: 0.0530  data_time: 0.0003  memory: 922  loss: 2.3279
2023/06/06 21:41:19 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:41:19 - mmengine - INFO - Saving checkpoint at 15 epochs
2023/06/06 21:41:22 - mmengine - INFO - Epoch(val) [15][55/55]    accuracy/top1: 34.6330  accuracy/top5: 76.1468  data_time: 0.0006  time: 0.0140
2023/06/06 21:41:27 - mmengine - INFO - Epoch(train) [16][100/436]  lr: 1.0000e-01  eta: 0:01:52  time: 0.0532  data_time: 0.0005  memory: 922  loss: 2.3658
2023/06/06 21:41:32 - mmengine - INFO - Epoch(train) [16][200/436]  lr: 1.0000e-01  eta: 0:01:47  time: 0.0534  data_time: 0.0005  memory: 922  loss: 2.6807
2023/06/06 21:41:38 - mmengine - INFO - Epoch(train) [16][300/436]  lr: 1.0000e-01  eta: 0:01:42  time: 0.0533  data_time: 0.0004  memory: 922  loss: 2.5071
2023/06/06 21:41:43 - mmengine - INFO - Epoch(train) [16][400/436]  lr: 1.0000e-01  eta: 0:01:36  time: 0.0545  data_time: 0.0008  memory: 922  loss: 2.1724
2023/06/06 21:41:45 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:41:45 - mmengine - INFO - Saving checkpoint at 16 epochs
2023/06/06 21:41:48 - mmengine - INFO - Epoch(val) [16][55/55]    accuracy/top1: 36.6972  accuracy/top5: 80.5046  data_time: 0.0007  time: 0.0138
2023/06/06 21:41:49 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:41:54 - mmengine - INFO - Epoch(train) [17][100/436]  lr: 1.0000e-01  eta: 0:01:29  time: 0.0538  data_time: 0.0009  memory: 922  loss: 2.1626
2023/06/06 21:41:59 - mmengine - INFO - Epoch(train) [17][200/436]  lr: 1.0000e-01  eta: 0:01:23  time: 0.0530  data_time: 0.0005  memory: 922  loss: 2.1232
2023/06/06 21:42:04 - mmengine - INFO - Epoch(train) [17][300/436]  lr: 1.0000e-01  eta: 0:01:18  time: 0.0540  data_time: 0.0003  memory: 922  loss: 2.3146
2023/06/06 21:42:10 - mmengine - INFO - Epoch(train) [17][400/436]  lr: 1.0000e-01  eta: 0:01:12  time: 0.0538  data_time: 0.0005  memory: 922  loss: 2.4835
2023/06/06 21:42:12 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:42:12 - mmengine - INFO - Saving checkpoint at 17 epochs
2023/06/06 21:42:15 - mmengine - INFO - Epoch(val) [17][55/55]    accuracy/top1: 35.5505  accuracy/top5: 75.6881  data_time: 0.0007  time: 0.0140
2023/06/06 21:42:20 - mmengine - INFO - Epoch(train) [18][100/436]  lr: 1.0000e-01  eta: 0:01:05  time: 0.0537  data_time: 0.0007  memory: 922  loss: 2.3629
2023/06/06 21:42:26 - mmengine - INFO - Epoch(train) [18][200/436]  lr: 1.0000e-01  eta: 0:01:00  time: 0.0531  data_time: 0.0007  memory: 922  loss: 2.4265
2023/06/06 21:42:31 - mmengine - INFO - Epoch(train) [18][300/436]  lr: 1.0000e-01  eta: 0:00:54  time: 0.0531  data_time: 0.0005  memory: 922  loss: 2.6449
2023/06/06 21:42:36 - mmengine - INFO - Epoch(train) [18][400/436]  lr: 1.0000e-01  eta: 0:00:49  time: 0.0535  data_time: 0.0005  memory: 922  loss: 2.3256
2023/06/06 21:42:38 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:42:38 - mmengine - INFO - Saving checkpoint at 18 epochs
2023/06/06 21:42:42 - mmengine - INFO - Epoch(val) [18][55/55]    accuracy/top1: 38.0734  accuracy/top5: 77.9817  data_time: 0.0006  time: 0.0157
2023/06/06 21:42:47 - mmengine - INFO - Epoch(train) [19][100/436]  lr: 1.0000e-01  eta: 0:00:41  time: 0.0534  data_time: 0.0002  memory: 922  loss: 2.1367
2023/06/06 21:42:50 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:42:52 - mmengine - INFO - Epoch(train) [19][200/436]  lr: 1.0000e-01  eta: 0:00:36  time: 0.0543  data_time: 0.0005  memory: 922  loss: 2.1636
2023/06/06 21:42:58 - mmengine - INFO - Epoch(train) [19][300/436]  lr: 1.0000e-01  eta: 0:00:30  time: 0.0545  data_time: 0.0003  memory: 922  loss: 2.2210
2023/06/06 21:43:03 - mmengine - INFO - Epoch(train) [19][400/436]  lr: 1.0000e-01  eta: 0:00:25  time: 0.0546  data_time: 0.0006  memory: 922  loss: 2.0587
2023/06/06 21:43:05 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:43:05 - mmengine - INFO - Saving checkpoint at 19 epochs
2023/06/06 21:43:08 - mmengine - INFO - Epoch(val) [19][55/55]    accuracy/top1: 36.2385  accuracy/top5: 76.8349  data_time: 0.0006  time: 0.0157
2023/06/06 21:43:14 - mmengine - INFO - Epoch(train) [20][100/436]  lr: 1.0000e-01  eta: 0:00:18  time: 0.0542  data_time: 0.0008  memory: 922  loss: 2.2325
2023/06/06 21:43:19 - mmengine - INFO - Epoch(train) [20][200/436]  lr: 1.0000e-01  eta: 0:00:12  time: 0.0531  data_time: 0.0005  memory: 922  loss: 2.2905
2023/06/06 21:43:24 - mmengine - INFO - Epoch(train) [20][300/436]  lr: 1.0000e-01  eta: 0:00:07  time: 0.0529  data_time: 0.0003  memory: 922  loss: 2.1489
2023/06/06 21:43:30 - mmengine - INFO - Epoch(train) [20][400/436]  lr: 1.0000e-01  eta: 0:00:01  time: 0.0541  data_time: 0.0004  memory: 922  loss: 2.3874
2023/06/06 21:43:32 - mmengine - INFO - Exp name: resnet50_8xb32_in1k_20230606_213359
2023/06/06 21:43:32 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/06 21:43:35 - mmengine - INFO - Epoch(val) [20][55/55]    accuracy/top1: 36.2385  accuracy/top5: 81.4220  data_time: 0.0008  time: 0.0145
