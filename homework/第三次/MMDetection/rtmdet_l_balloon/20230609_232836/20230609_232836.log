2023/06/09 23:28:36 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.9.16 (main, Mar  8 2023, 14:00:05) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 71222052
    GPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090
    CUDA_HOME: /usr/local/cuda-11.2
    NVCC: Cuda compilation tools, release 11.2, V11.2.152
    GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
    PyTorch: 1.12.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.13.1
    OpenCV: 4.7.0
    MMEngine: 0.7.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 71222052
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/09 23:28:36 - mmengine - INFO - Config:
default_scope = 'mmdet'
metainfo = dict(classes=('balloon', ))
NUM_CLASSES = 1
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=50),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(type='CheckpointHook', interval=10, max_keep_ckpts=3),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = 'https://download.openmmlab.com/mmrotate/v1.0/rotated_rtmdet/rotated_rtmdet_l-coco_pretrain-3x-dota_ms/rotated_rtmdet_l-coco_pretrain-3x-dota_ms-06d248a2.pth'
resume = False
train_cfg = dict(
    type='EpochBasedTrainLoop',
    max_epochs=300,
    val_interval=10,
    dynamic_intervals=[(280, 1)])
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(
        type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0,
        end=1000),
    dict(
        type='CosineAnnealingLR',
        eta_min=0.0002,
        begin=150,
        end=300,
        T_max=150,
        by_epoch=True,
        convert_to_iter_based=True)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.004, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
auto_scale_lr = dict(enable=False, base_batch_size=16)
dataset_type = 'CocoDataset'
data_root = '/home/LYY/workspace/pycharm/mmdetection/datasets/balloon'
backend_args = None
train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='CachedMosaic', img_scale=(640, 640), pad_val=114.0),
    dict(
        type='RandomResize',
        scale=(1280, 1280),
        ratio_range=(0.1, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='CachedMixUp',
        img_scale=(640, 640),
        ratio_range=(1.0, 1.0),
        max_cached_images=20,
        pad_val=(114, 114, 114)),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='Resize', scale=(640, 640), keep_ratio=True),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=8,
    num_workers=5,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=None,
    dataset=dict(
        type='CocoDataset',
        data_root='/home/LYY/workspace/pycharm/mmdetection/datasets/balloon',
        metainfo=dict(classes=('balloon', )),
        ann_file='train/balloon_train.json',
        data_prefix=dict(img='train/'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='CachedMosaic', img_scale=(640, 640), pad_val=114.0),
            dict(
                type='RandomResize',
                scale=(1280, 1280),
                ratio_range=(0.1, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='CachedMixUp',
                img_scale=(640, 640),
                ratio_range=(1.0, 1.0),
                max_cached_images=20,
                pad_val=(114, 114, 114)),
            dict(type='PackDetInputs')
        ],
        backend_args=None),
    pin_memory=True)
val_dataloader = dict(
    batch_size=5,
    num_workers=10,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='/home/LYY/workspace/pycharm/mmdetection/datasets/balloon/',
        metainfo=dict(classes=('balloon', )),
        ann_file='val/balloon_val.json',
        data_prefix=dict(img='val/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None))
test_dataloader = dict(
    batch_size=5,
    num_workers=10,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='/home/LYY/workspace/pycharm/mmdetection/datasets/balloon/',
        metainfo=dict(classes=('balloon', )),
        ann_file='val/balloon_val.json',
        data_prefix=dict(img='val/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None))
val_evaluator = dict(
    type='CocoMetric',
    ann_file=
    '/home/LYY/workspace/pycharm/mmdetection/datasets/balloon/val/balloon_val.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
test_evaluator = dict(
    type='CocoMetric',
    ann_file=
    '/home/LYY/workspace/pycharm/mmdetection/datasets/balloon/val/balloon_val.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
tta_model = dict(
    type='DetTTAModel',
    tta_cfg=dict(nms=dict(type='nms', iou_threshold=0.6), max_per_img=100))
img_scales = [(640, 640), (320, 320), (960, 960)]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale': (640, 640),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (320, 320),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (960, 960),
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 1.0
                    }, {
                        'type': 'RandomFlip',
                        'prob': 0.0
                    }],
                    [{
                        'type': 'Pad',
                        'size': (960, 960),
                        'pad_val': {
                            'img': (114, 114, 114)
                        }
                    }],
                    [{
                        'type':
                        'PackDetInputs',
                        'meta_keys':
                        ('img_id', 'img_path', 'ori_shape', 'img_shape',
                         'scale_factor', 'flip', 'flip_direction')
                    }]])
]
model = dict(
    type='RTMDet',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[103.53, 116.28, 123.675],
        std=[57.375, 57.12, 58.395],
        bgr_to_rgb=False,
        batch_augments=None),
    backbone=dict(
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=1,
        widen_factor=1,
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    neck=dict(
        type='CSPNeXtPAFPN',
        in_channels=[256, 512, 1024],
        out_channels=256,
        num_csp_blocks=3,
        expand_ratio=0.5,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    bbox_head=dict(
        type='RTMDetSepBNHead',
        num_classes=1,
        in_channels=256,
        stacked_convs=2,
        feat_channels=256,
        anchor_generator=dict(
            type='MlvlPointGenerator', offset=0, strides=[8, 16, 32]),
        bbox_coder=dict(type='DistancePointBBoxCoder'),
        loss_cls=dict(
            type='QualityFocalLoss',
            use_sigmoid=True,
            beta=2.0,
            loss_weight=1.0),
        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),
        with_objectness=False,
        exp_on_reg=True,
        share_conv=True,
        pred_kernel_size=1,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    train_cfg=dict(
        assigner=dict(type='DynamicSoftLabelAssigner', topk=13),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=30000,
        min_bbox_size=0,
        score_thr=0.001,
        nms=dict(type='nms', iou_threshold=0.65),
        max_per_img=300))
train_pipeline_stage2 = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='RandomResize',
        scale=(640, 640),
        ratio_range=(0.1, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='PackDetInputs')
]
max_epochs = 300
stage2_num_epochs = 20
base_lr = 0.004
interval = 10
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='PipelineSwitchHook',
        switch_epoch=280,
        switch_pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='RandomResize',
                scale=(640, 640),
                ratio_range=(0.1, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='PackDetInputs')
        ])
]
launcher = 'none'
work_dir = './work_dirs/balloon'

2023/06/09 23:28:39 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/09 23:28:39 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - WARNING - bbox_head.cls_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - WARNING - bbox_head.cls_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - WARNING - bbox_head.cls_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - WARNING - bbox_head.cls_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - WARNING - bbox_head.reg_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - WARNING - bbox_head.reg_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - WARNING - bbox_head.reg_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - WARNING - bbox_head.reg_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.weight:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.0.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.1.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.2.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.0.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.1.bias:weight_decay=0.0
2023/06/09 23:28:40 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.2.bias:weight_decay=0.0
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([32, 3, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stem.0.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stem.0.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stem.1.conv.weight - torch.Size([32, 32, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stem.1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stem.1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stem.2.conv.weight - torch.Size([64, 32, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stem.2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stem.2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.0.conv.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.main_conv.conv.weight - torch.Size([64, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.main_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.main_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.short_conv.conv.weight - torch.Size([64, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.short_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.short_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.final_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.final_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.final_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([64, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv1.conv.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.1.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([64, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv1.conv.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.2.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([64, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.attention.fc.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.attention.fc.bias - torch.Size([128]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.0.conv.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.main_conv.conv.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.main_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.main_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.short_conv.conv.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.short_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.short_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.final_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.final_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.final_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.1.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.2.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.3.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.4.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.5.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.attention.fc.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.attention.fc.bias - torch.Size([256]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.0.conv.weight - torch.Size([512, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.0.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.0.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.main_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.main_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.main_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.short_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.short_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.short_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.final_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.final_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.final_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.2.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.3.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.4.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.5.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.attention.fc.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.attention.fc.bias - torch.Size([512]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.0.conv.weight - torch.Size([1024, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.0.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.0.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.1.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.1.conv2.conv.weight - torch.Size([1024, 2048, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.1.conv2.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.1.conv2.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.main_conv.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.main_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.main_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.short_conv.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.short_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.short_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.final_conv.conv.weight - torch.Size([1024, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.final_conv.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.final_conv.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.2.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.attention.fc.weight - torch.Size([1024, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.attention.fc.bias - torch.Size([1024]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.0.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.conv.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.conv.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.main_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.conv.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.short_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.final_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.2.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.conv.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.main_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.conv.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.short_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.final_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.1.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.2.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.main_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.short_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.final_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.2.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.main_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.short_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.conv.weight - torch.Size([1024, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.final_conv.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.2.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.conv.weight - torch.Size([256, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.conv.weight - torch.Size([256, 1024, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.rtm_cls.0.weight - torch.Size([1, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.0.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.weight - torch.Size([1, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.weight - torch.Size([1, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.weight - torch.Size([4, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.weight - torch.Size([4, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.weight - torch.Size([4, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  
2023/06/09 23:29:46 - mmengine - INFO - Load checkpoint from https://download.openmmlab.com/mmrotate/v1.0/rotated_rtmdet/rotated_rtmdet_l-coco_pretrain-3x-dota_ms/rotated_rtmdet_l-coco_pretrain-3x-dota_ms-06d248a2.pth
2023/06/09 23:29:46 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/09 23:29:46 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/09 23:29:46 - mmengine - INFO - Checkpoints will be saved to /home/LYY/workspace/pycharm/mmdetection/workdir/balloon/work_dirs/balloon.
2023/06/09 23:29:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:29:54 - mmengine - INFO - Epoch(train)   [1][8/8]  lr: 2.8068e-05  eta: 0:38:39  time: 0.9697  data_time: 0.3632  memory: 11371  loss: 2.4898  loss_cls: 1.6274  loss_bbox: 0.8624
2023/06/09 23:29:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:29:59 - mmengine - INFO - Epoch(train)   [2][8/8]  lr: 6.0099e-05  eta: 0:31:20  time: 0.7889  data_time: 0.3201  memory: 11368  loss: 2.5114  loss_cls: 1.6687  loss_bbox: 0.8427
2023/06/09 23:30:03 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:03 - mmengine - INFO - Epoch(train)   [3][8/8]  lr: 9.2131e-05  eta: 0:28:35  time: 0.7219  data_time: 0.2964  memory: 11376  loss: 2.5370  loss_cls: 1.7238  loss_bbox: 0.8132
2023/06/09 23:30:08 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:08 - mmengine - INFO - Epoch(train)   [4][8/8]  lr: 1.2416e-04  eta: 0:27:10  time: 0.6884  data_time: 0.2852  memory: 11382  loss: 2.5624  loss_cls: 1.7926  loss_bbox: 0.7698
2023/06/09 23:30:13 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:13 - mmengine - INFO - Epoch(train)   [5][8/8]  lr: 1.5619e-04  eta: 0:26:25  time: 0.6718  data_time: 0.2817  memory: 11373  loss: 2.5245  loss_cls: 1.7916  loss_bbox: 0.7329
2023/06/09 23:30:18 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:18 - mmengine - INFO - Epoch(train)   [6][8/8]  lr: 1.8823e-04  eta: 0:25:48  time: 0.6584  data_time: 0.2767  memory: 11374  loss: 2.3696  loss_cls: 1.6863  loss_bbox: 0.6833
2023/06/09 23:30:22 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:22 - mmengine - INFO - Epoch(train)   [7][8/8]  lr: 2.2026e-04  eta: 0:25:12  time: 0.5792  data_time: 0.2446  memory: 11368  loss: 2.1734  loss_cls: 1.5487  loss_bbox: 0.6247
2023/06/09 23:30:27 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:27 - mmengine - INFO - Epoch(train)   [8][8/8]  lr: 2.5229e-04  eta: 0:24:50  time: 0.5757  data_time: 0.2403  memory: 11371  loss: 1.9358  loss_cls: 1.3717  loss_bbox: 0.5641
2023/06/09 23:30:32 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:32 - mmengine - INFO - Epoch(train)   [9][8/8]  lr: 2.8432e-04  eta: 0:24:35  time: 0.5780  data_time: 0.2431  memory: 11371  loss: 1.6725  loss_cls: 1.1639  loss_bbox: 0.5087
2023/06/09 23:30:37 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:37 - mmengine - INFO - Epoch(train)  [10][8/8]  lr: 3.1635e-04  eta: 0:24:20  time: 0.5780  data_time: 0.2443  memory: 11375  loss: 1.3892  loss_cls: 0.9293  loss_bbox: 0.4600
2023/06/09 23:30:37 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/09 23:30:39 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:30:39 - mmengine - INFO - bbox_mAP_copypaste: 0.547 0.730 0.660 0.000 0.499 0.612
2023/06/09 23:30:39 - mmengine - INFO - Epoch(val) [10][3/3]    coco/bbox_mAP: 0.5470  coco/bbox_mAP_50: 0.7300  coco/bbox_mAP_75: 0.6600  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4990  coco/bbox_mAP_l: 0.6120  data_time: 0.2036  time: 0.2742
2023/06/09 23:30:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:44 - mmengine - INFO - Epoch(train)  [11][8/8]  lr: 3.4838e-04  eta: 0:24:08  time: 0.5772  data_time: 0.2429  memory: 11373  loss: 1.1120  loss_cls: 0.6877  loss_bbox: 0.4243
2023/06/09 23:30:49 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:49 - mmengine - INFO - Epoch(train)  [12][8/8]  lr: 3.8042e-04  eta: 0:24:00  time: 0.5797  data_time: 0.2466  memory: 11375  loss: 0.9287  loss_cls: 0.5261  loss_bbox: 0.4026
2023/06/09 23:30:53 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:53 - mmengine - INFO - Epoch(train)  [13][8/8]  lr: 4.1245e-04  eta: 0:23:42  time: 0.5775  data_time: 0.2447  memory: 11370  loss: 0.8351  loss_cls: 0.4514  loss_bbox: 0.3837
2023/06/09 23:30:58 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:30:58 - mmengine - INFO - Epoch(train)  [14][8/8]  lr: 4.4448e-04  eta: 0:23:29  time: 0.5748  data_time: 0.2413  memory: 11377  loss: 0.7666  loss_cls: 0.4041  loss_bbox: 0.3625
2023/06/09 23:31:03 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:03 - mmengine - INFO - Epoch(train)  [15][8/8]  lr: 4.7651e-04  eta: 0:23:20  time: 0.5728  data_time: 0.2383  memory: 11383  loss: 0.7265  loss_cls: 0.3792  loss_bbox: 0.3473
2023/06/09 23:31:08 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:08 - mmengine - INFO - Epoch(train)  [16][8/8]  lr: 5.0854e-04  eta: 0:23:20  time: 0.5827  data_time: 0.2471  memory: 11388  loss: 0.6844  loss_cls: 0.3532  loss_bbox: 0.3311
2023/06/09 23:31:13 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:13 - mmengine - INFO - Epoch(train)  [17][8/8]  lr: 5.4058e-04  eta: 0:23:13  time: 0.5827  data_time: 0.2465  memory: 11373  loss: 0.6577  loss_cls: 0.3389  loss_bbox: 0.3188
2023/06/09 23:31:18 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:18 - mmengine - INFO - Epoch(train)  [18][8/8]  lr: 5.7261e-04  eta: 0:23:06  time: 0.5818  data_time: 0.2434  memory: 11395  loss: 0.6351  loss_cls: 0.3283  loss_bbox: 0.3068
2023/06/09 23:31:22 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:22 - mmengine - INFO - Epoch(train)  [19][8/8]  lr: 6.0464e-04  eta: 0:22:59  time: 0.5879  data_time: 0.2493  memory: 11376  loss: 0.6059  loss_cls: 0.3113  loss_bbox: 0.2946
2023/06/09 23:31:27 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:27 - mmengine - INFO - Epoch(train)  [20][8/8]  lr: 6.3667e-04  eta: 0:22:52  time: 0.5927  data_time: 0.2542  memory: 11409  loss: 0.5980  loss_cls: 0.3066  loss_bbox: 0.2915
2023/06/09 23:31:27 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/09 23:31:30 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:31:30 - mmengine - INFO - bbox_mAP_copypaste: 0.188 0.245 0.235 0.001 0.383 0.754
2023/06/09 23:31:30 - mmengine - INFO - Epoch(val) [20][3/3]    coco/bbox_mAP: 0.1880  coco/bbox_mAP_50: 0.2450  coco/bbox_mAP_75: 0.2350  coco/bbox_mAP_s: 0.0010  coco/bbox_mAP_m: 0.3830  coco/bbox_mAP_l: 0.7540  data_time: 0.0702  time: 0.1323
2023/06/09 23:31:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:35 - mmengine - INFO - Epoch(train)  [21][8/8]  lr: 6.6870e-04  eta: 0:22:46  time: 0.5948  data_time: 0.2558  memory: 11386  loss: 0.5879  loss_cls: 0.3036  loss_bbox: 0.2843
2023/06/09 23:31:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:40 - mmengine - INFO - Epoch(train)  [22][8/8]  lr: 7.0073e-04  eta: 0:22:42  time: 0.5894  data_time: 0.2495  memory: 11381  loss: 0.5738  loss_cls: 0.2923  loss_bbox: 0.2815
2023/06/09 23:31:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:44 - mmengine - INFO - Epoch(train)  [23][8/8]  lr: 7.3277e-04  eta: 0:22:35  time: 0.5888  data_time: 0.2491  memory: 11386  loss: 0.5636  loss_cls: 0.2846  loss_bbox: 0.2790
2023/06/09 23:31:49 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:49 - mmengine - INFO - Epoch(train)  [24][8/8]  lr: 7.6480e-04  eta: 0:22:31  time: 0.5935  data_time: 0.2541  memory: 11379  loss: 0.5619  loss_cls: 0.2803  loss_bbox: 0.2815
2023/06/09 23:31:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:54 - mmengine - INFO - Epoch(train)  [25][8/8]  lr: 7.9683e-04  eta: 0:22:22  time: 0.5879  data_time: 0.2498  memory: 11398  loss: 0.5636  loss_cls: 0.2801  loss_bbox: 0.2835
2023/06/09 23:31:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:31:59 - mmengine - INFO - Epoch(train)  [26][8/8]  lr: 8.2886e-04  eta: 0:22:17  time: 0.5889  data_time: 0.2517  memory: 11368  loss: 0.5566  loss_cls: 0.2741  loss_bbox: 0.2825
2023/06/09 23:32:03 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:03 - mmengine - INFO - Epoch(train)  [27][8/8]  lr: 8.6089e-04  eta: 0:22:08  time: 0.5834  data_time: 0.2473  memory: 11383  loss: 0.5445  loss_cls: 0.2661  loss_bbox: 0.2784
2023/06/09 23:32:08 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:08 - mmengine - INFO - Epoch(train)  [28][8/8]  lr: 8.9292e-04  eta: 0:22:02  time: 0.5792  data_time: 0.2435  memory: 11380  loss: 0.5258  loss_cls: 0.2490  loss_bbox: 0.2769
2023/06/09 23:32:13 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:13 - mmengine - INFO - Epoch(train)  [29][8/8]  lr: 9.2496e-04  eta: 0:21:57  time: 0.5819  data_time: 0.2472  memory: 11383  loss: 0.5276  loss_cls: 0.2502  loss_bbox: 0.2774
2023/06/09 23:32:17 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:17 - mmengine - INFO - Epoch(train)  [30][8/8]  lr: 9.5699e-04  eta: 0:21:51  time: 0.5748  data_time: 0.2403  memory: 11374  loss: 0.5241  loss_cls: 0.2495  loss_bbox: 0.2746
2023/06/09 23:32:17 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/06/09 23:32:20 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:32:20 - mmengine - INFO - bbox_mAP_copypaste: 0.157 0.238 0.172 0.002 0.211 0.707
2023/06/09 23:32:20 - mmengine - INFO - Epoch(val) [30][3/3]    coco/bbox_mAP: 0.1570  coco/bbox_mAP_50: 0.2380  coco/bbox_mAP_75: 0.1720  coco/bbox_mAP_s: 0.0020  coco/bbox_mAP_m: 0.2110  coco/bbox_mAP_l: 0.7070  data_time: 0.0690  time: 0.1302
2023/06/09 23:32:24 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:24 - mmengine - INFO - Epoch(train)  [31][8/8]  lr: 9.8902e-04  eta: 0:21:43  time: 0.5744  data_time: 0.2400  memory: 11374  loss: 0.5140  loss_cls: 0.2416  loss_bbox: 0.2724
2023/06/09 23:32:29 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:29 - mmengine - INFO - Epoch(train)  [32][8/8]  lr: 1.0211e-03  eta: 0:21:37  time: 0.5721  data_time: 0.2367  memory: 11374  loss: 0.5105  loss_cls: 0.2384  loss_bbox: 0.2721
2023/06/09 23:32:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:34 - mmengine - INFO - Epoch(train)  [33][8/8]  lr: 1.0531e-03  eta: 0:21:30  time: 0.5743  data_time: 0.2388  memory: 11370  loss: 0.5135  loss_cls: 0.2401  loss_bbox: 0.2734
2023/06/09 23:32:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:39 - mmengine - INFO - Epoch(train)  [34][8/8]  lr: 1.0851e-03  eta: 0:21:26  time: 0.5778  data_time: 0.2432  memory: 11381  loss: 0.5219  loss_cls: 0.2463  loss_bbox: 0.2756
2023/06/09 23:32:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:43 - mmengine - INFO - Epoch(train)  [35][8/8]  lr: 1.1171e-03  eta: 0:21:20  time: 0.5743  data_time: 0.2395  memory: 11377  loss: 0.5262  loss_cls: 0.2489  loss_bbox: 0.2773
2023/06/09 23:32:48 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:48 - mmengine - INFO - Epoch(train)  [36][8/8]  lr: 1.1492e-03  eta: 0:21:13  time: 0.5720  data_time: 0.2368  memory: 11380  loss: 0.5232  loss_cls: 0.2459  loss_bbox: 0.2773
2023/06/09 23:32:53 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:53 - mmengine - INFO - Epoch(train)  [37][8/8]  lr: 1.1812e-03  eta: 0:21:07  time: 0.5749  data_time: 0.2382  memory: 11400  loss: 0.5209  loss_cls: 0.2434  loss_bbox: 0.2774
2023/06/09 23:32:57 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:32:57 - mmengine - INFO - Epoch(train)  [38][8/8]  lr: 1.2132e-03  eta: 0:21:02  time: 0.5754  data_time: 0.2391  memory: 11379  loss: 0.5182  loss_cls: 0.2399  loss_bbox: 0.2783
2023/06/09 23:33:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:02 - mmengine - INFO - Epoch(train)  [39][8/8]  lr: 1.2453e-03  eta: 0:20:55  time: 0.5716  data_time: 0.2352  memory: 11376  loss: 0.5133  loss_cls: 0.2367  loss_bbox: 0.2766
2023/06/09 23:33:06 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:06 - mmengine - INFO - Epoch(train)  [40][8/8]  lr: 1.2773e-03  eta: 0:20:48  time: 0.5647  data_time: 0.2282  memory: 11393  loss: 0.5080  loss_cls: 0.2331  loss_bbox: 0.2749
2023/06/09 23:33:06 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/06/09 23:33:09 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:33:09 - mmengine - INFO - bbox_mAP_copypaste: 0.658 0.822 0.754 0.205 0.513 0.732
2023/06/09 23:33:09 - mmengine - INFO - Epoch(val) [40][3/3]    coco/bbox_mAP: 0.6580  coco/bbox_mAP_50: 0.8220  coco/bbox_mAP_75: 0.7540  coco/bbox_mAP_s: 0.2050  coco/bbox_mAP_m: 0.5130  coco/bbox_mAP_l: 0.7320  data_time: 0.0675  time: 0.1285
2023/06/09 23:33:13 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:13 - mmengine - INFO - Epoch(train)  [41][8/8]  lr: 1.3093e-03  eta: 0:20:42  time: 0.5632  data_time: 0.2272  memory: 11378  loss: 0.4992  loss_cls: 0.2276  loss_bbox: 0.2716
2023/06/09 23:33:18 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:18 - mmengine - INFO - Epoch(train)  [42][8/8]  lr: 1.3414e-03  eta: 0:20:37  time: 0.5652  data_time: 0.2297  memory: 11381  loss: 0.4911  loss_cls: 0.2222  loss_bbox: 0.2689
2023/06/09 23:33:23 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:23 - mmengine - INFO - Epoch(train)  [43][8/8]  lr: 1.3734e-03  eta: 0:20:29  time: 0.5601  data_time: 0.2263  memory: 11373  loss: 0.4859  loss_cls: 0.2192  loss_bbox: 0.2667
2023/06/09 23:33:27 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:27 - mmengine - INFO - Epoch(train)  [44][8/8]  lr: 1.4054e-03  eta: 0:20:24  time: 0.5586  data_time: 0.2241  memory: 11388  loss: 0.4798  loss_cls: 0.2175  loss_bbox: 0.2622
2023/06/09 23:33:32 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:32 - mmengine - INFO - Epoch(train)  [45][8/8]  lr: 1.4375e-03  eta: 0:20:19  time: 0.5661  data_time: 0.2316  memory: 11376  loss: 0.4780  loss_cls: 0.2185  loss_bbox: 0.2595
2023/06/09 23:33:37 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:37 - mmengine - INFO - Epoch(train)  [46][8/8]  lr: 1.4695e-03  eta: 0:20:14  time: 0.5685  data_time: 0.2343  memory: 11370  loss: 0.4791  loss_cls: 0.2204  loss_bbox: 0.2587
2023/06/09 23:33:42 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:42 - mmengine - INFO - Epoch(train)  [47][8/8]  lr: 1.5015e-03  eta: 0:20:09  time: 0.5723  data_time: 0.2372  memory: 11373  loss: 0.4766  loss_cls: 0.2171  loss_bbox: 0.2595
2023/06/09 23:33:46 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:46 - mmengine - INFO - Epoch(train)  [48][8/8]  lr: 1.5336e-03  eta: 0:20:02  time: 0.5655  data_time: 0.2306  memory: 11370  loss: 0.4902  loss_cls: 0.2275  loss_bbox: 0.2628
2023/06/09 23:33:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:50 - mmengine - INFO - Epoch(train)  [49][8/8]  lr: 1.5656e-03  eta: 0:19:56  time: 0.5684  data_time: 0.2319  memory: 11371  loss: 0.4942  loss_cls: 0.2283  loss_bbox: 0.2659
2023/06/09 23:33:55 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:33:55 - mmengine - INFO - Epoch(train)  [50][8/8]  lr: 1.5976e-03  eta: 0:19:50  time: 0.5630  data_time: 0.2274  memory: 11374  loss: 0.4947  loss_cls: 0.2274  loss_bbox: 0.2672
2023/06/09 23:33:55 - mmengine - INFO - Saving checkpoint at 50 epochs
2023/06/09 23:33:57 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:33:57 - mmengine - INFO - bbox_mAP_copypaste: 0.688 0.862 0.758 0.101 0.507 0.780
2023/06/09 23:33:57 - mmengine - INFO - Epoch(val) [50][3/3]    coco/bbox_mAP: 0.6880  coco/bbox_mAP_50: 0.8620  coco/bbox_mAP_75: 0.7580  coco/bbox_mAP_s: 0.1010  coco/bbox_mAP_m: 0.5070  coco/bbox_mAP_l: 0.7800  data_time: 0.0678  time: 0.1260
2023/06/09 23:34:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:02 - mmengine - INFO - Epoch(train)  [51][8/8]  lr: 1.6297e-03  eta: 0:19:45  time: 0.5627  data_time: 0.2270  memory: 11371  loss: 0.4958  loss_cls: 0.2263  loss_bbox: 0.2695
2023/06/09 23:34:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:07 - mmengine - INFO - Epoch(train)  [52][8/8]  lr: 1.6617e-03  eta: 0:19:40  time: 0.5616  data_time: 0.2251  memory: 11394  loss: 0.5060  loss_cls: 0.2309  loss_bbox: 0.2751
2023/06/09 23:34:12 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:12 - mmengine - INFO - Epoch(train)  [53][8/8]  lr: 1.6937e-03  eta: 0:19:36  time: 0.5641  data_time: 0.2272  memory: 11380  loss: 0.5042  loss_cls: 0.2300  loss_bbox: 0.2742
2023/06/09 23:34:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:16 - mmengine - INFO - Epoch(train)  [54][8/8]  lr: 1.7257e-03  eta: 0:19:31  time: 0.5720  data_time: 0.2347  memory: 11383  loss: 0.4954  loss_cls: 0.2221  loss_bbox: 0.2732
2023/06/09 23:34:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:21 - mmengine - INFO - Epoch(train)  [55][8/8]  lr: 1.7578e-03  eta: 0:19:26  time: 0.5749  data_time: 0.2384  memory: 11377  loss: 0.4952  loss_cls: 0.2243  loss_bbox: 0.2709
2023/06/09 23:34:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:26 - mmengine - INFO - Epoch(train)  [56][8/8]  lr: 1.7898e-03  eta: 0:19:21  time: 0.5820  data_time: 0.2450  memory: 11382  loss: 0.4972  loss_cls: 0.2268  loss_bbox: 0.2704
2023/06/09 23:34:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:30 - mmengine - INFO - Epoch(train)  [57][8/8]  lr: 1.8218e-03  eta: 0:19:15  time: 0.5761  data_time: 0.2395  memory: 11394  loss: 0.5095  loss_cls: 0.2388  loss_bbox: 0.2708
2023/06/09 23:34:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:35 - mmengine - INFO - Epoch(train)  [58][8/8]  lr: 1.8539e-03  eta: 0:19:10  time: 0.5775  data_time: 0.2404  memory: 11395  loss: 0.5220  loss_cls: 0.2454  loss_bbox: 0.2766
2023/06/09 23:34:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:39 - mmengine - INFO - Epoch(train)  [59][8/8]  lr: 1.8859e-03  eta: 0:19:04  time: 0.5678  data_time: 0.2305  memory: 11373  loss: 0.5231  loss_cls: 0.2468  loss_bbox: 0.2763
2023/06/09 23:34:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:44 - mmengine - INFO - Epoch(train)  [60][8/8]  lr: 1.9179e-03  eta: 0:19:00  time: 0.5742  data_time: 0.2378  memory: 11378  loss: 0.5241  loss_cls: 0.2472  loss_bbox: 0.2768
2023/06/09 23:34:44 - mmengine - INFO - Saving checkpoint at 60 epochs
2023/06/09 23:34:47 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:34:47 - mmengine - INFO - bbox_mAP_copypaste: 0.651 0.807 0.716 0.000 0.444 0.771
2023/06/09 23:34:47 - mmengine - INFO - Epoch(val) [60][3/3]    coco/bbox_mAP: 0.6510  coco/bbox_mAP_50: 0.8070  coco/bbox_mAP_75: 0.7160  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4440  coco/bbox_mAP_l: 0.7710  data_time: 0.0676  time: 0.1265
2023/06/09 23:34:52 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:52 - mmengine - INFO - Epoch(train)  [61][8/8]  lr: 1.9500e-03  eta: 0:18:56  time: 0.5797  data_time: 0.2433  memory: 11373  loss: 0.5146  loss_cls: 0.2400  loss_bbox: 0.2746
2023/06/09 23:34:56 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:34:56 - mmengine - INFO - Epoch(train)  [62][8/8]  lr: 1.9820e-03  eta: 0:18:51  time: 0.5747  data_time: 0.2382  memory: 11373  loss: 0.5122  loss_cls: 0.2369  loss_bbox: 0.2754
2023/06/09 23:35:01 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:01 - mmengine - INFO - Epoch(train)  [63][8/8]  lr: 2.0140e-03  eta: 0:18:45  time: 0.5762  data_time: 0.2393  memory: 11371  loss: 0.4894  loss_cls: 0.2199  loss_bbox: 0.2695
2023/06/09 23:35:06 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:06 - mmengine - INFO - Epoch(train)  [64][8/8]  lr: 2.0461e-03  eta: 0:18:40  time: 0.5763  data_time: 0.2395  memory: 11378  loss: 0.4746  loss_cls: 0.2131  loss_bbox: 0.2615
2023/06/09 23:35:10 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:10 - mmengine - INFO - Epoch(train)  [65][8/8]  lr: 2.0781e-03  eta: 0:18:35  time: 0.5796  data_time: 0.2429  memory: 11374  loss: 0.4682  loss_cls: 0.2094  loss_bbox: 0.2588
2023/06/09 23:35:15 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:15 - mmengine - INFO - Epoch(train)  [66][8/8]  lr: 2.1101e-03  eta: 0:18:30  time: 0.5720  data_time: 0.2357  memory: 11390  loss: 0.4692  loss_cls: 0.2080  loss_bbox: 0.2612
2023/06/09 23:35:20 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:20 - mmengine - INFO - Epoch(train)  [67][8/8]  lr: 2.1422e-03  eta: 0:18:27  time: 0.5747  data_time: 0.2386  memory: 11374  loss: 0.4872  loss_cls: 0.2190  loss_bbox: 0.2682
2023/06/09 23:35:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:25 - mmengine - INFO - Epoch(train)  [68][8/8]  lr: 2.1742e-03  eta: 0:18:22  time: 0.5801  data_time: 0.2439  memory: 11387  loss: 0.5123  loss_cls: 0.2353  loss_bbox: 0.2770
2023/06/09 23:35:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:30 - mmengine - INFO - Epoch(train)  [69][8/8]  lr: 2.2062e-03  eta: 0:18:18  time: 0.5899  data_time: 0.2538  memory: 11377  loss: 0.5157  loss_cls: 0.2371  loss_bbox: 0.2786
2023/06/09 23:35:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:35 - mmengine - INFO - Epoch(train)  [70][8/8]  lr: 2.2383e-03  eta: 0:18:14  time: 0.5954  data_time: 0.2576  memory: 11375  loss: 0.5252  loss_cls: 0.2402  loss_bbox: 0.2849
2023/06/09 23:35:35 - mmengine - INFO - Saving checkpoint at 70 epochs
2023/06/09 23:35:37 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:35:37 - mmengine - INFO - bbox_mAP_copypaste: 0.590 0.763 0.686 0.015 0.421 0.710
2023/06/09 23:35:37 - mmengine - INFO - Epoch(val) [70][3/3]    coco/bbox_mAP: 0.5900  coco/bbox_mAP_50: 0.7630  coco/bbox_mAP_75: 0.6860  coco/bbox_mAP_s: 0.0150  coco/bbox_mAP_m: 0.4210  coco/bbox_mAP_l: 0.7100  data_time: 0.0676  time: 0.1265
2023/06/09 23:35:42 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:42 - mmengine - INFO - Epoch(train)  [71][8/8]  lr: 2.2703e-03  eta: 0:18:09  time: 0.5932  data_time: 0.2551  memory: 11378  loss: 0.5314  loss_cls: 0.2425  loss_bbox: 0.2889
2023/06/09 23:35:47 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:47 - mmengine - INFO - Epoch(train)  [72][8/8]  lr: 2.3023e-03  eta: 0:18:04  time: 0.5968  data_time: 0.2581  memory: 11373  loss: 0.5266  loss_cls: 0.2386  loss_bbox: 0.2880
2023/06/09 23:35:51 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:51 - mmengine - INFO - Epoch(train)  [73][8/8]  lr: 2.3344e-03  eta: 0:17:59  time: 0.5906  data_time: 0.2516  memory: 11372  loss: 0.5169  loss_cls: 0.2311  loss_bbox: 0.2858
2023/06/09 23:35:56 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:35:56 - mmengine - INFO - Epoch(train)  [74][8/8]  lr: 2.3664e-03  eta: 0:17:54  time: 0.5877  data_time: 0.2487  memory: 11378  loss: 0.4985  loss_cls: 0.2191  loss_bbox: 0.2794
2023/06/09 23:36:01 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:01 - mmengine - INFO - Epoch(train)  [75][8/8]  lr: 2.3984e-03  eta: 0:17:49  time: 0.5772  data_time: 0.2379  memory: 11373  loss: 0.4953  loss_cls: 0.2174  loss_bbox: 0.2779
2023/06/09 23:36:05 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:05 - mmengine - INFO - Epoch(train)  [76][8/8]  lr: 2.4304e-03  eta: 0:17:44  time: 0.5712  data_time: 0.2336  memory: 11378  loss: 0.4955  loss_cls: 0.2160  loss_bbox: 0.2795
2023/06/09 23:36:10 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:10 - mmengine - INFO - Epoch(train)  [77][8/8]  lr: 2.4625e-03  eta: 0:17:39  time: 0.5743  data_time: 0.2366  memory: 11374  loss: 0.4969  loss_cls: 0.2167  loss_bbox: 0.2802
2023/06/09 23:36:15 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:15 - mmengine - INFO - Epoch(train)  [78][8/8]  lr: 2.4945e-03  eta: 0:17:34  time: 0.5703  data_time: 0.2332  memory: 11374  loss: 0.5020  loss_cls: 0.2218  loss_bbox: 0.2802
2023/06/09 23:36:19 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:19 - mmengine - INFO - Epoch(train)  [79][8/8]  lr: 2.5265e-03  eta: 0:17:29  time: 0.5704  data_time: 0.2323  memory: 11372  loss: 0.4951  loss_cls: 0.2172  loss_bbox: 0.2779
2023/06/09 23:36:24 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:24 - mmengine - INFO - Epoch(train)  [80][8/8]  lr: 2.5586e-03  eta: 0:17:24  time: 0.5720  data_time: 0.2336  memory: 11373  loss: 0.5050  loss_cls: 0.2233  loss_bbox: 0.2816
2023/06/09 23:36:24 - mmengine - INFO - Saving checkpoint at 80 epochs
2023/06/09 23:36:26 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:36:27 - mmengine - INFO - bbox_mAP_copypaste: 0.613 0.789 0.707 0.038 0.389 0.708
2023/06/09 23:36:27 - mmengine - INFO - Epoch(val) [80][3/3]    coco/bbox_mAP: 0.6130  coco/bbox_mAP_50: 0.7890  coco/bbox_mAP_75: 0.7070  coco/bbox_mAP_s: 0.0380  coco/bbox_mAP_m: 0.3890  coco/bbox_mAP_l: 0.7080  data_time: 0.0688  time: 0.1269
2023/06/09 23:36:31 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:31 - mmengine - INFO - Epoch(train)  [81][8/8]  lr: 2.5906e-03  eta: 0:17:19  time: 0.5753  data_time: 0.2375  memory: 11370  loss: 0.5071  loss_cls: 0.2220  loss_bbox: 0.2850
2023/06/09 23:36:36 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:36 - mmengine - INFO - Epoch(train)  [82][8/8]  lr: 2.6226e-03  eta: 0:17:15  time: 0.5761  data_time: 0.2383  memory: 11377  loss: 0.4966  loss_cls: 0.2161  loss_bbox: 0.2806
2023/06/09 23:36:41 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:41 - mmengine - INFO - Epoch(train)  [83][8/8]  lr: 2.6547e-03  eta: 0:17:09  time: 0.5747  data_time: 0.2373  memory: 11373  loss: 0.4920  loss_cls: 0.2147  loss_bbox: 0.2773
2023/06/09 23:36:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:45 - mmengine - INFO - Epoch(train)  [84][8/8]  lr: 2.6867e-03  eta: 0:17:05  time: 0.5778  data_time: 0.2408  memory: 11372  loss: 0.4954  loss_cls: 0.2181  loss_bbox: 0.2774
2023/06/09 23:36:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:50 - mmengine - INFO - Epoch(train)  [85][8/8]  lr: 2.7187e-03  eta: 0:17:00  time: 0.5798  data_time: 0.2435  memory: 11374  loss: 0.5039  loss_cls: 0.2239  loss_bbox: 0.2800
2023/06/09 23:36:55 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:55 - mmengine - INFO - Epoch(train)  [86][8/8]  lr: 2.7508e-03  eta: 0:16:55  time: 0.5774  data_time: 0.2413  memory: 11383  loss: 0.5043  loss_cls: 0.2237  loss_bbox: 0.2806
2023/06/09 23:36:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:36:59 - mmengine - INFO - Epoch(train)  [87][8/8]  lr: 2.7828e-03  eta: 0:16:50  time: 0.5761  data_time: 0.2384  memory: 11379  loss: 0.5047  loss_cls: 0.2254  loss_bbox: 0.2793
2023/06/09 23:37:04 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:04 - mmengine - INFO - Epoch(train)  [88][8/8]  lr: 2.8148e-03  eta: 0:16:46  time: 0.5808  data_time: 0.2432  memory: 11374  loss: 0.5152  loss_cls: 0.2344  loss_bbox: 0.2808
2023/06/09 23:37:09 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:09 - mmengine - INFO - Epoch(train)  [89][8/8]  lr: 2.8469e-03  eta: 0:16:41  time: 0.5797  data_time: 0.2423  memory: 11373  loss: 0.5130  loss_cls: 0.2341  loss_bbox: 0.2790
2023/06/09 23:37:14 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:14 - mmengine - INFO - Epoch(train)  [90][8/8]  lr: 2.8789e-03  eta: 0:16:36  time: 0.5810  data_time: 0.2435  memory: 11375  loss: 0.5133  loss_cls: 0.2306  loss_bbox: 0.2827
2023/06/09 23:37:14 - mmengine - INFO - Saving checkpoint at 90 epochs
2023/06/09 23:37:16 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:37:16 - mmengine - INFO - bbox_mAP_copypaste: 0.500 0.674 0.505 0.000 0.188 0.601
2023/06/09 23:37:16 - mmengine - INFO - Epoch(val) [90][3/3]    coco/bbox_mAP: 0.5000  coco/bbox_mAP_50: 0.6740  coco/bbox_mAP_75: 0.5050  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.1880  coco/bbox_mAP_l: 0.6010  data_time: 0.0679  time: 0.1251
2023/06/09 23:37:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:21 - mmengine - INFO - Epoch(train)  [91][8/8]  lr: 2.9109e-03  eta: 0:16:32  time: 0.5786  data_time: 0.2408  memory: 11383  loss: 0.5207  loss_cls: 0.2353  loss_bbox: 0.2854
2023/06/09 23:37:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:26 - mmengine - INFO - Epoch(train)  [92][8/8]  lr: 2.9430e-03  eta: 0:16:26  time: 0.5789  data_time: 0.2406  memory: 11379  loss: 0.5312  loss_cls: 0.2422  loss_bbox: 0.2890
2023/06/09 23:37:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:30 - mmengine - INFO - Epoch(train)  [93][8/8]  lr: 2.9750e-03  eta: 0:16:21  time: 0.5764  data_time: 0.2394  memory: 11382  loss: 0.5568  loss_cls: 0.2603  loss_bbox: 0.2965
2023/06/09 23:37:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:35 - mmengine - INFO - Epoch(train)  [94][8/8]  lr: 3.0070e-03  eta: 0:16:16  time: 0.5721  data_time: 0.2357  memory: 11373  loss: 0.5844  loss_cls: 0.2789  loss_bbox: 0.3055
2023/06/09 23:37:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:40 - mmengine - INFO - Epoch(train)  [95][8/8]  lr: 3.0390e-03  eta: 0:16:12  time: 0.5767  data_time: 0.2406  memory: 11391  loss: 0.6128  loss_cls: 0.2954  loss_bbox: 0.3174
2023/06/09 23:37:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:44 - mmengine - INFO - Epoch(train)  [96][8/8]  lr: 3.0711e-03  eta: 0:16:07  time: 0.5737  data_time: 0.2365  memory: 11394  loss: 0.6391  loss_cls: 0.3156  loss_bbox: 0.3235
2023/06/09 23:37:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:50 - mmengine - INFO - Epoch(train)  [97][8/8]  lr: 3.1031e-03  eta: 0:16:03  time: 0.5811  data_time: 0.2434  memory: 11392  loss: 0.6402  loss_cls: 0.3158  loss_bbox: 0.3244
2023/06/09 23:37:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:54 - mmengine - INFO - Epoch(train)  [98][8/8]  lr: 3.1351e-03  eta: 0:15:58  time: 0.5832  data_time: 0.2455  memory: 11373  loss: 0.6373  loss_cls: 0.3155  loss_bbox: 0.3218
2023/06/09 23:37:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:37:59 - mmengine - INFO - Epoch(train)  [99][8/8]  lr: 3.1672e-03  eta: 0:15:54  time: 0.5882  data_time: 0.2508  memory: 11372  loss: 0.6253  loss_cls: 0.3079  loss_bbox: 0.3174
2023/06/09 23:38:04 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:38:04 - mmengine - INFO - Epoch(train) [100][8/8]  lr: 3.1992e-03  eta: 0:15:49  time: 0.5878  data_time: 0.2502  memory: 11374  loss: 0.5882  loss_cls: 0.2789  loss_bbox: 0.3092
2023/06/09 23:38:04 - mmengine - INFO - Saving checkpoint at 100 epochs
2023/06/09 23:38:06 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:38:06 - mmengine - INFO - bbox_mAP_copypaste: 0.632 0.799 0.692 0.000 0.464 0.716
2023/06/09 23:38:06 - mmengine - INFO - Epoch(val) [100][3/3]    coco/bbox_mAP: 0.6320  coco/bbox_mAP_50: 0.7990  coco/bbox_mAP_75: 0.6920  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4640  coco/bbox_mAP_l: 0.7160  data_time: 0.0698  time: 0.1281
2023/06/09 23:38:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:38:11 - mmengine - INFO - Epoch(train) [101][8/8]  lr: 3.2312e-03  eta: 0:15:44  time: 0.5902  data_time: 0.2525  memory: 11382  loss: 0.5700  loss_cls: 0.2703  loss_bbox: 0.2997
2023/06/09 23:38:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:38:16 - mmengine - INFO - Epoch(train) [102][8/8]  lr: 3.2633e-03  eta: 0:15:39  time: 0.5878  data_time: 0.2508  memory: 11380  loss: 0.5403  loss_cls: 0.2506  loss_bbox: 0.2897
2023/06/09 23:38:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:38:21 - mmengine - INFO - Epoch(train) [103][8/8]  lr: 3.2953e-03  eta: 0:15:35  time: 0.5872  data_time: 0.2505  memory: 11368  loss: 0.5238  loss_cls: 0.2415  loss_bbox: 0.2823
2023/06/09 23:38:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:38:26 - mmengine - INFO - Epoch(train) [104][8/8]  lr: 3.3273e-03  eta: 0:15:31  time: 0.5899  data_time: 0.2531  memory: 11377  loss: 0.5144  loss_cls: 0.2367  loss_bbox: 0.2777
2023/06/09 23:38:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:38:30 - mmengine - INFO - Epoch(train) [105][8/8]  lr: 3.3594e-03  eta: 0:15:25  time: 0.5856  data_time: 0.2484  memory: 11390  loss: 0.5136  loss_cls: 0.2342  loss_bbox: 0.2795
2023/06/09 23:38:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:38:35 - mmengine - INFO - Epoch(train) [106][8/8]  lr: 3.3914e-03  eta: 0:15:21  time: 0.5889  data_time: 0.2511  memory: 11388  loss: 0.5109  loss_cls: 0.2317  loss_bbox: 0.2791
2023/06/09 23:38:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:38:40 - mmengine - INFO - Epoch(train) [107][8/8]  lr: 3.4234e-03  eta: 0:15:17  time: 0.5905  data_time: 0.2525  memory: 11380  loss: 0.4986  loss_cls: 0.2219  loss_bbox: 0.2766
2023/06/09 23:38:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:38:45 - mmengine - INFO - Epoch(train) [108][8/8]  lr: 3.4555e-03  eta: 0:15:12  time: 0.5948  data_time: 0.2568  memory: 11374  loss: 0.4996  loss_cls: 0.2218  loss_bbox: 0.2778
2023/06/09 23:38:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:38:50 - mmengine - INFO - Epoch(train) [109][8/8]  lr: 3.4875e-03  eta: 0:15:07  time: 0.5885  data_time: 0.2497  memory: 11370  loss: 0.5039  loss_cls: 0.2236  loss_bbox: 0.2803
2023/06/09 23:38:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:38:54 - mmengine - INFO - Epoch(train) [110][8/8]  lr: 3.5195e-03  eta: 0:15:02  time: 0.5873  data_time: 0.2475  memory: 11379  loss: 0.5007  loss_cls: 0.2186  loss_bbox: 0.2821
2023/06/09 23:38:54 - mmengine - INFO - Saving checkpoint at 110 epochs
2023/06/09 23:38:57 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:38:57 - mmengine - INFO - bbox_mAP_copypaste: 0.632 0.826 0.734 0.017 0.410 0.726
2023/06/09 23:38:57 - mmengine - INFO - Epoch(val) [110][3/3]    coco/bbox_mAP: 0.6320  coco/bbox_mAP_50: 0.8260  coco/bbox_mAP_75: 0.7340  coco/bbox_mAP_s: 0.0170  coco/bbox_mAP_m: 0.4100  coco/bbox_mAP_l: 0.7260  data_time: 0.0679  time: 0.1253
2023/06/09 23:39:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:02 - mmengine - INFO - Epoch(train) [111][8/8]  lr: 3.5516e-03  eta: 0:14:58  time: 0.5941  data_time: 0.2546  memory: 11377  loss: 0.4928  loss_cls: 0.2146  loss_bbox: 0.2783
2023/06/09 23:39:06 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:06 - mmengine - INFO - Epoch(train) [112][8/8]  lr: 3.5836e-03  eta: 0:14:53  time: 0.5868  data_time: 0.2478  memory: 11387  loss: 0.4988  loss_cls: 0.2217  loss_bbox: 0.2771
2023/06/09 23:39:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:11 - mmengine - INFO - Epoch(train) [113][8/8]  lr: 3.6156e-03  eta: 0:14:49  time: 0.5886  data_time: 0.2486  memory: 11375  loss: 0.5083  loss_cls: 0.2276  loss_bbox: 0.2807
2023/06/09 23:39:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:16 - mmengine - INFO - Epoch(train) [114][8/8]  lr: 3.6477e-03  eta: 0:14:44  time: 0.5847  data_time: 0.2446  memory: 11371  loss: 0.5178  loss_cls: 0.2332  loss_bbox: 0.2846
2023/06/09 23:39:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:21 - mmengine - INFO - Epoch(train) [115][8/8]  lr: 3.6797e-03  eta: 0:14:39  time: 0.5845  data_time: 0.2441  memory: 11372  loss: 0.5186  loss_cls: 0.2332  loss_bbox: 0.2854
2023/06/09 23:39:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:26 - mmengine - INFO - Epoch(train) [116][8/8]  lr: 3.7117e-03  eta: 0:14:34  time: 0.5862  data_time: 0.2474  memory: 11372  loss: 0.5154  loss_cls: 0.2315  loss_bbox: 0.2839
2023/06/09 23:39:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:30 - mmengine - INFO - Epoch(train) [117][8/8]  lr: 3.7437e-03  eta: 0:14:29  time: 0.5798  data_time: 0.2411  memory: 11371  loss: 0.5246  loss_cls: 0.2374  loss_bbox: 0.2872
2023/06/09 23:39:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:35 - mmengine - INFO - Epoch(train) [118][8/8]  lr: 3.7758e-03  eta: 0:14:25  time: 0.5868  data_time: 0.2478  memory: 11374  loss: 0.5277  loss_cls: 0.2390  loss_bbox: 0.2887
2023/06/09 23:39:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:40 - mmengine - INFO - Epoch(train) [119][8/8]  lr: 3.8078e-03  eta: 0:14:20  time: 0.5798  data_time: 0.2413  memory: 11375  loss: 0.5246  loss_cls: 0.2359  loss_bbox: 0.2887
2023/06/09 23:39:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:45 - mmengine - INFO - Epoch(train) [120][8/8]  lr: 3.8398e-03  eta: 0:14:16  time: 0.5866  data_time: 0.2485  memory: 11378  loss: 0.5085  loss_cls: 0.2250  loss_bbox: 0.2836
2023/06/09 23:39:45 - mmengine - INFO - Saving checkpoint at 120 epochs
2023/06/09 23:39:47 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:39:47 - mmengine - INFO - bbox_mAP_copypaste: 0.596 0.772 0.703 0.050 0.460 0.664
2023/06/09 23:39:47 - mmengine - INFO - Epoch(val) [120][3/3]    coco/bbox_mAP: 0.5960  coco/bbox_mAP_50: 0.7720  coco/bbox_mAP_75: 0.7030  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.4600  coco/bbox_mAP_l: 0.6640  data_time: 0.0683  time: 0.1251
2023/06/09 23:39:52 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:52 - mmengine - INFO - Epoch(train) [121][8/8]  lr: 3.8719e-03  eta: 0:14:11  time: 0.5898  data_time: 0.2524  memory: 11377  loss: 0.5079  loss_cls: 0.2239  loss_bbox: 0.2840
2023/06/09 23:39:57 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:39:57 - mmengine - INFO - Epoch(train) [122][8/8]  lr: 3.9039e-03  eta: 0:14:06  time: 0.5908  data_time: 0.2532  memory: 11375  loss: 0.5045  loss_cls: 0.2216  loss_bbox: 0.2828
2023/06/09 23:40:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:02 - mmengine - INFO - Epoch(train) [123][8/8]  lr: 3.9359e-03  eta: 0:14:02  time: 0.5927  data_time: 0.2547  memory: 11373  loss: 0.5020  loss_cls: 0.2213  loss_bbox: 0.2807
2023/06/09 23:40:06 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:06 - mmengine - INFO - Epoch(train) [124][8/8]  lr: 3.9680e-03  eta: 0:13:57  time: 0.5885  data_time: 0.2510  memory: 11373  loss: 0.5039  loss_cls: 0.2255  loss_bbox: 0.2784
2023/06/09 23:40:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:11 - mmengine - INFO - Epoch(train) [125][8/8]  lr: 4.0000e-03  eta: 0:13:52  time: 0.5882  data_time: 0.2500  memory: 11392  loss: 0.5064  loss_cls: 0.2270  loss_bbox: 0.2793
2023/06/09 23:40:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:16 - mmengine - INFO - Epoch(train) [126][8/8]  lr: 4.0000e-03  eta: 0:13:47  time: 0.5865  data_time: 0.2473  memory: 11376  loss: 0.5033  loss_cls: 0.2234  loss_bbox: 0.2800
2023/06/09 23:40:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:21 - mmengine - INFO - Epoch(train) [127][8/8]  lr: 4.0000e-03  eta: 0:13:43  time: 0.5872  data_time: 0.2466  memory: 11372  loss: 0.5014  loss_cls: 0.2224  loss_bbox: 0.2790
2023/06/09 23:40:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:26 - mmengine - INFO - Epoch(train) [128][8/8]  lr: 4.0000e-03  eta: 0:13:38  time: 0.5827  data_time: 0.2415  memory: 11396  loss: 0.4996  loss_cls: 0.2226  loss_bbox: 0.2770
2023/06/09 23:40:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:30 - mmengine - INFO - Epoch(train) [129][8/8]  lr: 4.0000e-03  eta: 0:13:33  time: 0.5810  data_time: 0.2406  memory: 11374  loss: 0.4911  loss_cls: 0.2161  loss_bbox: 0.2750
2023/06/09 23:40:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:35 - mmengine - INFO - Epoch(train) [130][8/8]  lr: 4.0000e-03  eta: 0:13:28  time: 0.5760  data_time: 0.2351  memory: 11376  loss: 0.4964  loss_cls: 0.2206  loss_bbox: 0.2758
2023/06/09 23:40:35 - mmengine - INFO - Saving checkpoint at 130 epochs
2023/06/09 23:40:37 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:40:37 - mmengine - INFO - bbox_mAP_copypaste: 0.567 0.733 0.669 0.025 0.427 0.668
2023/06/09 23:40:37 - mmengine - INFO - Epoch(val) [130][3/3]    coco/bbox_mAP: 0.5670  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.6690  coco/bbox_mAP_s: 0.0250  coco/bbox_mAP_m: 0.4270  coco/bbox_mAP_l: 0.6680  data_time: 0.0678  time: 0.1235
2023/06/09 23:40:42 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:42 - mmengine - INFO - Epoch(train) [131][8/8]  lr: 4.0000e-03  eta: 0:13:23  time: 0.5775  data_time: 0.2370  memory: 11374  loss: 0.4913  loss_cls: 0.2156  loss_bbox: 0.2756
2023/06/09 23:40:46 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:46 - mmengine - INFO - Epoch(train) [132][8/8]  lr: 4.0000e-03  eta: 0:13:18  time: 0.5705  data_time: 0.2310  memory: 11372  loss: 0.5052  loss_cls: 0.2240  loss_bbox: 0.2813
2023/06/09 23:40:51 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:51 - mmengine - INFO - Epoch(train) [133][8/8]  lr: 4.0000e-03  eta: 0:13:13  time: 0.5666  data_time: 0.2281  memory: 11376  loss: 0.5133  loss_cls: 0.2298  loss_bbox: 0.2835
2023/06/09 23:40:56 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:40:56 - mmengine - INFO - Epoch(train) [134][8/8]  lr: 4.0000e-03  eta: 0:13:08  time: 0.5655  data_time: 0.2271  memory: 11376  loss: 0.5348  loss_cls: 0.2429  loss_bbox: 0.2919
2023/06/09 23:41:00 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:00 - mmengine - INFO - Epoch(train) [135][8/8]  lr: 4.0000e-03  eta: 0:13:03  time: 0.5657  data_time: 0.2280  memory: 11376  loss: 0.5459  loss_cls: 0.2531  loss_bbox: 0.2928
2023/06/09 23:41:05 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:05 - mmengine - INFO - Epoch(train) [136][8/8]  lr: 4.0000e-03  eta: 0:12:59  time: 0.5716  data_time: 0.2344  memory: 11374  loss: 0.5498  loss_cls: 0.2576  loss_bbox: 0.2922
2023/06/09 23:41:10 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:10 - mmengine - INFO - Epoch(train) [137][8/8]  lr: 4.0000e-03  eta: 0:12:54  time: 0.5695  data_time: 0.2323  memory: 11370  loss: 0.5460  loss_cls: 0.2560  loss_bbox: 0.2900
2023/06/09 23:41:14 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:14 - mmengine - INFO - Epoch(train) [138][8/8]  lr: 4.0000e-03  eta: 0:12:49  time: 0.5716  data_time: 0.2347  memory: 11373  loss: 0.5422  loss_cls: 0.2519  loss_bbox: 0.2903
2023/06/09 23:41:19 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:19 - mmengine - INFO - Epoch(train) [139][8/8]  lr: 4.0000e-03  eta: 0:12:44  time: 0.5707  data_time: 0.2341  memory: 11372  loss: 0.5268  loss_cls: 0.2429  loss_bbox: 0.2839
2023/06/09 23:41:24 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:24 - mmengine - INFO - Epoch(train) [140][8/8]  lr: 4.0000e-03  eta: 0:12:39  time: 0.5724  data_time: 0.2372  memory: 11377  loss: 0.5085  loss_cls: 0.2305  loss_bbox: 0.2779
2023/06/09 23:41:24 - mmengine - INFO - Saving checkpoint at 140 epochs
2023/06/09 23:41:26 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:41:26 - mmengine - INFO - bbox_mAP_copypaste: 0.672 0.827 0.791 0.001 0.490 0.763
2023/06/09 23:41:26 - mmengine - INFO - Epoch(val) [140][3/3]    coco/bbox_mAP: 0.6720  coco/bbox_mAP_50: 0.8270  coco/bbox_mAP_75: 0.7910  coco/bbox_mAP_s: 0.0010  coco/bbox_mAP_m: 0.4900  coco/bbox_mAP_l: 0.7630  data_time: 0.0669  time: 0.1228
2023/06/09 23:41:31 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:31 - mmengine - INFO - Epoch(train) [141][8/8]  lr: 4.0000e-03  eta: 0:12:34  time: 0.5727  data_time: 0.2375  memory: 11373  loss: 0.5028  loss_cls: 0.2258  loss_bbox: 0.2770
2023/06/09 23:41:36 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:36 - mmengine - INFO - Epoch(train) [142][8/8]  lr: 4.0000e-03  eta: 0:12:30  time: 0.5818  data_time: 0.2464  memory: 11371  loss: 0.5004  loss_cls: 0.2176  loss_bbox: 0.2827
2023/06/09 23:41:41 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:41 - mmengine - INFO - Epoch(train) [143][8/8]  lr: 4.0000e-03  eta: 0:12:25  time: 0.5839  data_time: 0.2485  memory: 11371  loss: 0.4916  loss_cls: 0.2126  loss_bbox: 0.2790
2023/06/09 23:41:46 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:46 - mmengine - INFO - Epoch(train) [144][8/8]  lr: 4.0000e-03  eta: 0:12:21  time: 0.5926  data_time: 0.2579  memory: 11372  loss: 0.4822  loss_cls: 0.2072  loss_bbox: 0.2750
2023/06/09 23:41:51 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:51 - mmengine - INFO - Epoch(train) [145][8/8]  lr: 4.0000e-03  eta: 0:12:16  time: 0.5983  data_time: 0.2631  memory: 11383  loss: 0.4884  loss_cls: 0.2151  loss_bbox: 0.2733
2023/06/09 23:41:55 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:41:55 - mmengine - INFO - Epoch(train) [146][8/8]  lr: 4.0000e-03  eta: 0:12:11  time: 0.5917  data_time: 0.2552  memory: 11371  loss: 0.4840  loss_cls: 0.2129  loss_bbox: 0.2710
2023/06/09 23:42:00 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:00 - mmengine - INFO - Epoch(train) [147][8/8]  lr: 4.0000e-03  eta: 0:12:06  time: 0.5866  data_time: 0.2494  memory: 11381  loss: 0.4724  loss_cls: 0.2058  loss_bbox: 0.2666
2023/06/09 23:42:05 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:05 - mmengine - INFO - Epoch(train) [148][8/8]  lr: 4.0000e-03  eta: 0:12:02  time: 0.5879  data_time: 0.2514  memory: 11373  loss: 0.4660  loss_cls: 0.2051  loss_bbox: 0.2609
2023/06/09 23:42:10 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:10 - mmengine - INFO - Epoch(train) [149][8/8]  lr: 4.0000e-03  eta: 0:11:57  time: 0.5862  data_time: 0.2506  memory: 11389  loss: 0.4626  loss_cls: 0.2031  loss_bbox: 0.2595
2023/06/09 23:42:14 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:14 - mmengine - INFO - Epoch(train) [150][8/8]  lr: 4.0000e-03  eta: 0:11:52  time: 0.5803  data_time: 0.2444  memory: 11383  loss: 0.4503  loss_cls: 0.1933  loss_bbox: 0.2569
2023/06/09 23:42:14 - mmengine - INFO - Saving checkpoint at 150 epochs
2023/06/09 23:42:17 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:42:17 - mmengine - INFO - bbox_mAP_copypaste: 0.644 0.799 0.759 0.000 0.463 0.735
2023/06/09 23:42:17 - mmengine - INFO - Epoch(val) [150][3/3]    coco/bbox_mAP: 0.6440  coco/bbox_mAP_50: 0.7990  coco/bbox_mAP_75: 0.7590  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4630  coco/bbox_mAP_l: 0.7350  data_time: 0.0675  time: 0.1231
2023/06/09 23:42:22 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:22 - mmengine - INFO - Epoch(train) [151][8/8]  lr: 3.9997e-03  eta: 0:11:48  time: 0.5802  data_time: 0.2450  memory: 11377  loss: 0.4496  loss_cls: 0.1927  loss_bbox: 0.2569
2023/06/09 23:42:27 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:27 - mmengine - INFO - Epoch(train) [152][8/8]  lr: 3.9985e-03  eta: 0:11:43  time: 0.5890  data_time: 0.2551  memory: 11368  loss: 0.4411  loss_cls: 0.1871  loss_bbox: 0.2540
2023/06/09 23:42:31 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:31 - mmengine - INFO - Epoch(train) [153][8/8]  lr: 3.9966e-03  eta: 0:11:38  time: 0.5919  data_time: 0.2575  memory: 11372  loss: 0.4398  loss_cls: 0.1868  loss_bbox: 0.2530
2023/06/09 23:42:36 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:36 - mmengine - INFO - Epoch(train) [154][8/8]  lr: 3.9937e-03  eta: 0:11:33  time: 0.5769  data_time: 0.2422  memory: 11371  loss: 0.4374  loss_cls: 0.1826  loss_bbox: 0.2548
2023/06/09 23:42:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:40 - mmengine - INFO - Epoch(train) [155][8/8]  lr: 3.9901e-03  eta: 0:11:28  time: 0.5780  data_time: 0.2425  memory: 11373  loss: 0.4390  loss_cls: 0.1833  loss_bbox: 0.2557
2023/06/09 23:42:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:45 - mmengine - INFO - Epoch(train) [156][8/8]  lr: 3.9856e-03  eta: 0:11:23  time: 0.5683  data_time: 0.2329  memory: 11373  loss: 0.4427  loss_cls: 0.1857  loss_bbox: 0.2570
2023/06/09 23:42:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:50 - mmengine - INFO - Epoch(train) [157][8/8]  lr: 3.9803e-03  eta: 0:11:18  time: 0.5658  data_time: 0.2300  memory: 11377  loss: 0.4341  loss_cls: 0.1796  loss_bbox: 0.2545
2023/06/09 23:42:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:54 - mmengine - INFO - Epoch(train) [158][8/8]  lr: 3.9742e-03  eta: 0:11:14  time: 0.5685  data_time: 0.2322  memory: 11377  loss: 0.4357  loss_cls: 0.1785  loss_bbox: 0.2572
2023/06/09 23:42:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:42:59 - mmengine - INFO - Epoch(train) [159][8/8]  lr: 3.9673e-03  eta: 0:11:09  time: 0.5715  data_time: 0.2369  memory: 11370  loss: 0.4385  loss_cls: 0.1789  loss_bbox: 0.2596
2023/06/09 23:43:04 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:43:04 - mmengine - INFO - Epoch(train) [160][8/8]  lr: 3.9595e-03  eta: 0:11:04  time: 0.5765  data_time: 0.2417  memory: 11378  loss: 0.4471  loss_cls: 0.1847  loss_bbox: 0.2624
2023/06/09 23:43:04 - mmengine - INFO - Saving checkpoint at 160 epochs
2023/06/09 23:43:06 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:43:06 - mmengine - INFO - bbox_mAP_copypaste: 0.660 0.830 0.750 0.031 0.535 0.757
2023/06/09 23:43:06 - mmengine - INFO - Epoch(val) [160][3/3]    coco/bbox_mAP: 0.6600  coco/bbox_mAP_50: 0.8300  coco/bbox_mAP_75: 0.7500  coco/bbox_mAP_s: 0.0310  coco/bbox_mAP_m: 0.5350  coco/bbox_mAP_l: 0.7570  data_time: 0.0676  time: 0.1240
2023/06/09 23:43:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:43:11 - mmengine - INFO - Epoch(train) [161][8/8]  lr: 3.9509e-03  eta: 0:11:00  time: 0.5794  data_time: 0.2446  memory: 11371  loss: 0.4475  loss_cls: 0.1860  loss_bbox: 0.2615
2023/06/09 23:43:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:43:16 - mmengine - INFO - Epoch(train) [162][8/8]  lr: 3.9415e-03  eta: 0:10:55  time: 0.5878  data_time: 0.2525  memory: 11371  loss: 0.4547  loss_cls: 0.1900  loss_bbox: 0.2647
2023/06/09 23:43:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:43:21 - mmengine - INFO - Epoch(train) [163][8/8]  lr: 3.9313e-03  eta: 0:10:50  time: 0.5837  data_time: 0.2481  memory: 11377  loss: 0.4726  loss_cls: 0.1996  loss_bbox: 0.2731
2023/06/09 23:43:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:43:26 - mmengine - INFO - Epoch(train) [164][8/8]  lr: 3.9203e-03  eta: 0:10:45  time: 0.5820  data_time: 0.2465  memory: 11376  loss: 0.4857  loss_cls: 0.2064  loss_bbox: 0.2793
2023/06/09 23:43:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:43:30 - mmengine - INFO - Epoch(train) [165][8/8]  lr: 3.9085e-03  eta: 0:10:40  time: 0.5772  data_time: 0.2405  memory: 11383  loss: 0.4922  loss_cls: 0.2102  loss_bbox: 0.2820
2023/06/09 23:43:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:43:35 - mmengine - INFO - Epoch(train) [166][8/8]  lr: 3.8959e-03  eta: 0:10:36  time: 0.5781  data_time: 0.2406  memory: 11380  loss: 0.4863  loss_cls: 0.2064  loss_bbox: 0.2799
2023/06/09 23:43:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:43:39 - mmengine - INFO - Epoch(train) [167][8/8]  lr: 3.8826e-03  eta: 0:10:31  time: 0.5758  data_time: 0.2375  memory: 11380  loss: 0.4800  loss_cls: 0.2036  loss_bbox: 0.2764
2023/06/09 23:43:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:43:44 - mmengine - INFO - Epoch(train) [168][8/8]  lr: 3.8684e-03  eta: 0:10:26  time: 0.5735  data_time: 0.2350  memory: 11375  loss: 0.4744  loss_cls: 0.1999  loss_bbox: 0.2745
2023/06/09 23:43:49 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:43:49 - mmengine - INFO - Epoch(train) [169][8/8]  lr: 3.8535e-03  eta: 0:10:22  time: 0.5815  data_time: 0.2421  memory: 11376  loss: 0.4517  loss_cls: 0.1875  loss_bbox: 0.2642
2023/06/09 23:43:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:43:54 - mmengine - INFO - Epoch(train) [170][8/8]  lr: 3.8378e-03  eta: 0:10:17  time: 0.5773  data_time: 0.2376  memory: 11381  loss: 0.4383  loss_cls: 0.1807  loss_bbox: 0.2576
2023/06/09 23:43:54 - mmengine - INFO - Saving checkpoint at 170 epochs
2023/06/09 23:43:56 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:43:56 - mmengine - INFO - bbox_mAP_copypaste: 0.710 0.840 0.828 0.000 0.648 0.773
2023/06/09 23:43:56 - mmengine - INFO - Epoch(val) [170][3/3]    coco/bbox_mAP: 0.7100  coco/bbox_mAP_50: 0.8400  coco/bbox_mAP_75: 0.8280  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.6480  coco/bbox_mAP_l: 0.7730  data_time: 0.0688  time: 0.1245
2023/06/09 23:44:01 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:01 - mmengine - INFO - Epoch(train) [171][8/8]  lr: 3.8213e-03  eta: 0:10:12  time: 0.5787  data_time: 0.2396  memory: 11369  loss: 0.4215  loss_cls: 0.1705  loss_bbox: 0.2510
2023/06/09 23:44:05 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:05 - mmengine - INFO - Epoch(train) [172][8/8]  lr: 3.8041e-03  eta: 0:10:07  time: 0.5746  data_time: 0.2362  memory: 11375  loss: 0.4139  loss_cls: 0.1663  loss_bbox: 0.2475
2023/06/09 23:44:10 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:10 - mmengine - INFO - Epoch(train) [173][8/8]  lr: 3.7861e-03  eta: 0:10:02  time: 0.5768  data_time: 0.2397  memory: 11376  loss: 0.4100  loss_cls: 0.1638  loss_bbox: 0.2462
2023/06/09 23:44:15 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:15 - mmengine - INFO - Epoch(train) [174][8/8]  lr: 3.7674e-03  eta: 0:09:58  time: 0.5818  data_time: 0.2459  memory: 11370  loss: 0.4063  loss_cls: 0.1628  loss_bbox: 0.2435
2023/06/09 23:44:20 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:20 - mmengine - INFO - Epoch(train) [175][8/8]  lr: 3.7479e-03  eta: 0:09:53  time: 0.5844  data_time: 0.2487  memory: 11381  loss: 0.4062  loss_cls: 0.1620  loss_bbox: 0.2443
2023/06/09 23:44:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:25 - mmengine - INFO - Epoch(train) [176][8/8]  lr: 3.7278e-03  eta: 0:09:48  time: 0.5838  data_time: 0.2480  memory: 11372  loss: 0.4062  loss_cls: 0.1627  loss_bbox: 0.2435
2023/06/09 23:44:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:30 - mmengine - INFO - Epoch(train) [177][8/8]  lr: 3.7069e-03  eta: 0:09:44  time: 0.5867  data_time: 0.2505  memory: 11374  loss: 0.3986  loss_cls: 0.1574  loss_bbox: 0.2412
2023/06/09 23:44:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:34 - mmengine - INFO - Epoch(train) [178][8/8]  lr: 3.6853e-03  eta: 0:09:39  time: 0.5893  data_time: 0.2528  memory: 11378  loss: 0.3992  loss_cls: 0.1579  loss_bbox: 0.2413
2023/06/09 23:44:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:39 - mmengine - INFO - Epoch(train) [179][8/8]  lr: 3.6630e-03  eta: 0:09:34  time: 0.5881  data_time: 0.2504  memory: 11394  loss: 0.3959  loss_cls: 0.1573  loss_bbox: 0.2386
2023/06/09 23:44:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:44 - mmengine - INFO - Epoch(train) [180][8/8]  lr: 3.6401e-03  eta: 0:09:29  time: 0.5808  data_time: 0.2427  memory: 11372  loss: 0.3939  loss_cls: 0.1563  loss_bbox: 0.2375
2023/06/09 23:44:44 - mmengine - INFO - Saving checkpoint at 180 epochs
2023/06/09 23:44:46 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:44:46 - mmengine - INFO - bbox_mAP_copypaste: 0.677 0.856 0.776 0.086 0.491 0.777
2023/06/09 23:44:46 - mmengine - INFO - Epoch(val) [180][3/3]    coco/bbox_mAP: 0.6770  coco/bbox_mAP_50: 0.8560  coco/bbox_mAP_75: 0.7760  coco/bbox_mAP_s: 0.0860  coco/bbox_mAP_m: 0.4910  coco/bbox_mAP_l: 0.7770  data_time: 0.0673  time: 0.1248
2023/06/09 23:44:51 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:51 - mmengine - INFO - Epoch(train) [181][8/8]  lr: 3.6164e-03  eta: 0:09:24  time: 0.5735  data_time: 0.2342  memory: 11371  loss: 0.3924  loss_cls: 0.1565  loss_bbox: 0.2359
2023/06/09 23:44:56 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:44:56 - mmengine - INFO - Epoch(train) [182][8/8]  lr: 3.5921e-03  eta: 0:09:20  time: 0.5758  data_time: 0.2361  memory: 11373  loss: 0.3896  loss_cls: 0.1540  loss_bbox: 0.2356
2023/06/09 23:45:00 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:00 - mmengine - INFO - Epoch(train) [183][8/8]  lr: 3.5671e-03  eta: 0:09:15  time: 0.5718  data_time: 0.2321  memory: 11368  loss: 0.3858  loss_cls: 0.1548  loss_bbox: 0.2310
2023/06/09 23:45:05 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:05 - mmengine - INFO - Epoch(train) [184][8/8]  lr: 3.5415e-03  eta: 0:09:10  time: 0.5690  data_time: 0.2293  memory: 11368  loss: 0.3786  loss_cls: 0.1515  loss_bbox: 0.2271
2023/06/09 23:45:09 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:09 - mmengine - INFO - Epoch(train) [185][8/8]  lr: 3.5153e-03  eta: 0:09:05  time: 0.5676  data_time: 0.2274  memory: 11371  loss: 0.3691  loss_cls: 0.1463  loss_bbox: 0.2228
2023/06/09 23:45:14 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:14 - mmengine - INFO - Epoch(train) [186][8/8]  lr: 3.4884e-03  eta: 0:09:00  time: 0.5706  data_time: 0.2303  memory: 11370  loss: 0.3755  loss_cls: 0.1509  loss_bbox: 0.2246
2023/06/09 23:45:19 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:19 - mmengine - INFO - Epoch(train) [187][8/8]  lr: 3.4610e-03  eta: 0:08:56  time: 0.5752  data_time: 0.2372  memory: 11375  loss: 0.3804  loss_cls: 0.1552  loss_bbox: 0.2252
2023/06/09 23:45:24 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:24 - mmengine - INFO - Epoch(train) [188][8/8]  lr: 3.4329e-03  eta: 0:08:51  time: 0.5826  data_time: 0.2461  memory: 11368  loss: 0.3850  loss_cls: 0.1600  loss_bbox: 0.2249
2023/06/09 23:45:29 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:29 - mmengine - INFO - Epoch(train) [189][8/8]  lr: 3.4043e-03  eta: 0:08:47  time: 0.5892  data_time: 0.2536  memory: 11372  loss: 0.3954  loss_cls: 0.1665  loss_bbox: 0.2290
2023/06/09 23:45:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:34 - mmengine - INFO - Epoch(train) [190][8/8]  lr: 3.3750e-03  eta: 0:08:42  time: 0.5954  data_time: 0.2597  memory: 11378  loss: 0.4029  loss_cls: 0.1706  loss_bbox: 0.2323
2023/06/09 23:45:34 - mmengine - INFO - Saving checkpoint at 190 epochs
2023/06/09 23:45:36 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:45:36 - mmengine - INFO - bbox_mAP_copypaste: 0.722 0.864 0.820 0.050 0.634 0.792
2023/06/09 23:45:36 - mmengine - INFO - Epoch(val) [190][3/3]    coco/bbox_mAP: 0.7220  coco/bbox_mAP_50: 0.8640  coco/bbox_mAP_75: 0.8200  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6340  coco/bbox_mAP_l: 0.7920  data_time: 0.0689  time: 0.1234
2023/06/09 23:45:41 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:41 - mmengine - INFO - Epoch(train) [191][8/8]  lr: 3.3453e-03  eta: 0:08:37  time: 0.5888  data_time: 0.2542  memory: 11374  loss: 0.4136  loss_cls: 0.1755  loss_bbox: 0.2382
2023/06/09 23:45:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:45 - mmengine - INFO - Epoch(train) [192][8/8]  lr: 3.3149e-03  eta: 0:08:32  time: 0.5894  data_time: 0.2547  memory: 11375  loss: 0.4248  loss_cls: 0.1816  loss_bbox: 0.2432
2023/06/09 23:45:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:50 - mmengine - INFO - Epoch(train) [193][8/8]  lr: 3.2841e-03  eta: 0:08:27  time: 0.5879  data_time: 0.2529  memory: 11369  loss: 0.4177  loss_cls: 0.1762  loss_bbox: 0.2415
2023/06/09 23:45:55 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:45:55 - mmengine - INFO - Epoch(train) [194][8/8]  lr: 3.2527e-03  eta: 0:08:23  time: 0.5766  data_time: 0.2405  memory: 11381  loss: 0.4130  loss_cls: 0.1725  loss_bbox: 0.2405
2023/06/09 23:46:00 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:00 - mmengine - INFO - Epoch(train) [195][8/8]  lr: 3.2208e-03  eta: 0:08:18  time: 0.5737  data_time: 0.2370  memory: 11379  loss: 0.4096  loss_cls: 0.1699  loss_bbox: 0.2397
2023/06/09 23:46:04 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:04 - mmengine - INFO - Epoch(train) [196][8/8]  lr: 3.1884e-03  eta: 0:08:13  time: 0.5709  data_time: 0.2342  memory: 11374  loss: 0.3984  loss_cls: 0.1640  loss_bbox: 0.2345
2023/06/09 23:46:09 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:09 - mmengine - INFO - Epoch(train) [197][8/8]  lr: 3.1556e-03  eta: 0:08:08  time: 0.5745  data_time: 0.2377  memory: 11372  loss: 0.3940  loss_cls: 0.1636  loss_bbox: 0.2305
2023/06/09 23:46:13 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:13 - mmengine - INFO - Epoch(train) [198][8/8]  lr: 3.1223e-03  eta: 0:08:03  time: 0.5695  data_time: 0.2332  memory: 11368  loss: 0.3931  loss_cls: 0.1653  loss_bbox: 0.2278
2023/06/09 23:46:18 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:18 - mmengine - INFO - Epoch(train) [199][8/8]  lr: 3.0885e-03  eta: 0:07:59  time: 0.5704  data_time: 0.2338  memory: 11375  loss: 0.4003  loss_cls: 0.1694  loss_bbox: 0.2308
2023/06/09 23:46:23 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:23 - mmengine - INFO - Epoch(train) [200][8/8]  lr: 3.0543e-03  eta: 0:07:54  time: 0.5805  data_time: 0.2438  memory: 11377  loss: 0.4034  loss_cls: 0.1702  loss_bbox: 0.2332
2023/06/09 23:46:23 - mmengine - INFO - Saving checkpoint at 200 epochs
2023/06/09 23:46:26 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:46:26 - mmengine - INFO - bbox_mAP_copypaste: 0.724 0.848 0.825 0.000 0.548 0.821
2023/06/09 23:46:26 - mmengine - INFO - Epoch(val) [200][3/3]    coco/bbox_mAP: 0.7240  coco/bbox_mAP_50: 0.8480  coco/bbox_mAP_75: 0.8250  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5480  coco/bbox_mAP_l: 0.8210  data_time: 0.0673  time: 0.1231
2023/06/09 23:46:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:30 - mmengine - INFO - Epoch(train) [201][8/8]  lr: 3.0197e-03  eta: 0:07:49  time: 0.5791  data_time: 0.2419  memory: 11370  loss: 0.3977  loss_cls: 0.1663  loss_bbox: 0.2314
2023/06/09 23:46:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:35 - mmengine - INFO - Epoch(train) [202][8/8]  lr: 2.9847e-03  eta: 0:07:45  time: 0.5861  data_time: 0.2493  memory: 11372  loss: 0.4030  loss_cls: 0.1687  loss_bbox: 0.2342
2023/06/09 23:46:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:40 - mmengine - INFO - Epoch(train) [203][8/8]  lr: 2.9493e-03  eta: 0:07:40  time: 0.5898  data_time: 0.2507  memory: 11374  loss: 0.4143  loss_cls: 0.1733  loss_bbox: 0.2410
2023/06/09 23:46:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:45 - mmengine - INFO - Epoch(train) [204][8/8]  lr: 2.9135e-03  eta: 0:07:35  time: 0.5997  data_time: 0.2607  memory: 11376  loss: 0.4046  loss_cls: 0.1659  loss_bbox: 0.2387
2023/06/09 23:46:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:50 - mmengine - INFO - Epoch(train) [205][8/8]  lr: 2.8773e-03  eta: 0:07:31  time: 0.5958  data_time: 0.2571  memory: 11378  loss: 0.3952  loss_cls: 0.1607  loss_bbox: 0.2345
2023/06/09 23:46:55 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:55 - mmengine - INFO - Epoch(train) [206][8/8]  lr: 2.8409e-03  eta: 0:07:26  time: 0.5875  data_time: 0.2496  memory: 11369  loss: 0.3856  loss_cls: 0.1561  loss_bbox: 0.2295
2023/06/09 23:46:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:46:59 - mmengine - INFO - Epoch(train) [207][8/8]  lr: 2.8041e-03  eta: 0:07:21  time: 0.5847  data_time: 0.2470  memory: 11374  loss: 0.3841  loss_cls: 0.1560  loss_bbox: 0.2281
2023/06/09 23:47:04 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:04 - mmengine - INFO - Epoch(train) [208][8/8]  lr: 2.7669e-03  eta: 0:07:16  time: 0.5769  data_time: 0.2393  memory: 11378  loss: 0.3783  loss_cls: 0.1528  loss_bbox: 0.2255
2023/06/09 23:47:08 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:08 - mmengine - INFO - Epoch(train) [209][8/8]  lr: 2.7295e-03  eta: 0:07:11  time: 0.5779  data_time: 0.2408  memory: 11370  loss: 0.3679  loss_cls: 0.1476  loss_bbox: 0.2203
2023/06/09 23:47:13 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:13 - mmengine - INFO - Epoch(train) [210][8/8]  lr: 2.6919e-03  eta: 0:07:07  time: 0.5740  data_time: 0.2383  memory: 11373  loss: 0.3612  loss_cls: 0.1461  loss_bbox: 0.2151
2023/06/09 23:47:13 - mmengine - INFO - Saving checkpoint at 210 epochs
2023/06/09 23:47:16 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:47:16 - mmengine - INFO - bbox_mAP_copypaste: 0.742 0.892 0.875 0.025 0.609 0.823
2023/06/09 23:47:16 - mmengine - INFO - Epoch(val) [210][3/3]    coco/bbox_mAP: 0.7420  coco/bbox_mAP_50: 0.8920  coco/bbox_mAP_75: 0.8750  coco/bbox_mAP_s: 0.0250  coco/bbox_mAP_m: 0.6090  coco/bbox_mAP_l: 0.8230  data_time: 0.0682  time: 0.1246
2023/06/09 23:47:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:21 - mmengine - INFO - Epoch(train) [211][8/8]  lr: 2.6539e-03  eta: 0:07:02  time: 0.5761  data_time: 0.2391  memory: 11372  loss: 0.3500  loss_cls: 0.1408  loss_bbox: 0.2092
2023/06/09 23:47:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:26 - mmengine - INFO - Epoch(train) [212][8/8]  lr: 2.6157e-03  eta: 0:06:57  time: 0.5860  data_time: 0.2487  memory: 11373  loss: 0.3526  loss_cls: 0.1434  loss_bbox: 0.2092
2023/06/09 23:47:31 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:31 - mmengine - INFO - Epoch(train) [213][8/8]  lr: 2.5773e-03  eta: 0:06:53  time: 0.5970  data_time: 0.2601  memory: 11368  loss: 0.3531  loss_cls: 0.1466  loss_bbox: 0.2065
2023/06/09 23:47:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:35 - mmengine - INFO - Epoch(train) [214][8/8]  lr: 2.5387e-03  eta: 0:06:48  time: 0.5964  data_time: 0.2594  memory: 11368  loss: 0.3530  loss_cls: 0.1466  loss_bbox: 0.2064
2023/06/09 23:47:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:40 - mmengine - INFO - Epoch(train) [215][8/8]  lr: 2.4999e-03  eta: 0:06:43  time: 0.5988  data_time: 0.2621  memory: 11372  loss: 0.3529  loss_cls: 0.1486  loss_bbox: 0.2043
2023/06/09 23:47:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:45 - mmengine - INFO - Epoch(train) [216][8/8]  lr: 2.4609e-03  eta: 0:06:39  time: 0.5975  data_time: 0.2605  memory: 11378  loss: 0.3512  loss_cls: 0.1473  loss_bbox: 0.2040
2023/06/09 23:47:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:50 - mmengine - INFO - Epoch(train) [217][8/8]  lr: 2.4218e-03  eta: 0:06:34  time: 0.5992  data_time: 0.2625  memory: 11374  loss: 0.3552  loss_cls: 0.1472  loss_bbox: 0.2080
2023/06/09 23:47:55 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:55 - mmengine - INFO - Epoch(train) [218][8/8]  lr: 2.3825e-03  eta: 0:06:29  time: 0.5881  data_time: 0.2508  memory: 11381  loss: 0.3572  loss_cls: 0.1457  loss_bbox: 0.2115
2023/06/09 23:47:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:47:59 - mmengine - INFO - Epoch(train) [219][8/8]  lr: 2.3431e-03  eta: 0:06:24  time: 0.5806  data_time: 0.2427  memory: 11376  loss: 0.3596  loss_cls: 0.1475  loss_bbox: 0.2121
2023/06/09 23:48:04 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:48:04 - mmengine - INFO - Epoch(train) [220][8/8]  lr: 2.3036e-03  eta: 0:06:19  time: 0.5816  data_time: 0.2438  memory: 11368  loss: 0.3567  loss_cls: 0.1458  loss_bbox: 0.2109
2023/06/09 23:48:04 - mmengine - INFO - Saving checkpoint at 220 epochs
2023/06/09 23:48:06 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:48:06 - mmengine - INFO - bbox_mAP_copypaste: 0.714 0.871 0.789 0.013 0.583 0.799
2023/06/09 23:48:06 - mmengine - INFO - Epoch(val) [220][3/3]    coco/bbox_mAP: 0.7140  coco/bbox_mAP_50: 0.8710  coco/bbox_mAP_75: 0.7890  coco/bbox_mAP_s: 0.0130  coco/bbox_mAP_m: 0.5830  coco/bbox_mAP_l: 0.7990  data_time: 0.0673  time: 0.1231
2023/06/09 23:48:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:48:11 - mmengine - INFO - Epoch(train) [221][8/8]  lr: 2.2639e-03  eta: 0:06:15  time: 0.5754  data_time: 0.2365  memory: 11394  loss: 0.3553  loss_cls: 0.1437  loss_bbox: 0.2116
2023/06/09 23:48:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:48:16 - mmengine - INFO - Epoch(train) [222][8/8]  lr: 2.2243e-03  eta: 0:06:10  time: 0.5714  data_time: 0.2325  memory: 11372  loss: 0.3577  loss_cls: 0.1461  loss_bbox: 0.2116
2023/06/09 23:48:20 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:48:20 - mmengine - INFO - Epoch(train) [223][8/8]  lr: 2.1845e-03  eta: 0:06:05  time: 0.5719  data_time: 0.2316  memory: 11376  loss: 0.3520  loss_cls: 0.1435  loss_bbox: 0.2086
2023/06/09 23:48:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:48:25 - mmengine - INFO - Epoch(train) [224][8/8]  lr: 2.1448e-03  eta: 0:06:00  time: 0.5726  data_time: 0.2328  memory: 11370  loss: 0.3401  loss_cls: 0.1381  loss_bbox: 0.2020
2023/06/09 23:48:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:48:30 - mmengine - INFO - Epoch(train) [225][8/8]  lr: 2.1050e-03  eta: 0:05:56  time: 0.5697  data_time: 0.2299  memory: 11376  loss: 0.3323  loss_cls: 0.1333  loss_bbox: 0.1990
2023/06/09 23:48:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:48:34 - mmengine - INFO - Epoch(train) [226][8/8]  lr: 2.0652e-03  eta: 0:05:51  time: 0.5669  data_time: 0.2273  memory: 11371  loss: 0.3243  loss_cls: 0.1266  loss_bbox: 0.1977
2023/06/09 23:48:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:48:39 - mmengine - INFO - Epoch(train) [227][8/8]  lr: 2.0254e-03  eta: 0:05:46  time: 0.5700  data_time: 0.2313  memory: 11378  loss: 0.3334  loss_cls: 0.1319  loss_bbox: 0.2015
2023/06/09 23:48:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:48:43 - mmengine - INFO - Epoch(train) [228][8/8]  lr: 1.9857e-03  eta: 0:05:41  time: 0.5686  data_time: 0.2302  memory: 11377  loss: 0.3367  loss_cls: 0.1342  loss_bbox: 0.2026
2023/06/09 23:48:48 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:48:48 - mmengine - INFO - Epoch(train) [229][8/8]  lr: 1.9460e-03  eta: 0:05:36  time: 0.5643  data_time: 0.2272  memory: 11372  loss: 0.3383  loss_cls: 0.1345  loss_bbox: 0.2037
2023/06/09 23:48:52 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:48:52 - mmengine - INFO - Epoch(train) [230][8/8]  lr: 1.9063e-03  eta: 0:05:31  time: 0.5569  data_time: 0.2198  memory: 11382  loss: 0.3422  loss_cls: 0.1375  loss_bbox: 0.2047
2023/06/09 23:48:52 - mmengine - INFO - Saving checkpoint at 230 epochs
2023/06/09 23:48:55 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:48:55 - mmengine - INFO - bbox_mAP_copypaste: 0.721 0.864 0.817 0.000 0.558 0.811
2023/06/09 23:48:55 - mmengine - INFO - Epoch(val) [230][3/3]    coco/bbox_mAP: 0.7210  coco/bbox_mAP_50: 0.8640  coco/bbox_mAP_75: 0.8170  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5580  coco/bbox_mAP_l: 0.8110  data_time: 0.0676  time: 0.1236
2023/06/09 23:49:00 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:00 - mmengine - INFO - Epoch(train) [231][8/8]  lr: 1.8668e-03  eta: 0:05:27  time: 0.5607  data_time: 0.2230  memory: 11374  loss: 0.3447  loss_cls: 0.1392  loss_bbox: 0.2055
2023/06/09 23:49:04 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:04 - mmengine - INFO - Epoch(train) [232][8/8]  lr: 1.8274e-03  eta: 0:05:22  time: 0.5683  data_time: 0.2299  memory: 11382  loss: 0.3457  loss_cls: 0.1402  loss_bbox: 0.2055
2023/06/09 23:49:09 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:09 - mmengine - INFO - Epoch(train) [233][8/8]  lr: 1.7880e-03  eta: 0:05:17  time: 0.5687  data_time: 0.2308  memory: 11372  loss: 0.3308  loss_cls: 0.1344  loss_bbox: 0.1964
2023/06/09 23:49:14 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:14 - mmengine - INFO - Epoch(train) [234][8/8]  lr: 1.7489e-03  eta: 0:05:13  time: 0.5727  data_time: 0.2348  memory: 11371  loss: 0.3239  loss_cls: 0.1306  loss_bbox: 0.1933
2023/06/09 23:49:19 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:19 - mmengine - INFO - Epoch(train) [235][8/8]  lr: 1.7098e-03  eta: 0:05:08  time: 0.5728  data_time: 0.2355  memory: 11372  loss: 0.3238  loss_cls: 0.1312  loss_bbox: 0.1926
2023/06/09 23:49:23 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:23 - mmengine - INFO - Epoch(train) [236][8/8]  lr: 1.6710e-03  eta: 0:05:03  time: 0.5832  data_time: 0.2457  memory: 11374  loss: 0.3182  loss_cls: 0.1289  loss_bbox: 0.1893
2023/06/09 23:49:28 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:28 - mmengine - INFO - Epoch(train) [237][8/8]  lr: 1.6323e-03  eta: 0:04:58  time: 0.5876  data_time: 0.2505  memory: 11372  loss: 0.3209  loss_cls: 0.1297  loss_bbox: 0.1911
2023/06/09 23:49:33 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:33 - mmengine - INFO - Epoch(train) [238][8/8]  lr: 1.5938e-03  eta: 0:04:54  time: 0.5853  data_time: 0.2492  memory: 11379  loss: 0.3197  loss_cls: 0.1289  loss_bbox: 0.1908
2023/06/09 23:49:38 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:38 - mmengine - INFO - Epoch(train) [239][8/8]  lr: 1.5556e-03  eta: 0:04:49  time: 0.5968  data_time: 0.2603  memory: 11369  loss: 0.3110  loss_cls: 0.1230  loss_bbox: 0.1881
2023/06/09 23:49:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:43 - mmengine - INFO - Epoch(train) [240][8/8]  lr: 1.5176e-03  eta: 0:04:44  time: 0.5952  data_time: 0.2586  memory: 11380  loss: 0.3089  loss_cls: 0.1210  loss_bbox: 0.1879
2023/06/09 23:49:43 - mmengine - INFO - Saving checkpoint at 240 epochs
2023/06/09 23:49:45 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:49:46 - mmengine - INFO - bbox_mAP_copypaste: 0.713 0.855 0.796 0.101 0.591 0.785
2023/06/09 23:49:46 - mmengine - INFO - Epoch(val) [240][3/3]    coco/bbox_mAP: 0.7130  coco/bbox_mAP_50: 0.8550  coco/bbox_mAP_75: 0.7960  coco/bbox_mAP_s: 0.1010  coco/bbox_mAP_m: 0.5910  coco/bbox_mAP_l: 0.7850  data_time: 0.0671  time: 0.1226
2023/06/09 23:49:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:50 - mmengine - INFO - Epoch(train) [241][8/8]  lr: 1.4799e-03  eta: 0:04:40  time: 0.5961  data_time: 0.2595  memory: 11371  loss: 0.3090  loss_cls: 0.1220  loss_bbox: 0.1870
2023/06/09 23:49:55 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:55 - mmengine - INFO - Epoch(train) [242][8/8]  lr: 1.4424e-03  eta: 0:04:35  time: 0.5919  data_time: 0.2556  memory: 11376  loss: 0.3132  loss_cls: 0.1237  loss_bbox: 0.1895
2023/06/09 23:49:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:49:59 - mmengine - INFO - Epoch(train) [243][8/8]  lr: 1.4052e-03  eta: 0:04:30  time: 0.5825  data_time: 0.2469  memory: 11373  loss: 0.3160  loss_cls: 0.1249  loss_bbox: 0.1910
2023/06/09 23:50:04 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:04 - mmengine - INFO - Epoch(train) [244][8/8]  lr: 1.3683e-03  eta: 0:04:25  time: 0.5779  data_time: 0.2417  memory: 11371  loss: 0.3128  loss_cls: 0.1220  loss_bbox: 0.1908
2023/06/09 23:50:09 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:09 - mmengine - INFO - Epoch(train) [245][8/8]  lr: 1.3317e-03  eta: 0:04:20  time: 0.5658  data_time: 0.2303  memory: 11373  loss: 0.3129  loss_cls: 0.1229  loss_bbox: 0.1900
2023/06/09 23:50:13 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:13 - mmengine - INFO - Epoch(train) [246][8/8]  lr: 1.2955e-03  eta: 0:04:16  time: 0.5695  data_time: 0.2344  memory: 11375  loss: 0.3179  loss_cls: 0.1264  loss_bbox: 0.1915
2023/06/09 23:50:18 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:18 - mmengine - INFO - Epoch(train) [247][8/8]  lr: 1.2597e-03  eta: 0:04:11  time: 0.5675  data_time: 0.2319  memory: 11379  loss: 0.3196  loss_cls: 0.1274  loss_bbox: 0.1923
2023/06/09 23:50:23 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:23 - mmengine - INFO - Epoch(train) [248][8/8]  lr: 1.2241e-03  eta: 0:04:06  time: 0.5711  data_time: 0.2352  memory: 11370  loss: 0.3125  loss_cls: 0.1232  loss_bbox: 0.1893
2023/06/09 23:50:28 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:28 - mmengine - INFO - Epoch(train) [249][8/8]  lr: 1.1890e-03  eta: 0:04:01  time: 0.5765  data_time: 0.2399  memory: 11376  loss: 0.3053  loss_cls: 0.1198  loss_bbox: 0.1855
2023/06/09 23:50:32 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:32 - mmengine - INFO - Epoch(train) [250][8/8]  lr: 1.1543e-03  eta: 0:03:57  time: 0.5746  data_time: 0.2386  memory: 11371  loss: 0.3057  loss_cls: 0.1220  loss_bbox: 0.1837
2023/06/09 23:50:32 - mmengine - INFO - Saving checkpoint at 250 epochs
2023/06/09 23:50:34 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:50:34 - mmengine - INFO - bbox_mAP_copypaste: 0.743 0.904 0.847 0.050 0.639 0.813
2023/06/09 23:50:35 - mmengine - INFO - Epoch(val) [250][3/3]    coco/bbox_mAP: 0.7430  coco/bbox_mAP_50: 0.9040  coco/bbox_mAP_75: 0.8470  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6390  coco/bbox_mAP_l: 0.8130  data_time: 0.0668  time: 0.1215
2023/06/09 23:50:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:39 - mmengine - INFO - Epoch(train) [251][8/8]  lr: 1.1200e-03  eta: 0:03:52  time: 0.5702  data_time: 0.2338  memory: 11369  loss: 0.3015  loss_cls: 0.1203  loss_bbox: 0.1812
2023/06/09 23:50:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:43 - mmengine - INFO - Epoch(train) [252][8/8]  lr: 1.0861e-03  eta: 0:03:47  time: 0.5605  data_time: 0.2238  memory: 11380  loss: 0.3008  loss_cls: 0.1191  loss_bbox: 0.1817
2023/06/09 23:50:48 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:48 - mmengine - INFO - Epoch(train) [253][8/8]  lr: 1.0527e-03  eta: 0:03:42  time: 0.5615  data_time: 0.2250  memory: 11374  loss: 0.2895  loss_cls: 0.1111  loss_bbox: 0.1784
2023/06/09 23:50:53 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:53 - mmengine - INFO - Epoch(train) [254][8/8]  lr: 1.0197e-03  eta: 0:03:38  time: 0.5605  data_time: 0.2246  memory: 11383  loss: 0.2870  loss_cls: 0.1101  loss_bbox: 0.1769
2023/06/09 23:50:57 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:50:57 - mmengine - INFO - Epoch(train) [255][8/8]  lr: 9.8724e-04  eta: 0:03:33  time: 0.5612  data_time: 0.2257  memory: 11375  loss: 0.2886  loss_cls: 0.1106  loss_bbox: 0.1780
2023/06/09 23:51:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:02 - mmengine - INFO - Epoch(train) [256][8/8]  lr: 9.5523e-04  eta: 0:03:28  time: 0.5620  data_time: 0.2272  memory: 11378  loss: 0.2842  loss_cls: 0.1089  loss_bbox: 0.1753
2023/06/09 23:51:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:07 - mmengine - INFO - Epoch(train) [257][8/8]  lr: 9.2372e-04  eta: 0:03:23  time: 0.5664  data_time: 0.2315  memory: 11379  loss: 0.2864  loss_cls: 0.1094  loss_bbox: 0.1769
2023/06/09 23:51:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:11 - mmengine - INFO - Epoch(train) [258][8/8]  lr: 8.9273e-04  eta: 0:03:19  time: 0.5718  data_time: 0.2356  memory: 11386  loss: 0.2904  loss_cls: 0.1116  loss_bbox: 0.1788
2023/06/09 23:51:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:16 - mmengine - INFO - Epoch(train) [259][8/8]  lr: 8.6227e-04  eta: 0:03:14  time: 0.5749  data_time: 0.2371  memory: 11380  loss: 0.2913  loss_cls: 0.1115  loss_bbox: 0.1798
2023/06/09 23:51:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:21 - mmengine - INFO - Epoch(train) [260][8/8]  lr: 8.3235e-04  eta: 0:03:09  time: 0.5776  data_time: 0.2394  memory: 11375  loss: 0.2920  loss_cls: 0.1127  loss_bbox: 0.1792
2023/06/09 23:51:21 - mmengine - INFO - Saving checkpoint at 260 epochs
2023/06/09 23:51:23 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:51:23 - mmengine - INFO - bbox_mAP_copypaste: 0.774 0.922 0.865 0.104 0.632 0.862
2023/06/09 23:51:24 - mmengine - INFO - Epoch(val) [260][3/3]    coco/bbox_mAP: 0.7740  coco/bbox_mAP_50: 0.9220  coco/bbox_mAP_75: 0.8650  coco/bbox_mAP_s: 0.1040  coco/bbox_mAP_m: 0.6320  coco/bbox_mAP_l: 0.8620  data_time: 0.0682  time: 0.1234
2023/06/09 23:51:28 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:28 - mmengine - INFO - Epoch(train) [261][8/8]  lr: 8.0299e-04  eta: 0:03:04  time: 0.5750  data_time: 0.2362  memory: 11377  loss: 0.2904  loss_cls: 0.1120  loss_bbox: 0.1784
2023/06/09 23:51:33 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:33 - mmengine - INFO - Epoch(train) [262][8/8]  lr: 7.7420e-04  eta: 0:03:00  time: 0.5772  data_time: 0.2371  memory: 11387  loss: 0.2911  loss_cls: 0.1124  loss_bbox: 0.1787
2023/06/09 23:51:37 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:37 - mmengine - INFO - Epoch(train) [263][8/8]  lr: 7.4599e-04  eta: 0:02:55  time: 0.5718  data_time: 0.2318  memory: 11374  loss: 0.2860  loss_cls: 0.1100  loss_bbox: 0.1760
2023/06/09 23:51:42 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:42 - mmengine - INFO - Epoch(train) [264][8/8]  lr: 7.1837e-04  eta: 0:02:50  time: 0.5760  data_time: 0.2363  memory: 11383  loss: 0.2828  loss_cls: 0.1108  loss_bbox: 0.1720
2023/06/09 23:51:47 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:47 - mmengine - INFO - Epoch(train) [265][8/8]  lr: 6.9136e-04  eta: 0:02:45  time: 0.5764  data_time: 0.2381  memory: 11373  loss: 0.2848  loss_cls: 0.1130  loss_bbox: 0.1718
2023/06/09 23:51:51 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:51 - mmengine - INFO - Epoch(train) [266][8/8]  lr: 6.6496e-04  eta: 0:02:41  time: 0.5711  data_time: 0.2321  memory: 11369  loss: 0.2785  loss_cls: 0.1104  loss_bbox: 0.1681
2023/06/09 23:51:56 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:51:56 - mmengine - INFO - Epoch(train) [267][8/8]  lr: 6.3920e-04  eta: 0:02:36  time: 0.5754  data_time: 0.2358  memory: 11377  loss: 0.2762  loss_cls: 0.1089  loss_bbox: 0.1673
2023/06/09 23:52:01 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:01 - mmengine - INFO - Epoch(train) [268][8/8]  lr: 6.1408e-04  eta: 0:02:31  time: 0.5829  data_time: 0.2443  memory: 11370  loss: 0.2725  loss_cls: 0.1081  loss_bbox: 0.1644
2023/06/09 23:52:06 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:06 - mmengine - INFO - Epoch(train) [269][8/8]  lr: 5.8961e-04  eta: 0:02:26  time: 0.5898  data_time: 0.2521  memory: 11376  loss: 0.2745  loss_cls: 0.1094  loss_bbox: 0.1651
2023/06/09 23:52:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:11 - mmengine - INFO - Epoch(train) [270][8/8]  lr: 5.6580e-04  eta: 0:02:22  time: 0.5814  data_time: 0.2445  memory: 11375  loss: 0.2690  loss_cls: 0.1058  loss_bbox: 0.1632
2023/06/09 23:52:11 - mmengine - INFO - Saving checkpoint at 270 epochs
2023/06/09 23:52:13 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:52:13 - mmengine - INFO - bbox_mAP_copypaste: 0.758 0.893 0.839 0.034 0.621 0.840
2023/06/09 23:52:13 - mmengine - INFO - Epoch(val) [270][3/3]    coco/bbox_mAP: 0.7580  coco/bbox_mAP_50: 0.8930  coco/bbox_mAP_75: 0.8390  coco/bbox_mAP_s: 0.0340  coco/bbox_mAP_m: 0.6210  coco/bbox_mAP_l: 0.8400  data_time: 0.0674  time: 0.1231
2023/06/09 23:52:18 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:18 - mmengine - INFO - Epoch(train) [271][8/8]  lr: 5.4266e-04  eta: 0:02:17  time: 0.5746  data_time: 0.2389  memory: 11376  loss: 0.2644  loss_cls: 0.1030  loss_bbox: 0.1614
2023/06/09 23:52:22 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:22 - mmengine - INFO - Epoch(train) [272][8/8]  lr: 5.2021e-04  eta: 0:02:12  time: 0.5790  data_time: 0.2428  memory: 11377  loss: 0.2624  loss_cls: 0.1016  loss_bbox: 0.1609
2023/06/09 23:52:27 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:27 - mmengine - INFO - Epoch(train) [273][8/8]  lr: 4.9845e-04  eta: 0:02:07  time: 0.5776  data_time: 0.2422  memory: 11370  loss: 0.2594  loss_cls: 0.1000  loss_bbox: 0.1594
2023/06/09 23:52:32 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:32 - mmengine - INFO - Epoch(train) [274][8/8]  lr: 4.7739e-04  eta: 0:02:03  time: 0.5709  data_time: 0.2354  memory: 11371  loss: 0.2620  loss_cls: 0.1012  loss_bbox: 0.1608
2023/06/09 23:52:36 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:36 - mmengine - INFO - Epoch(train) [275][8/8]  lr: 4.5704e-04  eta: 0:01:58  time: 0.5668  data_time: 0.2297  memory: 11373  loss: 0.2616  loss_cls: 0.1007  loss_bbox: 0.1609
2023/06/09 23:52:41 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:41 - mmengine - INFO - Epoch(train) [276][8/8]  lr: 4.3742e-04  eta: 0:01:53  time: 0.5781  data_time: 0.2387  memory: 11376  loss: 0.2624  loss_cls: 0.1008  loss_bbox: 0.1616
2023/06/09 23:52:46 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:46 - mmengine - INFO - Epoch(train) [277][8/8]  lr: 4.1852e-04  eta: 0:01:48  time: 0.5829  data_time: 0.2432  memory: 11374  loss: 0.2656  loss_cls: 0.1031  loss_bbox: 0.1625
2023/06/09 23:52:51 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:51 - mmengine - INFO - Epoch(train) [278][8/8]  lr: 4.0037e-04  eta: 0:01:44  time: 0.5769  data_time: 0.2381  memory: 11379  loss: 0.2707  loss_cls: 0.1066  loss_bbox: 0.1641
2023/06/09 23:52:55 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:52:55 - mmengine - INFO - Epoch(train) [279][8/8]  lr: 3.8295e-04  eta: 0:01:39  time: 0.5753  data_time: 0.2361  memory: 11376  loss: 0.2728  loss_cls: 0.1074  loss_bbox: 0.1654
2023/06/09 23:52:56 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:52:56 - mmengine - INFO - bbox_mAP_copypaste: 0.759 0.896 0.845 0.025 0.670 0.831
2023/06/09 23:52:56 - mmengine - INFO - Epoch(val) [279][3/3]    coco/bbox_mAP: 0.7590  coco/bbox_mAP_50: 0.8960  coco/bbox_mAP_75: 0.8450  coco/bbox_mAP_s: 0.0250  coco/bbox_mAP_m: 0.6700  coco/bbox_mAP_l: 0.8310  data_time: 0.0674  time: 0.1193
2023/06/09 23:53:01 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:01 - mmengine - INFO - Epoch(train) [280][8/8]  lr: 3.6629e-04  eta: 0:01:34  time: 0.5763  data_time: 0.2367  memory: 11368  loss: 0.2757  loss_cls: 0.1100  loss_bbox: 0.1657
2023/06/09 23:53:01 - mmengine - INFO - Saving checkpoint at 280 epochs
2023/06/09 23:53:03 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:03 - mmengine - INFO - bbox_mAP_copypaste: 0.772 0.906 0.872 0.025 0.684 0.847
2023/06/09 23:53:03 - mmengine - INFO - Epoch(val) [280][3/3]    coco/bbox_mAP: 0.7720  coco/bbox_mAP_50: 0.9060  coco/bbox_mAP_75: 0.8720  coco/bbox_mAP_s: 0.0250  coco/bbox_mAP_m: 0.6840  coco/bbox_mAP_l: 0.8470  data_time: 0.0684  time: 0.1236
2023/06/09 23:53:03 - mmengine - INFO - Switch pipeline now!
2023/06/09 23:53:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:07 - mmengine - INFO - Epoch(train) [281][8/8]  lr: 3.5039e-04  eta: 0:01:29  time: 0.5653  data_time: 0.2286  memory: 11368  loss: 0.2798  loss_cls: 0.1176  loss_bbox: 0.1622
2023/06/09 23:53:08 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:08 - mmengine - INFO - bbox_mAP_copypaste: 0.709 0.823 0.773 0.303 0.596 0.797
2023/06/09 23:53:08 - mmengine - INFO - Epoch(val) [281][3/3]    coco/bbox_mAP: 0.7090  coco/bbox_mAP_50: 0.8230  coco/bbox_mAP_75: 0.7730  coco/bbox_mAP_s: 0.3030  coco/bbox_mAP_m: 0.5960  coco/bbox_mAP_l: 0.7970  data_time: 0.0712  time: 0.1255
2023/06/09 23:53:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:11 - mmengine - INFO - Epoch(train) [282][8/8]  lr: 3.3526e-04  eta: 0:01:25  time: 0.5327  data_time: 0.2001  memory: 11368  loss: 0.2725  loss_cls: 0.1159  loss_bbox: 0.1565
2023/06/09 23:53:12 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:12 - mmengine - INFO - bbox_mAP_copypaste: 0.712 0.838 0.771 0.151 0.619 0.788
2023/06/09 23:53:12 - mmengine - INFO - Epoch(val) [282][3/3]    coco/bbox_mAP: 0.7120  coco/bbox_mAP_50: 0.8380  coco/bbox_mAP_75: 0.7710  coco/bbox_mAP_s: 0.1510  coco/bbox_mAP_m: 0.6190  coco/bbox_mAP_l: 0.7880  data_time: 0.0697  time: 0.1234
2023/06/09 23:53:15 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:15 - mmengine - INFO - Epoch(train) [283][8/8]  lr: 3.2090e-04  eta: 0:01:20  time: 0.5081  data_time: 0.1775  memory: 11368  loss: 0.2656  loss_cls: 0.1144  loss_bbox: 0.1512
2023/06/09 23:53:16 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:16 - mmengine - INFO - bbox_mAP_copypaste: 0.739 0.874 0.781 0.050 0.596 0.827
2023/06/09 23:53:16 - mmengine - INFO - Epoch(val) [283][3/3]    coco/bbox_mAP: 0.7390  coco/bbox_mAP_50: 0.8740  coco/bbox_mAP_75: 0.7810  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.5960  coco/bbox_mAP_l: 0.8270  data_time: 0.0706  time: 0.1240
2023/06/09 23:53:20 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:20 - mmengine - INFO - Epoch(train) [284][8/8]  lr: 3.0733e-04  eta: 0:01:15  time: 0.4897  data_time: 0.1613  memory: 11368  loss: 0.2512  loss_cls: 0.1074  loss_bbox: 0.1438
2023/06/09 23:53:20 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:20 - mmengine - INFO - bbox_mAP_copypaste: 0.744 0.881 0.811 0.000 0.627 0.826
2023/06/09 23:53:20 - mmengine - INFO - Epoch(val) [284][3/3]    coco/bbox_mAP: 0.7440  coco/bbox_mAP_50: 0.8810  coco/bbox_mAP_75: 0.8110  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.6270  coco/bbox_mAP_l: 0.8260  data_time: 0.0708  time: 0.1244
2023/06/09 23:53:23 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:23 - mmengine - INFO - Epoch(train) [285][8/8]  lr: 2.9454e-04  eta: 0:01:10  time: 0.4623  data_time: 0.1368  memory: 11368  loss: 0.2383  loss_cls: 0.1027  loss_bbox: 0.1356
2023/06/09 23:53:24 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:24 - mmengine - INFO - bbox_mAP_copypaste: 0.744 0.881 0.818 0.000 0.630 0.823
2023/06/09 23:53:24 - mmengine - INFO - Epoch(val) [285][3/3]    coco/bbox_mAP: 0.7440  coco/bbox_mAP_50: 0.8810  coco/bbox_mAP_75: 0.8180  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.6300  coco/bbox_mAP_l: 0.8230  data_time: 0.0694  time: 0.1230
2023/06/09 23:53:28 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:28 - mmengine - INFO - Epoch(train) [286][8/8]  lr: 2.8254e-04  eta: 0:01:05  time: 0.4409  data_time: 0.1181  memory: 11368  loss: 0.2239  loss_cls: 0.0959  loss_bbox: 0.1279
2023/06/09 23:53:28 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:28 - mmengine - INFO - bbox_mAP_copypaste: 0.741 0.881 0.822 0.000 0.639 0.816
2023/06/09 23:53:28 - mmengine - INFO - Epoch(val) [286][3/3]    coco/bbox_mAP: 0.7410  coco/bbox_mAP_50: 0.8810  coco/bbox_mAP_75: 0.8220  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.6390  coco/bbox_mAP_l: 0.8160  data_time: 0.0698  time: 0.1236
2023/06/09 23:53:32 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:32 - mmengine - INFO - Epoch(train) [287][8/8]  lr: 2.7134e-04  eta: 0:01:01  time: 0.4306  data_time: 0.1075  memory: 11368  loss: 0.2028  loss_cls: 0.0803  loss_bbox: 0.1225
2023/06/09 23:53:32 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:33 - mmengine - INFO - bbox_mAP_copypaste: 0.744 0.903 0.813 0.050 0.627 0.823
2023/06/09 23:53:33 - mmengine - INFO - Epoch(val) [287][3/3]    coco/bbox_mAP: 0.7440  coco/bbox_mAP_50: 0.9030  coco/bbox_mAP_75: 0.8130  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6270  coco/bbox_mAP_l: 0.8230  data_time: 0.0678  time: 0.1213
2023/06/09 23:53:36 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:36 - mmengine - INFO - Epoch(train) [288][8/8]  lr: 2.6094e-04  eta: 0:00:56  time: 0.4354  data_time: 0.1124  memory: 11368  loss: 0.1950  loss_cls: 0.0732  loss_bbox: 0.1218
2023/06/09 23:53:37 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:37 - mmengine - INFO - bbox_mAP_copypaste: 0.748 0.904 0.817 0.050 0.634 0.827
2023/06/09 23:53:37 - mmengine - INFO - Epoch(val) [288][3/3]    coco/bbox_mAP: 0.7480  coco/bbox_mAP_50: 0.9040  coco/bbox_mAP_75: 0.8170  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6340  coco/bbox_mAP_l: 0.8270  data_time: 0.0688  time: 0.1225
2023/06/09 23:53:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:40 - mmengine - INFO - Epoch(train) [289][8/8]  lr: 2.5134e-04  eta: 0:00:51  time: 0.4335  data_time: 0.1094  memory: 11368  loss: 0.1850  loss_cls: 0.0667  loss_bbox: 0.1183
2023/06/09 23:53:41 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:41 - mmengine - INFO - bbox_mAP_copypaste: 0.751 0.890 0.821 0.000 0.631 0.834
2023/06/09 23:53:41 - mmengine - INFO - Epoch(val) [289][3/3]    coco/bbox_mAP: 0.7510  coco/bbox_mAP_50: 0.8900  coco/bbox_mAP_75: 0.8210  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.6310  coco/bbox_mAP_l: 0.8340  data_time: 0.0686  time: 0.1238
2023/06/09 23:53:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:44 - mmengine - INFO - Epoch(train) [290][8/8]  lr: 2.4256e-04  eta: 0:00:46  time: 0.4341  data_time: 0.1101  memory: 11368  loss: 0.1849  loss_cls: 0.0656  loss_bbox: 0.1193
2023/06/09 23:53:44 - mmengine - INFO - Saving checkpoint at 290 epochs
2023/06/09 23:53:47 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:47 - mmengine - INFO - bbox_mAP_copypaste: 0.763 0.905 0.860 0.050 0.650 0.841
2023/06/09 23:53:47 - mmengine - INFO - Epoch(val) [290][3/3]    coco/bbox_mAP: 0.7630  coco/bbox_mAP_50: 0.9050  coco/bbox_mAP_75: 0.8600  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6500  coco/bbox_mAP_l: 0.8410  data_time: 0.0693  time: 0.1263
2023/06/09 23:53:51 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:51 - mmengine - INFO - Epoch(train) [291][8/8]  lr: 2.3459e-04  eta: 0:00:42  time: 0.4393  data_time: 0.1154  memory: 11368  loss: 0.1786  loss_cls: 0.0628  loss_bbox: 0.1158
2023/06/09 23:53:51 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:51 - mmengine - INFO - bbox_mAP_copypaste: 0.764 0.906 0.862 0.050 0.640 0.843
2023/06/09 23:53:51 - mmengine - INFO - Epoch(val) [291][3/3]    coco/bbox_mAP: 0.7640  coco/bbox_mAP_50: 0.9060  coco/bbox_mAP_75: 0.8620  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6400  coco/bbox_mAP_l: 0.8430  data_time: 0.0691  time: 0.1235
2023/06/09 23:53:55 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:55 - mmengine - INFO - Epoch(train) [292][8/8]  lr: 2.2744e-04  eta: 0:00:37  time: 0.4365  data_time: 0.1118  memory: 11368  loss: 0.1770  loss_cls: 0.0611  loss_bbox: 0.1159
2023/06/09 23:53:55 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:55 - mmengine - INFO - bbox_mAP_copypaste: 0.762 0.893 0.863 0.000 0.647 0.841
2023/06/09 23:53:55 - mmengine - INFO - Epoch(val) [292][3/3]    coco/bbox_mAP: 0.7620  coco/bbox_mAP_50: 0.8930  coco/bbox_mAP_75: 0.8630  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.6470  coco/bbox_mAP_l: 0.8410  data_time: 0.0695  time: 0.1231
2023/06/09 23:53:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:53:59 - mmengine - INFO - Epoch(train) [293][8/8]  lr: 2.2112e-04  eta: 0:00:32  time: 0.4319  data_time: 0.1073  memory: 11368  loss: 0.1779  loss_cls: 0.0616  loss_bbox: 0.1164
2023/06/09 23:53:59 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:53:59 - mmengine - INFO - bbox_mAP_copypaste: 0.758 0.894 0.840 0.000 0.649 0.838
2023/06/09 23:53:59 - mmengine - INFO - Epoch(val) [293][3/3]    coco/bbox_mAP: 0.7580  coco/bbox_mAP_50: 0.8940  coco/bbox_mAP_75: 0.8400  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.6490  coco/bbox_mAP_l: 0.8380  data_time: 0.0694  time: 0.1230
2023/06/09 23:54:03 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:54:03 - mmengine - INFO - Epoch(train) [294][8/8]  lr: 2.1561e-04  eta: 0:00:28  time: 0.4296  data_time: 0.1050  memory: 11368  loss: 0.1727  loss_cls: 0.0590  loss_bbox: 0.1137
2023/06/09 23:54:03 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:54:03 - mmengine - INFO - bbox_mAP_copypaste: 0.755 0.905 0.852 0.050 0.617 0.840
2023/06/09 23:54:03 - mmengine - INFO - Epoch(val) [294][3/3]    coco/bbox_mAP: 0.7550  coco/bbox_mAP_50: 0.9050  coco/bbox_mAP_75: 0.8520  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6170  coco/bbox_mAP_l: 0.8400  data_time: 0.0676  time: 0.1212
2023/06/09 23:54:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:54:07 - mmengine - INFO - Epoch(train) [295][8/8]  lr: 2.1093e-04  eta: 0:00:23  time: 0.4312  data_time: 0.1074  memory: 11368  loss: 0.1726  loss_cls: 0.0590  loss_bbox: 0.1136
2023/06/09 23:54:07 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:54:08 - mmengine - INFO - bbox_mAP_copypaste: 0.762 0.893 0.872 0.050 0.602 0.852
2023/06/09 23:54:08 - mmengine - INFO - Epoch(val) [295][3/3]    coco/bbox_mAP: 0.7620  coco/bbox_mAP_50: 0.8930  coco/bbox_mAP_75: 0.8720  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6020  coco/bbox_mAP_l: 0.8520  data_time: 0.0663  time: 0.1202
2023/06/09 23:54:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:54:11 - mmengine - INFO - Epoch(train) [296][8/8]  lr: 2.0709e-04  eta: 0:00:18  time: 0.4273  data_time: 0.1032  memory: 11368  loss: 0.1706  loss_cls: 0.0592  loss_bbox: 0.1113
2023/06/09 23:54:12 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:54:12 - mmengine - INFO - bbox_mAP_copypaste: 0.756 0.894 0.852 0.050 0.590 0.846
2023/06/09 23:54:12 - mmengine - INFO - Epoch(val) [296][3/3]    coco/bbox_mAP: 0.7560  coco/bbox_mAP_50: 0.8940  coco/bbox_mAP_75: 0.8520  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.5900  coco/bbox_mAP_l: 0.8460  data_time: 0.0680  time: 0.1222
2023/06/09 23:54:15 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:54:15 - mmengine - INFO - Epoch(train) [297][8/8]  lr: 2.0407e-04  eta: 0:00:14  time: 0.4295  data_time: 0.1051  memory: 11368  loss: 0.1746  loss_cls: 0.0604  loss_bbox: 0.1142
2023/06/09 23:54:16 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:54:16 - mmengine - INFO - bbox_mAP_copypaste: 0.767 0.901 0.866 0.050 0.595 0.861
2023/06/09 23:54:16 - mmengine - INFO - Epoch(val) [297][3/3]    coco/bbox_mAP: 0.7670  coco/bbox_mAP_50: 0.9010  coco/bbox_mAP_75: 0.8660  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.5950  coco/bbox_mAP_l: 0.8610  data_time: 0.0709  time: 0.1246
2023/06/09 23:54:19 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:54:19 - mmengine - INFO - Epoch(train) [298][8/8]  lr: 2.0188e-04  eta: 0:00:09  time: 0.4236  data_time: 0.0993  memory: 11368  loss: 0.1749  loss_cls: 0.0595  loss_bbox: 0.1154
2023/06/09 23:54:20 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:54:20 - mmengine - INFO - bbox_mAP_copypaste: 0.761 0.900 0.846 0.000 0.614 0.849
2023/06/09 23:54:20 - mmengine - INFO - Epoch(val) [298][3/3]    coco/bbox_mAP: 0.7610  coco/bbox_mAP_50: 0.9000  coco/bbox_mAP_75: 0.8460  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.6140  coco/bbox_mAP_l: 0.8490  data_time: 0.0676  time: 0.1218
2023/06/09 23:54:23 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:54:23 - mmengine - INFO - Epoch(train) [299][8/8]  lr: 2.0053e-04  eta: 0:00:04  time: 0.4252  data_time: 0.1004  memory: 11368  loss: 0.1729  loss_cls: 0.0590  loss_bbox: 0.1139
2023/06/09 23:54:24 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:54:24 - mmengine - INFO - bbox_mAP_copypaste: 0.765 0.893 0.858 0.000 0.587 0.862
2023/06/09 23:54:24 - mmengine - INFO - Epoch(val) [299][3/3]    coco/bbox_mAP: 0.7650  coco/bbox_mAP_50: 0.8930  coco/bbox_mAP_75: 0.8580  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5870  coco/bbox_mAP_l: 0.8620  data_time: 0.0707  time: 0.1246
2023/06/09 23:54:27 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230609_232836
2023/06/09 23:54:27 - mmengine - INFO - Epoch(train) [300][8/8]  lr: 2.0001e-04  eta: 0:00:00  time: 0.4225  data_time: 0.0983  memory: 11368  loss: 0.1773  loss_cls: 0.0616  loss_bbox: 0.1156
2023/06/09 23:54:27 - mmengine - INFO - Saving checkpoint at 300 epochs
2023/06/09 23:54:30 - mmengine - INFO - Evaluating bbox...
2023/06/09 23:54:30 - mmengine - INFO - bbox_mAP_copypaste: 0.752 0.897 0.823 0.000 0.577 0.846
2023/06/09 23:54:30 - mmengine - INFO - Epoch(val) [300][3/3]    coco/bbox_mAP: 0.7520  coco/bbox_mAP_50: 0.8970  coco/bbox_mAP_75: 0.8230  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5770  coco/bbox_mAP_l: 0.8460  data_time: 0.0680  time: 0.1257
