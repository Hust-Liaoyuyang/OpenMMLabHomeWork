2023/06/10 00:02:39 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.9.16 (main, Mar  8 2023, 14:00:05) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 748344048
    GPU 0,1,2,3,4,5,6,7: NVIDIA GeForce RTX 3090
    CUDA_HOME: /usr/local/cuda-11.2
    NVCC: Cuda compilation tools, release 11.2, V11.2.152
    GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
    PyTorch: 1.12.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.13.1
    OpenCV: 4.7.0
    MMEngine: 0.7.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 748344048
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/10 00:02:40 - mmengine - INFO - Config:
default_scope = 'mmdet'
metainfo = dict(classes=('balloon', ))
NUM_CLASSES = 1
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=50),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(type='CheckpointHook', interval=10, max_keep_ckpts=3),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = 'https://download.openmmlab.com/mmrotate/v1.0/rotated_rtmdet/rotated_rtmdet_l-coco_pretrain-3x-dota_ms/rotated_rtmdet_l-coco_pretrain-3x-dota_ms-06d248a2.pth'
resume = False
train_cfg = dict(
    type='EpochBasedTrainLoop',
    max_epochs=300,
    val_interval=10,
    dynamic_intervals=[(280, 1)])
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(
        type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0,
        end=1000),
    dict(
        type='CosineAnnealingLR',
        eta_min=0.0002,
        begin=150,
        end=300,
        T_max=150,
        by_epoch=True,
        convert_to_iter_based=True)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.0004, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
auto_scale_lr = dict(enable=False, base_batch_size=16)
dataset_type = 'CocoDataset'
data_root = '/home/LYY/workspace/pycharm/mmdetection/datasets/balloon'
backend_args = None
train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='CachedMosaic', img_scale=(640, 640), pad_val=114.0),
    dict(
        type='RandomResize',
        scale=(1280, 1280),
        ratio_range=(0.1, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='CachedMixUp',
        img_scale=(640, 640),
        ratio_range=(1.0, 1.0),
        max_cached_images=20,
        pad_val=(114, 114, 114)),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='Resize', scale=(640, 640), keep_ratio=True),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=8,
    num_workers=5,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=None,
    dataset=dict(
        type='CocoDataset',
        data_root='/home/LYY/workspace/pycharm/mmdetection/datasets/balloon',
        metainfo=dict(classes=('balloon', )),
        ann_file='train/balloon_train.json',
        data_prefix=dict(img='train/'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='CachedMosaic', img_scale=(640, 640), pad_val=114.0),
            dict(
                type='RandomResize',
                scale=(1280, 1280),
                ratio_range=(0.1, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='CachedMixUp',
                img_scale=(640, 640),
                ratio_range=(1.0, 1.0),
                max_cached_images=20,
                pad_val=(114, 114, 114)),
            dict(type='PackDetInputs')
        ],
        backend_args=None),
    pin_memory=True)
val_dataloader = dict(
    batch_size=5,
    num_workers=10,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='/home/LYY/workspace/pycharm/mmdetection/datasets/balloon/',
        metainfo=dict(classes=('balloon', )),
        ann_file='val/balloon_val.json',
        data_prefix=dict(img='val/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None))
test_dataloader = dict(
    batch_size=5,
    num_workers=10,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='/home/LYY/workspace/pycharm/mmdetection/datasets/balloon/',
        metainfo=dict(classes=('balloon', )),
        ann_file='val/balloon_val.json',
        data_prefix=dict(img='val/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None))
val_evaluator = dict(
    type='CocoMetric',
    ann_file=
    '/home/LYY/workspace/pycharm/mmdetection/datasets/balloon/val/balloon_val.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
test_evaluator = dict(
    type='CocoMetric',
    ann_file=
    '/home/LYY/workspace/pycharm/mmdetection/datasets/balloon/val/balloon_val.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
tta_model = dict(
    type='DetTTAModel',
    tta_cfg=dict(nms=dict(type='nms', iou_threshold=0.6), max_per_img=100))
img_scales = [(640, 640), (320, 320), (960, 960)]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale': (640, 640),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (320, 320),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (960, 960),
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 1.0
                    }, {
                        'type': 'RandomFlip',
                        'prob': 0.0
                    }],
                    [{
                        'type': 'Pad',
                        'size': (960, 960),
                        'pad_val': {
                            'img': (114, 114, 114)
                        }
                    }],
                    [{
                        'type':
                        'PackDetInputs',
                        'meta_keys':
                        ('img_id', 'img_path', 'ori_shape', 'img_shape',
                         'scale_factor', 'flip', 'flip_direction')
                    }]])
]
model = dict(
    type='RTMDet',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[103.53, 116.28, 123.675],
        std=[57.375, 57.12, 58.395],
        bgr_to_rgb=False,
        batch_augments=None),
    backbone=dict(
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=1,
        widen_factor=1,
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    neck=dict(
        type='CSPNeXtPAFPN',
        in_channels=[256, 512, 1024],
        out_channels=256,
        num_csp_blocks=3,
        expand_ratio=0.5,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    bbox_head=dict(
        type='RTMDetSepBNHead',
        num_classes=1,
        in_channels=256,
        stacked_convs=2,
        feat_channels=256,
        anchor_generator=dict(
            type='MlvlPointGenerator', offset=0, strides=[8, 16, 32]),
        bbox_coder=dict(type='DistancePointBBoxCoder'),
        loss_cls=dict(
            type='QualityFocalLoss',
            use_sigmoid=True,
            beta=2.0,
            loss_weight=1.0),
        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),
        with_objectness=False,
        exp_on_reg=True,
        share_conv=True,
        pred_kernel_size=1,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    train_cfg=dict(
        assigner=dict(type='DynamicSoftLabelAssigner', topk=13),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=30000,
        min_bbox_size=0,
        score_thr=0.001,
        nms=dict(type='nms', iou_threshold=0.65),
        max_per_img=300))
train_pipeline_stage2 = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='RandomResize',
        scale=(640, 640),
        ratio_range=(0.1, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='PackDetInputs')
]
max_epochs = 300
stage2_num_epochs = 20
base_lr = 0.0004
interval = 10
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='PipelineSwitchHook',
        switch_epoch=280,
        switch_pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='RandomResize',
                scale=(640, 640),
                ratio_range=(0.1, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='PackDetInputs')
        ])
]
launcher = 'none'
work_dir = './work_dirs/balloon'

2023/06/10 00:02:42 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/10 00:02:42 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - WARNING - bbox_head.cls_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - WARNING - bbox_head.cls_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - WARNING - bbox_head.cls_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - WARNING - bbox_head.cls_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - WARNING - bbox_head.reg_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - WARNING - bbox_head.reg_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - WARNING - bbox_head.reg_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - WARNING - bbox_head.reg_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.weight:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.0.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.1.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.2.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.0.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.1.bias:weight_decay=0.0
2023/06/10 00:02:43 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.2.bias:weight_decay=0.0
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([32, 3, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stem.0.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stem.0.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stem.1.conv.weight - torch.Size([32, 32, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stem.1.bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stem.1.bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stem.2.conv.weight - torch.Size([64, 32, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stem.2.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stem.2.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.0.conv.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.main_conv.conv.weight - torch.Size([64, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.main_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.main_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.short_conv.conv.weight - torch.Size([64, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.short_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.short_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.final_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.final_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.final_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([64, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv1.conv.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.1.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([64, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv1.conv.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.2.conv1.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv1.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([64, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage1.1.attention.fc.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage1.1.attention.fc.bias - torch.Size([128]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.0.conv.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.main_conv.conv.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.main_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.main_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.short_conv.conv.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.short_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.short_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.final_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.final_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.final_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.1.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.2.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.3.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.4.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.5.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage2.1.attention.fc.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage2.1.attention.fc.bias - torch.Size([256]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.0.conv.weight - torch.Size([512, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.0.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.0.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.main_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.main_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.main_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.short_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.short_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.short_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.final_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.final_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.final_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.2.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.3.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.4.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.5.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage3.1.attention.fc.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage3.1.attention.fc.bias - torch.Size([512]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.0.conv.weight - torch.Size([1024, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.0.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.0.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.1.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.1.conv2.conv.weight - torch.Size([1024, 2048, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.1.conv2.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.1.conv2.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.main_conv.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.main_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.main_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.short_conv.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.short_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.short_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.final_conv.conv.weight - torch.Size([1024, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.final_conv.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.final_conv.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.2.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

backbone.stage4.2.attention.fc.weight - torch.Size([1024, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

backbone.stage4.2.attention.fc.bias - torch.Size([1024]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.0.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.conv.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.conv.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.main_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.conv.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.short_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.final_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.2.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.conv.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.main_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.conv.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.short_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.final_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.1.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.2.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.main_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.short_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.final_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.1.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.2.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.main_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.conv.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.short_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.conv.weight - torch.Size([1024, 1024, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.final_conv.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv1.conv.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.2.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv2.depthwise_conv.conv.weight - torch.Size([512, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.2.conv2.depthwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv2.depthwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv2.pointwise_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.2.conv2.pointwise_conv.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.2.conv2.pointwise_conv.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.conv.weight - torch.Size([256, 512, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.conv.weight - torch.Size([256, 1024, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.rtm_cls.0.weight - torch.Size([1, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.0.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.weight - torch.Size([1, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.weight - torch.Size([1, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.weight - torch.Size([4, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.weight - torch.Size([4, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.weight - torch.Size([4, 256, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  
2023/06/10 00:02:44 - mmengine - INFO - Load checkpoint from https://download.openmmlab.com/mmrotate/v1.0/rotated_rtmdet/rotated_rtmdet_l-coco_pretrain-3x-dota_ms/rotated_rtmdet_l-coco_pretrain-3x-dota_ms-06d248a2.pth
2023/06/10 00:02:44 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/10 00:02:44 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/10 00:02:44 - mmengine - INFO - Checkpoints will be saved to /home/LYY/workspace/pycharm/mmdetection/workdir/balloon/work_dirs/balloon.
2023/06/10 00:02:52 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:02:52 - mmengine - INFO - Epoch(train)   [1][8/8]  lr: 2.8068e-06  eta: 0:38:38  time: 0.9691  data_time: 0.3654  memory: 11373  loss: 2.4800  loss_cls: 1.6166  loss_bbox: 0.8634
2023/06/10 00:02:56 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:02:56 - mmengine - INFO - Epoch(train)   [2][8/8]  lr: 6.0099e-06  eta: 0:31:19  time: 0.7882  data_time: 0.3125  memory: 11375  loss: 2.4710  loss_cls: 1.5974  loss_bbox: 0.8737
2023/06/10 00:03:01 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:01 - mmengine - INFO - Epoch(train)   [3][8/8]  lr: 9.2131e-06  eta: 0:28:42  time: 0.7250  data_time: 0.2933  memory: 11373  loss: 2.4844  loss_cls: 1.6208  loss_bbox: 0.8636
2023/06/10 00:03:06 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:06 - mmengine - INFO - Epoch(train)   [4][8/8]  lr: 1.2416e-05  eta: 0:27:41  time: 0.7018  data_time: 0.2923  memory: 11377  loss: 2.4868  loss_cls: 1.6260  loss_bbox: 0.8609
2023/06/10 00:03:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:11 - mmengine - INFO - Epoch(train)   [5][8/8]  lr: 1.5619e-05  eta: 0:26:48  time: 0.6817  data_time: 0.2854  memory: 11371  loss: 2.5007  loss_cls: 1.6490  loss_bbox: 0.8517
2023/06/10 00:03:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:16 - mmengine - INFO - Epoch(train)   [6][8/8]  lr: 1.8823e-05  eta: 0:26:10  time: 0.6679  data_time: 0.2808  memory: 11372  loss: 2.5102  loss_cls: 1.6666  loss_bbox: 0.8436
2023/06/10 00:03:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:21 - mmengine - INFO - Epoch(train)   [7][8/8]  lr: 2.2026e-05  eta: 0:25:46  time: 0.5962  data_time: 0.2544  memory: 11378  loss: 2.5226  loss_cls: 1.6901  loss_bbox: 0.8325
2023/06/10 00:03:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:26 - mmengine - INFO - Epoch(train)   [8][8/8]  lr: 2.5229e-05  eta: 0:25:26  time: 0.5963  data_time: 0.2552  memory: 11372  loss: 2.5413  loss_cls: 1.7260  loss_bbox: 0.8153
2023/06/10 00:03:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:30 - mmengine - INFO - Epoch(train)   [9][8/8]  lr: 2.8432e-05  eta: 0:24:58  time: 0.5907  data_time: 0.2509  memory: 11368  loss: 2.5540  loss_cls: 1.7526  loss_bbox: 0.8014
2023/06/10 00:03:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:35 - mmengine - INFO - Epoch(train)  [10][8/8]  lr: 3.1635e-05  eta: 0:24:50  time: 0.5909  data_time: 0.2508  memory: 11373  loss: 2.5756  loss_cls: 1.7979  loss_bbox: 0.7777
2023/06/10 00:03:35 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/10 00:03:38 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:03:38 - mmengine - INFO - bbox_mAP_copypaste: 0.128 0.190 0.167 0.000 0.001 0.210
2023/06/10 00:03:38 - mmengine - INFO - Epoch(val) [10][3/3]    coco/bbox_mAP: 0.1280  coco/bbox_mAP_50: 0.1900  coco/bbox_mAP_75: 0.1670  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.0010  coco/bbox_mAP_l: 0.2100  data_time: 0.1924  time: 0.2649
2023/06/10 00:03:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:43 - mmengine - INFO - Epoch(train)  [11][8/8]  lr: 3.4838e-05  eta: 0:24:34  time: 0.5893  data_time: 0.2494  memory: 11371  loss: 2.5833  loss_cls: 1.8250  loss_bbox: 0.7583
2023/06/10 00:03:48 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:48 - mmengine - INFO - Epoch(train)  [12][8/8]  lr: 3.8042e-05  eta: 0:24:30  time: 0.5963  data_time: 0.2559  memory: 11368  loss: 2.5907  loss_cls: 1.8613  loss_bbox: 0.7293
2023/06/10 00:03:53 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:53 - mmengine - INFO - Epoch(train)  [13][8/8]  lr: 4.1245e-05  eta: 0:24:14  time: 0.5907  data_time: 0.2491  memory: 11379  loss: 2.5778  loss_cls: 1.8761  loss_bbox: 0.7018
2023/06/10 00:03:57 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:03:57 - mmengine - INFO - Epoch(train)  [14][8/8]  lr: 4.4448e-05  eta: 0:24:03  time: 0.5889  data_time: 0.2466  memory: 11369  loss: 2.5328  loss_cls: 1.8673  loss_bbox: 0.6655
2023/06/10 00:04:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:02 - mmengine - INFO - Epoch(train)  [15][8/8]  lr: 4.7651e-05  eta: 0:23:52  time: 0.5930  data_time: 0.2472  memory: 11381  loss: 2.4367  loss_cls: 1.8076  loss_bbox: 0.6291
2023/06/10 00:04:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:07 - mmengine - INFO - Epoch(train)  [16][8/8]  lr: 5.0854e-05  eta: 0:23:41  time: 0.5860  data_time: 0.2408  memory: 11379  loss: 2.2651  loss_cls: 1.6677  loss_bbox: 0.5974
2023/06/10 00:04:12 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:12 - mmengine - INFO - Epoch(train)  [17][8/8]  lr: 5.4058e-05  eta: 0:23:33  time: 0.5875  data_time: 0.2426  memory: 11373  loss: 2.0509  loss_cls: 1.4854  loss_bbox: 0.5655
2023/06/10 00:04:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:16 - mmengine - INFO - Epoch(train)  [18][8/8]  lr: 5.7261e-05  eta: 0:23:22  time: 0.5768  data_time: 0.2311  memory: 11370  loss: 1.8185  loss_cls: 1.2919  loss_bbox: 0.5266
2023/06/10 00:04:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:21 - mmengine - INFO - Epoch(train)  [19][8/8]  lr: 6.0464e-05  eta: 0:23:09  time: 0.5734  data_time: 0.2279  memory: 11370  loss: 1.5934  loss_cls: 1.0897  loss_bbox: 0.5037
2023/06/10 00:04:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:25 - mmengine - INFO - Epoch(train)  [20][8/8]  lr: 6.3667e-05  eta: 0:22:59  time: 0.5690  data_time: 0.2238  memory: 11377  loss: 1.3869  loss_cls: 0.9011  loss_bbox: 0.4857
2023/06/10 00:04:25 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/10 00:04:28 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:04:28 - mmengine - INFO - bbox_mAP_copypaste: 0.425 0.601 0.484 0.000 0.297 0.491
2023/06/10 00:04:28 - mmengine - INFO - Epoch(val) [20][3/3]    coco/bbox_mAP: 0.4250  coco/bbox_mAP_50: 0.6010  coco/bbox_mAP_75: 0.4840  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.2970  coco/bbox_mAP_l: 0.4910  data_time: 0.0705  time: 0.1321
2023/06/10 00:04:33 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:33 - mmengine - INFO - Epoch(train)  [21][8/8]  lr: 6.6870e-05  eta: 0:22:56  time: 0.5761  data_time: 0.2332  memory: 11371  loss: 1.2183  loss_cls: 0.7462  loss_bbox: 0.4722
2023/06/10 00:04:38 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:38 - mmengine - INFO - Epoch(train)  [22][8/8]  lr: 7.0073e-05  eta: 0:22:48  time: 0.5756  data_time: 0.2321  memory: 11373  loss: 1.1060  loss_cls: 0.6496  loss_bbox: 0.4564
2023/06/10 00:04:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:43 - mmengine - INFO - Epoch(train)  [23][8/8]  lr: 7.3277e-05  eta: 0:22:42  time: 0.5759  data_time: 0.2311  memory: 11374  loss: 1.0572  loss_cls: 0.6084  loss_bbox: 0.4489
2023/06/10 00:04:47 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:47 - mmengine - INFO - Epoch(train)  [24][8/8]  lr: 7.6480e-05  eta: 0:22:34  time: 0.5777  data_time: 0.2326  memory: 11370  loss: 1.0281  loss_cls: 0.5769  loss_bbox: 0.4511
2023/06/10 00:04:52 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:52 - mmengine - INFO - Epoch(train)  [25][8/8]  lr: 7.9683e-05  eta: 0:22:30  time: 0.5886  data_time: 0.2435  memory: 11373  loss: 1.0020  loss_cls: 0.5543  loss_bbox: 0.4478
2023/06/10 00:04:57 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:04:57 - mmengine - INFO - Epoch(train)  [26][8/8]  lr: 8.2886e-05  eta: 0:22:23  time: 0.5919  data_time: 0.2472  memory: 11371  loss: 0.9883  loss_cls: 0.5418  loss_bbox: 0.4465
2023/06/10 00:05:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:02 - mmengine - INFO - Epoch(train)  [27][8/8]  lr: 8.6089e-05  eta: 0:22:18  time: 0.5878  data_time: 0.2428  memory: 11375  loss: 0.9506  loss_cls: 0.5147  loss_bbox: 0.4359
2023/06/10 00:05:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:07 - mmengine - INFO - Epoch(train)  [28][8/8]  lr: 8.9292e-05  eta: 0:22:13  time: 0.5921  data_time: 0.2472  memory: 11372  loss: 0.9203  loss_cls: 0.4958  loss_bbox: 0.4245
2023/06/10 00:05:12 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:12 - mmengine - INFO - Epoch(train)  [29][8/8]  lr: 9.2496e-05  eta: 0:22:10  time: 0.5976  data_time: 0.2512  memory: 11377  loss: 0.8871  loss_cls: 0.4704  loss_bbox: 0.4166
2023/06/10 00:05:17 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:17 - mmengine - INFO - Epoch(train)  [30][8/8]  lr: 9.5699e-05  eta: 0:22:03  time: 0.5976  data_time: 0.2521  memory: 11378  loss: 0.8571  loss_cls: 0.4495  loss_bbox: 0.4076
2023/06/10 00:05:17 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/06/10 00:05:19 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:05:19 - mmengine - INFO - bbox_mAP_copypaste: 0.577 0.745 0.658 0.000 0.476 0.649
2023/06/10 00:05:19 - mmengine - INFO - Epoch(val) [30][3/3]    coco/bbox_mAP: 0.5770  coco/bbox_mAP_50: 0.7450  coco/bbox_mAP_75: 0.6580  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4760  coco/bbox_mAP_l: 0.6490  data_time: 0.0725  time: 0.1348
2023/06/10 00:05:24 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:24 - mmengine - INFO - Epoch(train)  [31][8/8]  lr: 9.8902e-05  eta: 0:21:59  time: 0.5981  data_time: 0.2530  memory: 11371  loss: 0.8214  loss_cls: 0.4294  loss_bbox: 0.3919
2023/06/10 00:05:29 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:29 - mmengine - INFO - Epoch(train)  [32][8/8]  lr: 1.0211e-04  eta: 0:21:53  time: 0.5981  data_time: 0.2521  memory: 11380  loss: 0.7761  loss_cls: 0.4027  loss_bbox: 0.3735
2023/06/10 00:05:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:34 - mmengine - INFO - Epoch(train)  [33][8/8]  lr: 1.0531e-04  eta: 0:21:48  time: 0.5979  data_time: 0.2514  memory: 11382  loss: 0.7536  loss_cls: 0.3896  loss_bbox: 0.3640
2023/06/10 00:05:38 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:39 - mmengine - INFO - Epoch(train)  [34][8/8]  lr: 1.0851e-04  eta: 0:21:41  time: 0.5937  data_time: 0.2471  memory: 11391  loss: 0.7409  loss_cls: 0.3839  loss_bbox: 0.3569
2023/06/10 00:05:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:43 - mmengine - INFO - Epoch(train)  [35][8/8]  lr: 1.1171e-04  eta: 0:21:36  time: 0.5887  data_time: 0.2428  memory: 11383  loss: 0.7209  loss_cls: 0.3722  loss_bbox: 0.3487
2023/06/10 00:05:48 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:48 - mmengine - INFO - Epoch(train)  [36][8/8]  lr: 1.1492e-04  eta: 0:21:30  time: 0.5913  data_time: 0.2438  memory: 11378  loss: 0.6901  loss_cls: 0.3533  loss_bbox: 0.3368
2023/06/10 00:05:53 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:53 - mmengine - INFO - Epoch(train)  [37][8/8]  lr: 1.1812e-04  eta: 0:21:24  time: 0.5847  data_time: 0.2366  memory: 11388  loss: 0.6709  loss_cls: 0.3408  loss_bbox: 0.3300
2023/06/10 00:05:58 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:05:58 - mmengine - INFO - Epoch(train)  [38][8/8]  lr: 1.2132e-04  eta: 0:21:18  time: 0.5845  data_time: 0.2367  memory: 11377  loss: 0.6731  loss_cls: 0.3431  loss_bbox: 0.3300
2023/06/10 00:06:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:06:02 - mmengine - INFO - Epoch(train)  [39][8/8]  lr: 1.2453e-04  eta: 0:21:13  time: 0.5859  data_time: 0.2381  memory: 11380  loss: 0.6781  loss_cls: 0.3467  loss_bbox: 0.3314
2023/06/10 00:06:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:06:07 - mmengine - INFO - Epoch(train)  [40][8/8]  lr: 1.2773e-04  eta: 0:21:09  time: 0.5917  data_time: 0.2441  memory: 11389  loss: 0.6704  loss_cls: 0.3434  loss_bbox: 0.3270
2023/06/10 00:06:07 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/06/10 00:06:12 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:06:12 - mmengine - INFO - bbox_mAP_copypaste: 0.627 0.792 0.734 0.000 0.480 0.713
2023/06/10 00:06:12 - mmengine - INFO - Epoch(val) [40][3/3]    coco/bbox_mAP: 0.6270  coco/bbox_mAP_50: 0.7920  coco/bbox_mAP_75: 0.7340  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.4800  coco/bbox_mAP_l: 0.7130  data_time: 0.0690  time: 0.1300
2023/06/10 00:06:17 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:06:17 - mmengine - INFO - Epoch(train)  [41][8/8]  lr: 1.3093e-04  eta: 0:21:06  time: 0.5965  data_time: 0.2497  memory: 11376  loss: 0.6511  loss_cls: 0.3313  loss_bbox: 0.3199
2023/06/10 00:06:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:06:21 - mmengine - INFO - Epoch(train)  [42][8/8]  lr: 1.3414e-04  eta: 0:21:00  time: 0.5941  data_time: 0.2484  memory: 11375  loss: 0.6509  loss_cls: 0.3317  loss_bbox: 0.3192
2023/06/10 00:06:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:06:26 - mmengine - INFO - Epoch(train)  [43][8/8]  lr: 1.3734e-04  eta: 0:20:55  time: 0.5988  data_time: 0.2541  memory: 11378  loss: 0.6406  loss_cls: 0.3269  loss_bbox: 0.3137
2023/06/10 00:06:31 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:06:31 - mmengine - INFO - Epoch(train)  [44][8/8]  lr: 1.4054e-04  eta: 0:20:48  time: 0.5958  data_time: 0.2508  memory: 11377  loss: 0.6252  loss_cls: 0.3161  loss_bbox: 0.3091
2023/06/10 00:06:36 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:06:36 - mmengine - INFO - Epoch(train)  [45][8/8]  lr: 1.4375e-04  eta: 0:20:43  time: 0.5941  data_time: 0.2476  memory: 11378  loss: 0.6081  loss_cls: 0.3060  loss_bbox: 0.3021
2023/06/10 00:06:41 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:06:41 - mmengine - INFO - Epoch(train)  [46][8/8]  lr: 1.4695e-04  eta: 0:20:38  time: 0.5904  data_time: 0.2446  memory: 11372  loss: 0.5991  loss_cls: 0.3015  loss_bbox: 0.2976
2023/06/10 00:06:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:06:45 - mmengine - INFO - Epoch(train)  [47][8/8]  lr: 1.5015e-04  eta: 0:20:32  time: 0.5807  data_time: 0.2351  memory: 11379  loss: 0.5901  loss_cls: 0.2963  loss_bbox: 0.2938
2023/06/10 00:06:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:06:50 - mmengine - INFO - Epoch(train)  [48][8/8]  lr: 1.5336e-04  eta: 0:20:27  time: 0.5859  data_time: 0.2403  memory: 11374  loss: 0.5907  loss_cls: 0.2984  loss_bbox: 0.2923
2023/06/10 00:06:55 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:06:55 - mmengine - INFO - Epoch(train)  [49][8/8]  lr: 1.5656e-04  eta: 0:20:22  time: 0.5848  data_time: 0.2392  memory: 11379  loss: 0.5789  loss_cls: 0.2932  loss_bbox: 0.2857
2023/06/10 00:07:00 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:07:00 - mmengine - INFO - Epoch(train)  [50][8/8]  lr: 1.5976e-04  eta: 0:20:17  time: 0.5916  data_time: 0.2466  memory: 11375  loss: 0.5765  loss_cls: 0.2937  loss_bbox: 0.2828
2023/06/10 00:07:00 - mmengine - INFO - Saving checkpoint at 50 epochs
2023/06/10 00:07:04 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:07:04 - mmengine - INFO - bbox_mAP_copypaste: 0.698 0.828 0.804 0.000 0.555 0.785
2023/06/10 00:07:04 - mmengine - INFO - Epoch(val) [50][3/3]    coco/bbox_mAP: 0.6980  coco/bbox_mAP_50: 0.8280  coco/bbox_mAP_75: 0.8040  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.5550  coco/bbox_mAP_l: 0.7850  data_time: 0.0700  time: 0.1320
2023/06/10 00:07:09 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:07:09 - mmengine - INFO - Epoch(train)  [51][8/8]  lr: 1.6297e-04  eta: 0:20:11  time: 0.5865  data_time: 0.2428  memory: 11380  loss: 0.5715  loss_cls: 0.2935  loss_bbox: 0.2781
2023/06/10 00:07:14 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:07:14 - mmengine - INFO - Epoch(train)  [52][8/8]  lr: 1.6617e-04  eta: 0:20:06  time: 0.5873  data_time: 0.2432  memory: 11372  loss: 0.5574  loss_cls: 0.2847  loss_bbox: 0.2728
2023/06/10 00:07:19 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:07:19 - mmengine - INFO - Epoch(train)  [53][8/8]  lr: 1.6937e-04  eta: 0:20:02  time: 0.5937  data_time: 0.2496  memory: 11381  loss: 0.5514  loss_cls: 0.2822  loss_bbox: 0.2691
2023/06/10 00:07:23 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:07:23 - mmengine - INFO - Epoch(train)  [54][8/8]  lr: 1.7257e-04  eta: 0:19:56  time: 0.5872  data_time: 0.2439  memory: 11368  loss: 0.5403  loss_cls: 0.2767  loss_bbox: 0.2637
2023/06/10 00:07:28 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:07:28 - mmengine - INFO - Epoch(train)  [55][8/8]  lr: 1.7578e-04  eta: 0:19:49  time: 0.5767  data_time: 0.2336  memory: 11370  loss: 0.5439  loss_cls: 0.2776  loss_bbox: 0.2663
2023/06/10 00:07:32 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:07:32 - mmengine - INFO - Epoch(train)  [56][8/8]  lr: 1.7898e-04  eta: 0:19:42  time: 0.5675  data_time: 0.2233  memory: 11378  loss: 0.5397  loss_cls: 0.2727  loss_bbox: 0.2670
2023/06/10 00:07:37 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:07:37 - mmengine - INFO - Epoch(train)  [57][8/8]  lr: 1.8218e-04  eta: 0:19:37  time: 0.5739  data_time: 0.2294  memory: 11374  loss: 0.5348  loss_cls: 0.2679  loss_bbox: 0.2669
2023/06/10 00:07:42 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:07:42 - mmengine - INFO - Epoch(train)  [58][8/8]  lr: 1.8539e-04  eta: 0:19:32  time: 0.5709  data_time: 0.2253  memory: 11382  loss: 0.5379  loss_cls: 0.2679  loss_bbox: 0.2700
2023/06/10 00:07:47 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:07:47 - mmengine - INFO - Epoch(train)  [59][8/8]  lr: 1.8859e-04  eta: 0:19:27  time: 0.5707  data_time: 0.2254  memory: 11374  loss: 0.5414  loss_cls: 0.2702  loss_bbox: 0.2712
2023/06/10 00:07:51 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:07:51 - mmengine - INFO - Epoch(train)  [60][8/8]  lr: 1.9179e-04  eta: 0:19:22  time: 0.5740  data_time: 0.2286  memory: 11370  loss: 0.5384  loss_cls: 0.2687  loss_bbox: 0.2697
2023/06/10 00:07:51 - mmengine - INFO - Saving checkpoint at 60 epochs
2023/06/10 00:07:55 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:07:56 - mmengine - INFO - bbox_mAP_copypaste: 0.751 0.863 0.835 0.003 0.581 0.853
2023/06/10 00:07:56 - mmengine - INFO - Epoch(val) [60][3/3]    coco/bbox_mAP: 0.7510  coco/bbox_mAP_50: 0.8630  coco/bbox_mAP_75: 0.8350  coco/bbox_mAP_s: 0.0030  coco/bbox_mAP_m: 0.5810  coco/bbox_mAP_l: 0.8530  data_time: 0.0717  time: 0.1342
2023/06/10 00:08:00 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:00 - mmengine - INFO - Epoch(train)  [61][8/8]  lr: 1.9500e-04  eta: 0:19:17  time: 0.5830  data_time: 0.2364  memory: 11372  loss: 0.5289  loss_cls: 0.2629  loss_bbox: 0.2660
2023/06/10 00:08:05 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:05 - mmengine - INFO - Epoch(train)  [62][8/8]  lr: 1.9820e-04  eta: 0:19:11  time: 0.5855  data_time: 0.2402  memory: 11373  loss: 0.5191  loss_cls: 0.2583  loss_bbox: 0.2608
2023/06/10 00:08:10 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:10 - mmengine - INFO - Epoch(train)  [63][8/8]  lr: 2.0140e-04  eta: 0:19:07  time: 0.5877  data_time: 0.2433  memory: 11374  loss: 0.5118  loss_cls: 0.2562  loss_bbox: 0.2556
2023/06/10 00:08:15 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:15 - mmengine - INFO - Epoch(train)  [64][8/8]  lr: 2.0461e-04  eta: 0:19:02  time: 0.5889  data_time: 0.2448  memory: 11374  loss: 0.4989  loss_cls: 0.2481  loss_bbox: 0.2508
2023/06/10 00:08:20 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:20 - mmengine - INFO - Epoch(train)  [65][8/8]  lr: 2.0781e-04  eta: 0:18:57  time: 0.5885  data_time: 0.2455  memory: 11372  loss: 0.4827  loss_cls: 0.2383  loss_bbox: 0.2444
2023/06/10 00:08:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:25 - mmengine - INFO - Epoch(train)  [66][8/8]  lr: 2.1101e-04  eta: 0:18:53  time: 0.5944  data_time: 0.2505  memory: 11372  loss: 0.4748  loss_cls: 0.2305  loss_bbox: 0.2442
2023/06/10 00:08:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:30 - mmengine - INFO - Epoch(train)  [67][8/8]  lr: 2.1422e-04  eta: 0:18:50  time: 0.6057  data_time: 0.2621  memory: 11373  loss: 0.4701  loss_cls: 0.2276  loss_bbox: 0.2426
2023/06/10 00:08:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:35 - mmengine - INFO - Epoch(train)  [68][8/8]  lr: 2.1742e-04  eta: 0:18:47  time: 0.6180  data_time: 0.2736  memory: 11372  loss: 0.4626  loss_cls: 0.2221  loss_bbox: 0.2405
2023/06/10 00:08:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:40 - mmengine - INFO - Epoch(train)  [69][8/8]  lr: 2.2062e-04  eta: 0:18:42  time: 0.6145  data_time: 0.2684  memory: 11374  loss: 0.4573  loss_cls: 0.2151  loss_bbox: 0.2423
2023/06/10 00:08:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:45 - mmengine - INFO - Epoch(train)  [70][8/8]  lr: 2.2383e-04  eta: 0:18:37  time: 0.6168  data_time: 0.2708  memory: 11375  loss: 0.4554  loss_cls: 0.2120  loss_bbox: 0.2434
2023/06/10 00:08:45 - mmengine - INFO - Saving checkpoint at 70 epochs
2023/06/10 00:08:47 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:08:47 - mmengine - INFO - bbox_mAP_copypaste: 0.743 0.878 0.841 0.050 0.591 0.827
2023/06/10 00:08:47 - mmengine - INFO - Epoch(val) [70][3/3]    coco/bbox_mAP: 0.7430  coco/bbox_mAP_50: 0.8780  coco/bbox_mAP_75: 0.8410  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.5910  coco/bbox_mAP_l: 0.8270  data_time: 0.0711  time: 0.1311
2023/06/10 00:08:52 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:52 - mmengine - INFO - Epoch(train)  [71][8/8]  lr: 2.2703e-04  eta: 0:18:32  time: 0.6172  data_time: 0.2701  memory: 11372  loss: 0.4672  loss_cls: 0.2182  loss_bbox: 0.2490
2023/06/10 00:08:57 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:08:57 - mmengine - INFO - Epoch(train)  [72][8/8]  lr: 2.3023e-04  eta: 0:18:27  time: 0.6090  data_time: 0.2614  memory: 11379  loss: 0.4634  loss_cls: 0.2162  loss_bbox: 0.2473
2023/06/10 00:09:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:02 - mmengine - INFO - Epoch(train)  [73][8/8]  lr: 2.3344e-04  eta: 0:18:21  time: 0.5955  data_time: 0.2472  memory: 11373  loss: 0.4627  loss_cls: 0.2144  loss_bbox: 0.2483
2023/06/10 00:09:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:07 - mmengine - INFO - Epoch(train)  [74][8/8]  lr: 2.3664e-04  eta: 0:18:16  time: 0.5877  data_time: 0.2406  memory: 11375  loss: 0.4639  loss_cls: 0.2144  loss_bbox: 0.2495
2023/06/10 00:09:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:11 - mmengine - INFO - Epoch(train)  [75][8/8]  lr: 2.3984e-04  eta: 0:18:11  time: 0.5846  data_time: 0.2380  memory: 11375  loss: 0.4621  loss_cls: 0.2146  loss_bbox: 0.2474
2023/06/10 00:09:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:16 - mmengine - INFO - Epoch(train)  [76][8/8]  lr: 2.4304e-04  eta: 0:18:06  time: 0.5823  data_time: 0.2352  memory: 11373  loss: 0.4586  loss_cls: 0.2139  loss_bbox: 0.2447
2023/06/10 00:09:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:21 - mmengine - INFO - Epoch(train)  [77][8/8]  lr: 2.4625e-04  eta: 0:18:00  time: 0.5771  data_time: 0.2295  memory: 11371  loss: 0.4504  loss_cls: 0.2094  loss_bbox: 0.2410
2023/06/10 00:09:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:26 - mmengine - INFO - Epoch(train)  [78][8/8]  lr: 2.4945e-04  eta: 0:17:56  time: 0.5805  data_time: 0.2336  memory: 11368  loss: 0.4406  loss_cls: 0.2043  loss_bbox: 0.2363
2023/06/10 00:09:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:30 - mmengine - INFO - Epoch(train)  [79][8/8]  lr: 2.5265e-04  eta: 0:17:51  time: 0.5850  data_time: 0.2388  memory: 11378  loss: 0.4461  loss_cls: 0.2069  loss_bbox: 0.2392
2023/06/10 00:09:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:35 - mmengine - INFO - Epoch(train)  [80][8/8]  lr: 2.5586e-04  eta: 0:17:46  time: 0.5871  data_time: 0.2410  memory: 11385  loss: 0.4428  loss_cls: 0.2051  loss_bbox: 0.2377
2023/06/10 00:09:35 - mmengine - INFO - Saving checkpoint at 80 epochs
2023/06/10 00:09:38 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:09:38 - mmengine - INFO - bbox_mAP_copypaste: 0.759 0.889 0.878 0.034 0.605 0.849
2023/06/10 00:09:38 - mmengine - INFO - Epoch(val) [80][3/3]    coco/bbox_mAP: 0.7590  coco/bbox_mAP_50: 0.8890  coco/bbox_mAP_75: 0.8780  coco/bbox_mAP_s: 0.0340  coco/bbox_mAP_m: 0.6050  coco/bbox_mAP_l: 0.8490  data_time: 0.0701  time: 0.1313
2023/06/10 00:09:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:43 - mmengine - INFO - Epoch(train)  [81][8/8]  lr: 2.5906e-04  eta: 0:17:41  time: 0.5890  data_time: 0.2444  memory: 11373  loss: 0.4449  loss_cls: 0.2062  loss_bbox: 0.2386
2023/06/10 00:09:47 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:47 - mmengine - INFO - Epoch(train)  [82][8/8]  lr: 2.6226e-04  eta: 0:17:36  time: 0.5901  data_time: 0.2453  memory: 11381  loss: 0.4376  loss_cls: 0.2019  loss_bbox: 0.2357
2023/06/10 00:09:52 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:52 - mmengine - INFO - Epoch(train)  [83][8/8]  lr: 2.6547e-04  eta: 0:17:31  time: 0.5885  data_time: 0.2445  memory: 11376  loss: 0.4344  loss_cls: 0.2011  loss_bbox: 0.2332
2023/06/10 00:09:57 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:09:57 - mmengine - INFO - Epoch(train)  [84][8/8]  lr: 2.6867e-04  eta: 0:17:26  time: 0.5920  data_time: 0.2477  memory: 11373  loss: 0.4334  loss_cls: 0.1999  loss_bbox: 0.2335
2023/06/10 00:10:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:02 - mmengine - INFO - Epoch(train)  [85][8/8]  lr: 2.7187e-04  eta: 0:17:21  time: 0.5853  data_time: 0.2413  memory: 11368  loss: 0.4196  loss_cls: 0.1923  loss_bbox: 0.2272
2023/06/10 00:10:06 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:06 - mmengine - INFO - Epoch(train)  [86][8/8]  lr: 2.7508e-04  eta: 0:17:15  time: 0.5806  data_time: 0.2376  memory: 11368  loss: 0.4126  loss_cls: 0.1892  loss_bbox: 0.2234
2023/06/10 00:10:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:11 - mmengine - INFO - Epoch(train)  [87][8/8]  lr: 2.7828e-04  eta: 0:17:10  time: 0.5794  data_time: 0.2357  memory: 11375  loss: 0.3989  loss_cls: 0.1815  loss_bbox: 0.2174
2023/06/10 00:10:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:16 - mmengine - INFO - Epoch(train)  [88][8/8]  lr: 2.8148e-04  eta: 0:17:06  time: 0.5854  data_time: 0.2420  memory: 11375  loss: 0.3991  loss_cls: 0.1816  loss_bbox: 0.2175
2023/06/10 00:10:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:21 - mmengine - INFO - Epoch(train)  [89][8/8]  lr: 2.8469e-04  eta: 0:17:02  time: 0.5954  data_time: 0.2510  memory: 11377  loss: 0.3914  loss_cls: 0.1762  loss_bbox: 0.2152
2023/06/10 00:10:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:26 - mmengine - INFO - Epoch(train)  [90][8/8]  lr: 2.8789e-04  eta: 0:16:57  time: 0.5914  data_time: 0.2473  memory: 11380  loss: 0.3899  loss_cls: 0.1739  loss_bbox: 0.2160
2023/06/10 00:10:26 - mmengine - INFO - Saving checkpoint at 90 epochs
2023/06/10 00:10:28 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:10:29 - mmengine - INFO - bbox_mAP_copypaste: 0.769 0.912 0.873 0.050 0.636 0.851
2023/06/10 00:10:29 - mmengine - INFO - Epoch(val) [90][3/3]    coco/bbox_mAP: 0.7690  coco/bbox_mAP_50: 0.9120  coco/bbox_mAP_75: 0.8730  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6360  coco/bbox_mAP_l: 0.8510  data_time: 0.0724  time: 0.1339
2023/06/10 00:10:33 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:33 - mmengine - INFO - Epoch(train)  [91][8/8]  lr: 2.9109e-04  eta: 0:16:52  time: 0.5948  data_time: 0.2495  memory: 11380  loss: 0.4060  loss_cls: 0.1841  loss_bbox: 0.2219
2023/06/10 00:10:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:39 - mmengine - INFO - Epoch(train)  [92][8/8]  lr: 2.9430e-04  eta: 0:16:48  time: 0.6042  data_time: 0.2581  memory: 11371  loss: 0.4034  loss_cls: 0.1823  loss_bbox: 0.2211
2023/06/10 00:10:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:43 - mmengine - INFO - Epoch(train)  [93][8/8]  lr: 2.9750e-04  eta: 0:16:43  time: 0.6043  data_time: 0.2566  memory: 11372  loss: 0.4100  loss_cls: 0.1859  loss_bbox: 0.2241
2023/06/10 00:10:48 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:48 - mmengine - INFO - Epoch(train)  [94][8/8]  lr: 3.0070e-04  eta: 0:16:37  time: 0.5966  data_time: 0.2486  memory: 11377  loss: 0.4026  loss_cls: 0.1811  loss_bbox: 0.2215
2023/06/10 00:10:53 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:53 - mmengine - INFO - Epoch(train)  [95][8/8]  lr: 3.0390e-04  eta: 0:16:32  time: 0.5890  data_time: 0.2406  memory: 11373  loss: 0.3964  loss_cls: 0.1766  loss_bbox: 0.2198
2023/06/10 00:10:57 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:10:57 - mmengine - INFO - Epoch(train)  [96][8/8]  lr: 3.0711e-04  eta: 0:16:27  time: 0.5880  data_time: 0.2408  memory: 11381  loss: 0.3972  loss_cls: 0.1769  loss_bbox: 0.2203
2023/06/10 00:11:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:02 - mmengine - INFO - Epoch(train)  [97][8/8]  lr: 3.1031e-04  eta: 0:16:22  time: 0.5889  data_time: 0.2421  memory: 11380  loss: 0.3830  loss_cls: 0.1676  loss_bbox: 0.2154
2023/06/10 00:11:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:07 - mmengine - INFO - Epoch(train)  [98][8/8]  lr: 3.1351e-04  eta: 0:16:17  time: 0.5817  data_time: 0.2350  memory: 11381  loss: 0.3756  loss_cls: 0.1621  loss_bbox: 0.2134
2023/06/10 00:11:12 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:12 - mmengine - INFO - Epoch(train)  [99][8/8]  lr: 3.1672e-04  eta: 0:16:12  time: 0.5826  data_time: 0.2361  memory: 11373  loss: 0.3662  loss_cls: 0.1563  loss_bbox: 0.2099
2023/06/10 00:11:17 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:17 - mmengine - INFO - Epoch(train) [100][8/8]  lr: 3.1992e-04  eta: 0:16:07  time: 0.5847  data_time: 0.2382  memory: 11382  loss: 0.3735  loss_cls: 0.1613  loss_bbox: 0.2121
2023/06/10 00:11:17 - mmengine - INFO - Saving checkpoint at 100 epochs
2023/06/10 00:11:19 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:11:19 - mmengine - INFO - bbox_mAP_copypaste: 0.764 0.871 0.842 0.002 0.579 0.873
2023/06/10 00:11:19 - mmengine - INFO - Epoch(val) [100][3/3]    coco/bbox_mAP: 0.7640  coco/bbox_mAP_50: 0.8710  coco/bbox_mAP_75: 0.8420  coco/bbox_mAP_s: 0.0020  coco/bbox_mAP_m: 0.5790  coco/bbox_mAP_l: 0.8730  data_time: 0.0722  time: 0.1340
2023/06/10 00:11:24 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:24 - mmengine - INFO - Epoch(train) [101][8/8]  lr: 3.2312e-04  eta: 0:16:03  time: 0.5881  data_time: 0.2404  memory: 11379  loss: 0.3816  loss_cls: 0.1662  loss_bbox: 0.2154
2023/06/10 00:11:29 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:29 - mmengine - INFO - Epoch(train) [102][8/8]  lr: 3.2633e-04  eta: 0:15:57  time: 0.5839  data_time: 0.2367  memory: 11369  loss: 0.3866  loss_cls: 0.1712  loss_bbox: 0.2154
2023/06/10 00:11:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:34 - mmengine - INFO - Epoch(train) [103][8/8]  lr: 3.2953e-04  eta: 0:15:53  time: 0.5876  data_time: 0.2390  memory: 11376  loss: 0.3841  loss_cls: 0.1690  loss_bbox: 0.2151
2023/06/10 00:11:38 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:38 - mmengine - INFO - Epoch(train) [104][8/8]  lr: 3.3273e-04  eta: 0:15:48  time: 0.5863  data_time: 0.2383  memory: 11380  loss: 0.3909  loss_cls: 0.1730  loss_bbox: 0.2179
2023/06/10 00:11:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:43 - mmengine - INFO - Epoch(train) [105][8/8]  lr: 3.3594e-04  eta: 0:15:43  time: 0.5872  data_time: 0.2401  memory: 11378  loss: 0.3938  loss_cls: 0.1749  loss_bbox: 0.2189
2023/06/10 00:11:48 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:48 - mmengine - INFO - Epoch(train) [106][8/8]  lr: 3.3914e-04  eta: 0:15:38  time: 0.5926  data_time: 0.2470  memory: 11380  loss: 0.3846  loss_cls: 0.1694  loss_bbox: 0.2152
2023/06/10 00:11:53 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:53 - mmengine - INFO - Epoch(train) [107][8/8]  lr: 3.4234e-04  eta: 0:15:34  time: 0.5931  data_time: 0.2479  memory: 11377  loss: 0.3764  loss_cls: 0.1634  loss_bbox: 0.2130
2023/06/10 00:11:58 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:11:58 - mmengine - INFO - Epoch(train) [108][8/8]  lr: 3.4555e-04  eta: 0:15:28  time: 0.5933  data_time: 0.2485  memory: 11374  loss: 0.3657  loss_cls: 0.1563  loss_bbox: 0.2094
2023/06/10 00:12:03 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:03 - mmengine - INFO - Epoch(train) [109][8/8]  lr: 3.4875e-04  eta: 0:15:24  time: 0.5937  data_time: 0.2500  memory: 11372  loss: 0.3635  loss_cls: 0.1546  loss_bbox: 0.2089
2023/06/10 00:12:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:07 - mmengine - INFO - Epoch(train) [110][8/8]  lr: 3.5195e-04  eta: 0:15:18  time: 0.5869  data_time: 0.2413  memory: 11390  loss: 0.3680  loss_cls: 0.1578  loss_bbox: 0.2102
2023/06/10 00:12:07 - mmengine - INFO - Saving checkpoint at 110 epochs
2023/06/10 00:12:10 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:12:10 - mmengine - INFO - bbox_mAP_copypaste: 0.769 0.917 0.841 0.076 0.646 0.848
2023/06/10 00:12:10 - mmengine - INFO - Epoch(val) [110][3/3]    coco/bbox_mAP: 0.7690  coco/bbox_mAP_50: 0.9170  coco/bbox_mAP_75: 0.8410  coco/bbox_mAP_s: 0.0760  coco/bbox_mAP_m: 0.6460  coco/bbox_mAP_l: 0.8480  data_time: 0.0699  time: 0.1311
2023/06/10 00:12:15 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:15 - mmengine - INFO - Epoch(train) [111][8/8]  lr: 3.5516e-04  eta: 0:15:14  time: 0.5914  data_time: 0.2452  memory: 11384  loss: 0.3733  loss_cls: 0.1612  loss_bbox: 0.2121
2023/06/10 00:12:19 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:19 - mmengine - INFO - Epoch(train) [112][8/8]  lr: 3.5836e-04  eta: 0:15:09  time: 0.5837  data_time: 0.2363  memory: 11373  loss: 0.3744  loss_cls: 0.1623  loss_bbox: 0.2121
2023/06/10 00:12:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:25 - mmengine - INFO - Epoch(train) [113][8/8]  lr: 3.6156e-04  eta: 0:15:04  time: 0.5925  data_time: 0.2461  memory: 11371  loss: 0.3782  loss_cls: 0.1657  loss_bbox: 0.2125
2023/06/10 00:12:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:30 - mmengine - INFO - Epoch(train) [114][8/8]  lr: 3.6477e-04  eta: 0:15:00  time: 0.5981  data_time: 0.2523  memory: 11368  loss: 0.3758  loss_cls: 0.1655  loss_bbox: 0.2103
2023/06/10 00:12:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:34 - mmengine - INFO - Epoch(train) [115][8/8]  lr: 3.6797e-04  eta: 0:14:55  time: 0.5966  data_time: 0.2510  memory: 11382  loss: 0.3767  loss_cls: 0.1668  loss_bbox: 0.2100
2023/06/10 00:12:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:39 - mmengine - INFO - Epoch(train) [116][8/8]  lr: 3.7117e-04  eta: 0:14:50  time: 0.6038  data_time: 0.2597  memory: 11384  loss: 0.3720  loss_cls: 0.1653  loss_bbox: 0.2067
2023/06/10 00:12:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:44 - mmengine - INFO - Epoch(train) [117][8/8]  lr: 3.7437e-04  eta: 0:14:46  time: 0.6052  data_time: 0.2606  memory: 11370  loss: 0.3649  loss_cls: 0.1596  loss_bbox: 0.2053
2023/06/10 00:12:49 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:49 - mmengine - INFO - Epoch(train) [118][8/8]  lr: 3.7758e-04  eta: 0:14:41  time: 0.6069  data_time: 0.2635  memory: 11374  loss: 0.3588  loss_cls: 0.1540  loss_bbox: 0.2049
2023/06/10 00:12:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:54 - mmengine - INFO - Epoch(train) [119][8/8]  lr: 3.8078e-04  eta: 0:14:36  time: 0.5986  data_time: 0.2554  memory: 11385  loss: 0.3566  loss_cls: 0.1531  loss_bbox: 0.2035
2023/06/10 00:12:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:12:59 - mmengine - INFO - Epoch(train) [120][8/8]  lr: 3.8398e-04  eta: 0:14:31  time: 0.5950  data_time: 0.2506  memory: 11377  loss: 0.3578  loss_cls: 0.1532  loss_bbox: 0.2046
2023/06/10 00:12:59 - mmengine - INFO - Saving checkpoint at 120 epochs
2023/06/10 00:13:01 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:13:01 - mmengine - INFO - bbox_mAP_copypaste: 0.764 0.919 0.878 0.050 0.633 0.841
2023/06/10 00:13:01 - mmengine - INFO - Epoch(val) [120][3/3]    coco/bbox_mAP: 0.7640  coco/bbox_mAP_50: 0.9190  coco/bbox_mAP_75: 0.8780  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6330  coco/bbox_mAP_l: 0.8410  data_time: 0.0696  time: 0.1305
2023/06/10 00:13:06 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:13:06 - mmengine - INFO - Epoch(train) [121][8/8]  lr: 3.8719e-04  eta: 0:14:26  time: 0.5925  data_time: 0.2473  memory: 11369  loss: 0.3546  loss_cls: 0.1521  loss_bbox: 0.2025
2023/06/10 00:13:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:13:11 - mmengine - INFO - Epoch(train) [122][8/8]  lr: 3.9039e-04  eta: 0:14:21  time: 0.5948  data_time: 0.2495  memory: 11379  loss: 0.3613  loss_cls: 0.1542  loss_bbox: 0.2071
2023/06/10 00:13:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:13:16 - mmengine - INFO - Epoch(train) [123][8/8]  lr: 3.9359e-04  eta: 0:14:16  time: 0.5916  data_time: 0.2469  memory: 11382  loss: 0.3641  loss_cls: 0.1565  loss_bbox: 0.2076
2023/06/10 00:13:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:13:21 - mmengine - INFO - Epoch(train) [124][8/8]  lr: 3.9680e-04  eta: 0:14:12  time: 0.5944  data_time: 0.2487  memory: 11373  loss: 0.3722  loss_cls: 0.1614  loss_bbox: 0.2108
2023/06/10 00:13:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:13:26 - mmengine - INFO - Epoch(train) [125][8/8]  lr: 4.0000e-04  eta: 0:14:07  time: 0.5937  data_time: 0.2474  memory: 11375  loss: 0.3687  loss_cls: 0.1576  loss_bbox: 0.2111
2023/06/10 00:13:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:13:30 - mmengine - INFO - Epoch(train) [126][8/8]  lr: 4.0000e-04  eta: 0:14:02  time: 0.5934  data_time: 0.2477  memory: 11370  loss: 0.3623  loss_cls: 0.1533  loss_bbox: 0.2090
2023/06/10 00:13:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:13:35 - mmengine - INFO - Epoch(train) [127][8/8]  lr: 4.0000e-04  eta: 0:13:57  time: 0.5915  data_time: 0.2459  memory: 11378  loss: 0.3629  loss_cls: 0.1521  loss_bbox: 0.2109
2023/06/10 00:13:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:13:39 - mmengine - INFO - Epoch(train) [128][8/8]  lr: 4.0000e-04  eta: 0:13:51  time: 0.5808  data_time: 0.2356  memory: 11382  loss: 0.3554  loss_cls: 0.1485  loss_bbox: 0.2069
2023/06/10 00:13:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:13:44 - mmengine - INFO - Epoch(train) [129][8/8]  lr: 4.0000e-04  eta: 0:13:46  time: 0.5791  data_time: 0.2338  memory: 11370  loss: 0.3500  loss_cls: 0.1463  loss_bbox: 0.2038
2023/06/10 00:13:49 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:13:49 - mmengine - INFO - Epoch(train) [130][8/8]  lr: 4.0000e-04  eta: 0:13:42  time: 0.5764  data_time: 0.2311  memory: 11380  loss: 0.3380  loss_cls: 0.1385  loss_bbox: 0.1996
2023/06/10 00:13:49 - mmengine - INFO - Saving checkpoint at 130 epochs
2023/06/10 00:13:51 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:13:52 - mmengine - INFO - bbox_mAP_copypaste: 0.789 0.923 0.882 0.076 0.664 0.861
2023/06/10 00:13:52 - mmengine - INFO - Epoch(val) [130][3/3]    coco/bbox_mAP: 0.7890  coco/bbox_mAP_50: 0.9230  coco/bbox_mAP_75: 0.8820  coco/bbox_mAP_s: 0.0760  coco/bbox_mAP_m: 0.6640  coco/bbox_mAP_l: 0.8610  data_time: 0.0704  time: 0.1338
2023/06/10 00:13:56 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:13:56 - mmengine - INFO - Epoch(train) [131][8/8]  lr: 4.0000e-04  eta: 0:13:37  time: 0.5772  data_time: 0.2320  memory: 11374  loss: 0.3370  loss_cls: 0.1385  loss_bbox: 0.1984
2023/06/10 00:14:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:02 - mmengine - INFO - Epoch(train) [132][8/8]  lr: 4.0000e-04  eta: 0:13:32  time: 0.5841  data_time: 0.2389  memory: 11379  loss: 0.3416  loss_cls: 0.1398  loss_bbox: 0.2018
2023/06/10 00:14:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:07 - mmengine - INFO - Epoch(train) [133][8/8]  lr: 4.0000e-04  eta: 0:13:28  time: 0.5917  data_time: 0.2472  memory: 11387  loss: 0.3436  loss_cls: 0.1415  loss_bbox: 0.2022
2023/06/10 00:14:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:11 - mmengine - INFO - Epoch(train) [134][8/8]  lr: 4.0000e-04  eta: 0:13:22  time: 0.5933  data_time: 0.2483  memory: 11375  loss: 0.3488  loss_cls: 0.1427  loss_bbox: 0.2060
2023/06/10 00:14:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:16 - mmengine - INFO - Epoch(train) [135][8/8]  lr: 4.0000e-04  eta: 0:13:17  time: 0.5884  data_time: 0.2428  memory: 11373  loss: 0.3548  loss_cls: 0.1464  loss_bbox: 0.2083
2023/06/10 00:14:20 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:20 - mmengine - INFO - Epoch(train) [136][8/8]  lr: 4.0000e-04  eta: 0:13:12  time: 0.5872  data_time: 0.2416  memory: 11384  loss: 0.3562  loss_cls: 0.1459  loss_bbox: 0.2103
2023/06/10 00:14:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:25 - mmengine - INFO - Epoch(train) [137][8/8]  lr: 4.0000e-04  eta: 0:13:07  time: 0.5820  data_time: 0.2371  memory: 11376  loss: 0.3567  loss_cls: 0.1457  loss_bbox: 0.2110
2023/06/10 00:14:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:30 - mmengine - INFO - Epoch(train) [138][8/8]  lr: 4.0000e-04  eta: 0:13:02  time: 0.5761  data_time: 0.2316  memory: 11370  loss: 0.3541  loss_cls: 0.1461  loss_bbox: 0.2081
2023/06/10 00:14:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:34 - mmengine - INFO - Epoch(train) [139][8/8]  lr: 4.0000e-04  eta: 0:12:57  time: 0.5669  data_time: 0.2226  memory: 11374  loss: 0.3525  loss_cls: 0.1462  loss_bbox: 0.2063
2023/06/10 00:14:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:39 - mmengine - INFO - Epoch(train) [140][8/8]  lr: 4.0000e-04  eta: 0:12:53  time: 0.5791  data_time: 0.2344  memory: 11370  loss: 0.3474  loss_cls: 0.1438  loss_bbox: 0.2036
2023/06/10 00:14:39 - mmengine - INFO - Saving checkpoint at 140 epochs
2023/06/10 00:14:42 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:14:42 - mmengine - INFO - bbox_mAP_copypaste: 0.799 0.937 0.899 0.151 0.681 0.871
2023/06/10 00:14:42 - mmengine - INFO - Epoch(val) [140][3/3]    coco/bbox_mAP: 0.7990  coco/bbox_mAP_50: 0.9370  coco/bbox_mAP_75: 0.8990  coco/bbox_mAP_s: 0.1510  coco/bbox_mAP_m: 0.6810  coco/bbox_mAP_l: 0.8710  data_time: 0.0712  time: 0.1331
2023/06/10 00:14:47 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:47 - mmengine - INFO - Epoch(train) [141][8/8]  lr: 4.0000e-04  eta: 0:12:48  time: 0.5842  data_time: 0.2409  memory: 11372  loss: 0.3385  loss_cls: 0.1381  loss_bbox: 0.2004
2023/06/10 00:14:52 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:52 - mmengine - INFO - Epoch(train) [142][8/8]  lr: 4.0000e-04  eta: 0:12:43  time: 0.5833  data_time: 0.2403  memory: 11371  loss: 0.3353  loss_cls: 0.1374  loss_bbox: 0.1980
2023/06/10 00:14:57 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:14:57 - mmengine - INFO - Epoch(train) [143][8/8]  lr: 4.0000e-04  eta: 0:12:38  time: 0.5917  data_time: 0.2486  memory: 11371  loss: 0.3266  loss_cls: 0.1336  loss_bbox: 0.1930
2023/06/10 00:15:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:02 - mmengine - INFO - Epoch(train) [144][8/8]  lr: 4.0000e-04  eta: 0:12:34  time: 0.5983  data_time: 0.2561  memory: 11374  loss: 0.3195  loss_cls: 0.1310  loss_bbox: 0.1885
2023/06/10 00:15:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:07 - mmengine - INFO - Epoch(train) [145][8/8]  lr: 4.0000e-04  eta: 0:12:29  time: 0.6054  data_time: 0.2620  memory: 11380  loss: 0.3257  loss_cls: 0.1338  loss_bbox: 0.1919
2023/06/10 00:15:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:11 - mmengine - INFO - Epoch(train) [146][8/8]  lr: 4.0000e-04  eta: 0:12:24  time: 0.5972  data_time: 0.2542  memory: 11371  loss: 0.3285  loss_cls: 0.1345  loss_bbox: 0.1941
2023/06/10 00:15:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:16 - mmengine - INFO - Epoch(train) [147][8/8]  lr: 4.0000e-04  eta: 0:12:19  time: 0.5931  data_time: 0.2505  memory: 11368  loss: 0.3336  loss_cls: 0.1361  loss_bbox: 0.1975
2023/06/10 00:15:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:21 - mmengine - INFO - Epoch(train) [148][8/8]  lr: 4.0000e-04  eta: 0:12:14  time: 0.5938  data_time: 0.2499  memory: 11375  loss: 0.3371  loss_cls: 0.1373  loss_bbox: 0.1998
2023/06/10 00:15:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:25 - mmengine - INFO - Epoch(train) [149][8/8]  lr: 4.0000e-04  eta: 0:12:09  time: 0.5897  data_time: 0.2455  memory: 11373  loss: 0.3393  loss_cls: 0.1391  loss_bbox: 0.2002
2023/06/10 00:15:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:30 - mmengine - INFO - Epoch(train) [150][8/8]  lr: 4.0000e-04  eta: 0:12:04  time: 0.5852  data_time: 0.2400  memory: 11379  loss: 0.3385  loss_cls: 0.1380  loss_bbox: 0.2004
2023/06/10 00:15:30 - mmengine - INFO - Saving checkpoint at 150 epochs
2023/06/10 00:15:33 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:15:33 - mmengine - INFO - bbox_mAP_copypaste: 0.804 0.940 0.881 0.067 0.678 0.876
2023/06/10 00:15:33 - mmengine - INFO - Epoch(val) [150][3/3]    coco/bbox_mAP: 0.8040  coco/bbox_mAP_50: 0.9400  coco/bbox_mAP_75: 0.8810  coco/bbox_mAP_s: 0.0670  coco/bbox_mAP_m: 0.6780  coco/bbox_mAP_l: 0.8760  data_time: 0.0719  time: 0.1322
2023/06/10 00:15:38 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:38 - mmengine - INFO - Epoch(train) [151][8/8]  lr: 3.9998e-04  eta: 0:12:00  time: 0.5864  data_time: 0.2412  memory: 11371  loss: 0.3306  loss_cls: 0.1331  loss_bbox: 0.1975
2023/06/10 00:15:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:43 - mmengine - INFO - Epoch(train) [152][8/8]  lr: 3.9992e-04  eta: 0:11:55  time: 0.5871  data_time: 0.2410  memory: 11371  loss: 0.3284  loss_cls: 0.1321  loss_bbox: 0.1963
2023/06/10 00:15:48 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:48 - mmengine - INFO - Epoch(train) [153][8/8]  lr: 3.9982e-04  eta: 0:11:50  time: 0.5960  data_time: 0.2489  memory: 11371  loss: 0.3232  loss_cls: 0.1295  loss_bbox: 0.1937
2023/06/10 00:15:52 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:52 - mmengine - INFO - Epoch(train) [154][8/8]  lr: 3.9967e-04  eta: 0:11:45  time: 0.5914  data_time: 0.2450  memory: 11372  loss: 0.3254  loss_cls: 0.1331  loss_bbox: 0.1923
2023/06/10 00:15:57 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:15:57 - mmengine - INFO - Epoch(train) [155][8/8]  lr: 3.9948e-04  eta: 0:11:40  time: 0.5996  data_time: 0.2536  memory: 11373  loss: 0.3229  loss_cls: 0.1318  loss_bbox: 0.1912
2023/06/10 00:16:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:02 - mmengine - INFO - Epoch(train) [156][8/8]  lr: 3.9924e-04  eta: 0:11:36  time: 0.5990  data_time: 0.2540  memory: 11372  loss: 0.3233  loss_cls: 0.1321  loss_bbox: 0.1912
2023/06/10 00:16:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:07 - mmengine - INFO - Epoch(train) [157][8/8]  lr: 3.9897e-04  eta: 0:11:31  time: 0.5923  data_time: 0.2486  memory: 11373  loss: 0.3250  loss_cls: 0.1340  loss_bbox: 0.1910
2023/06/10 00:16:12 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:12 - mmengine - INFO - Epoch(train) [158][8/8]  lr: 3.9864e-04  eta: 0:11:26  time: 0.6047  data_time: 0.2616  memory: 11372  loss: 0.3201  loss_cls: 0.1320  loss_bbox: 0.1881
2023/06/10 00:16:17 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:17 - mmengine - INFO - Epoch(train) [159][8/8]  lr: 3.9828e-04  eta: 0:11:21  time: 0.6012  data_time: 0.2583  memory: 11378  loss: 0.3240  loss_cls: 0.1342  loss_bbox: 0.1898
2023/06/10 00:16:22 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:22 - mmengine - INFO - Epoch(train) [160][8/8]  lr: 3.9787e-04  eta: 0:11:17  time: 0.6155  data_time: 0.2739  memory: 11376  loss: 0.3337  loss_cls: 0.1411  loss_bbox: 0.1926
2023/06/10 00:16:22 - mmengine - INFO - Saving checkpoint at 160 epochs
2023/06/10 00:16:25 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:16:25 - mmengine - INFO - bbox_mAP_copypaste: 0.778 0.927 0.884 0.214 0.615 0.860
2023/06/10 00:16:25 - mmengine - INFO - Epoch(val) [160][3/3]    coco/bbox_mAP: 0.7780  coco/bbox_mAP_50: 0.9270  coco/bbox_mAP_75: 0.8840  coco/bbox_mAP_s: 0.2140  coco/bbox_mAP_m: 0.6150  coco/bbox_mAP_l: 0.8600  data_time: 0.0710  time: 0.1319
2023/06/10 00:16:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:30 - mmengine - INFO - Epoch(train) [161][8/8]  lr: 3.9742e-04  eta: 0:11:12  time: 0.6086  data_time: 0.2666  memory: 11373  loss: 0.3293  loss_cls: 0.1386  loss_bbox: 0.1907
2023/06/10 00:16:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:35 - mmengine - INFO - Epoch(train) [162][8/8]  lr: 3.9692e-04  eta: 0:11:07  time: 0.6047  data_time: 0.2631  memory: 11375  loss: 0.3295  loss_cls: 0.1372  loss_bbox: 0.1923
2023/06/10 00:16:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:40 - mmengine - INFO - Epoch(train) [163][8/8]  lr: 3.9639e-04  eta: 0:11:02  time: 0.6119  data_time: 0.2685  memory: 11375  loss: 0.3358  loss_cls: 0.1417  loss_bbox: 0.1941
2023/06/10 00:16:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:44 - mmengine - INFO - Epoch(train) [164][8/8]  lr: 3.9581e-04  eta: 0:10:58  time: 0.6033  data_time: 0.2596  memory: 11380  loss: 0.3350  loss_cls: 0.1394  loss_bbox: 0.1956
2023/06/10 00:16:49 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:49 - mmengine - INFO - Epoch(train) [165][8/8]  lr: 3.9519e-04  eta: 0:10:53  time: 0.5998  data_time: 0.2556  memory: 11378  loss: 0.3306  loss_cls: 0.1364  loss_bbox: 0.1941
2023/06/10 00:16:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:54 - mmengine - INFO - Epoch(train) [166][8/8]  lr: 3.9452e-04  eta: 0:10:48  time: 0.5908  data_time: 0.2460  memory: 11369  loss: 0.3217  loss_cls: 0.1302  loss_bbox: 0.1915
2023/06/10 00:16:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:16:59 - mmengine - INFO - Epoch(train) [167][8/8]  lr: 3.9382e-04  eta: 0:10:43  time: 0.5892  data_time: 0.2446  memory: 11382  loss: 0.3213  loss_cls: 0.1301  loss_bbox: 0.1912
2023/06/10 00:17:03 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:03 - mmengine - INFO - Epoch(train) [168][8/8]  lr: 3.9307e-04  eta: 0:10:38  time: 0.5883  data_time: 0.2430  memory: 11382  loss: 0.3155  loss_cls: 0.1269  loss_bbox: 0.1887
2023/06/10 00:17:08 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:08 - mmengine - INFO - Epoch(train) [169][8/8]  lr: 3.9229e-04  eta: 0:10:33  time: 0.5879  data_time: 0.2430  memory: 11379  loss: 0.3189  loss_cls: 0.1287  loss_bbox: 0.1903
2023/06/10 00:17:13 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:13 - mmengine - INFO - Epoch(train) [170][8/8]  lr: 3.9146e-04  eta: 0:10:29  time: 0.5903  data_time: 0.2449  memory: 11384  loss: 0.3170  loss_cls: 0.1281  loss_bbox: 0.1890
2023/06/10 00:17:13 - mmengine - INFO - Saving checkpoint at 170 epochs
2023/06/10 00:17:16 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:17:16 - mmengine - INFO - bbox_mAP_copypaste: 0.801 0.937 0.899 0.088 0.661 0.879
2023/06/10 00:17:16 - mmengine - INFO - Epoch(val) [170][3/3]    coco/bbox_mAP: 0.8010  coco/bbox_mAP_50: 0.9370  coco/bbox_mAP_75: 0.8990  coco/bbox_mAP_s: 0.0880  coco/bbox_mAP_m: 0.6610  coco/bbox_mAP_l: 0.8790  data_time: 0.0706  time: 0.1323
2023/06/10 00:17:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:21 - mmengine - INFO - Epoch(train) [171][8/8]  lr: 3.9059e-04  eta: 0:10:24  time: 0.5888  data_time: 0.2423  memory: 11373  loss: 0.3171  loss_cls: 0.1266  loss_bbox: 0.1905
2023/06/10 00:17:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:25 - mmengine - INFO - Epoch(train) [172][8/8]  lr: 3.8969e-04  eta: 0:10:19  time: 0.5924  data_time: 0.2454  memory: 11384  loss: 0.3233  loss_cls: 0.1302  loss_bbox: 0.1931
2023/06/10 00:17:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:30 - mmengine - INFO - Epoch(train) [173][8/8]  lr: 3.8874e-04  eta: 0:10:14  time: 0.5888  data_time: 0.2410  memory: 11388  loss: 0.3261  loss_cls: 0.1315  loss_bbox: 0.1946
2023/06/10 00:17:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:35 - mmengine - INFO - Epoch(train) [174][8/8]  lr: 3.8776e-04  eta: 0:10:09  time: 0.5887  data_time: 0.2414  memory: 11379  loss: 0.3306  loss_cls: 0.1346  loss_bbox: 0.1960
2023/06/10 00:17:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:40 - mmengine - INFO - Epoch(train) [175][8/8]  lr: 3.8673e-04  eta: 0:10:04  time: 0.5875  data_time: 0.2407  memory: 11377  loss: 0.3203  loss_cls: 0.1280  loss_bbox: 0.1922
2023/06/10 00:17:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:44 - mmengine - INFO - Epoch(train) [176][8/8]  lr: 3.8567e-04  eta: 0:09:59  time: 0.5833  data_time: 0.2374  memory: 11378  loss: 0.3156  loss_cls: 0.1256  loss_bbox: 0.1900
2023/06/10 00:17:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:50 - mmengine - INFO - Epoch(train) [177][8/8]  lr: 3.8457e-04  eta: 0:09:54  time: 0.5929  data_time: 0.2489  memory: 11372  loss: 0.3107  loss_cls: 0.1247  loss_bbox: 0.1860
2023/06/10 00:17:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:54 - mmengine - INFO - Epoch(train) [178][8/8]  lr: 3.8344e-04  eta: 0:09:50  time: 0.5882  data_time: 0.2458  memory: 11371  loss: 0.3085  loss_cls: 0.1249  loss_bbox: 0.1837
2023/06/10 00:17:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:17:59 - mmengine - INFO - Epoch(train) [179][8/8]  lr: 3.8226e-04  eta: 0:09:44  time: 0.5839  data_time: 0.2429  memory: 11380  loss: 0.3080  loss_cls: 0.1253  loss_bbox: 0.1827
2023/06/10 00:18:04 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:18:04 - mmengine - INFO - Epoch(train) [180][8/8]  lr: 3.8106e-04  eta: 0:09:40  time: 0.5886  data_time: 0.2455  memory: 11378  loss: 0.3140  loss_cls: 0.1287  loss_bbox: 0.1853
2023/06/10 00:18:04 - mmengine - INFO - Saving checkpoint at 180 epochs
2023/06/10 00:18:06 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:18:06 - mmengine - INFO - bbox_mAP_copypaste: 0.746 0.854 0.849 0.000 0.661 0.855
2023/06/10 00:18:06 - mmengine - INFO - Epoch(val) [180][3/3]    coco/bbox_mAP: 0.7460  coco/bbox_mAP_50: 0.8540  coco/bbox_mAP_75: 0.8490  coco/bbox_mAP_s: 0.0000  coco/bbox_mAP_m: 0.6610  coco/bbox_mAP_l: 0.8550  data_time: 0.0699  time: 0.1327
2023/06/10 00:18:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:18:11 - mmengine - INFO - Epoch(train) [181][8/8]  lr: 3.7981e-04  eta: 0:09:35  time: 0.5855  data_time: 0.2421  memory: 11368  loss: 0.3195  loss_cls: 0.1323  loss_bbox: 0.1873
2023/06/10 00:18:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:18:16 - mmengine - INFO - Epoch(train) [182][8/8]  lr: 3.7853e-04  eta: 0:09:30  time: 0.5872  data_time: 0.2437  memory: 11374  loss: 0.3252  loss_cls: 0.1371  loss_bbox: 0.1881
2023/06/10 00:18:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:18:21 - mmengine - INFO - Epoch(train) [183][8/8]  lr: 3.7722e-04  eta: 0:09:25  time: 0.5812  data_time: 0.2362  memory: 11383  loss: 0.3308  loss_cls: 0.1394  loss_bbox: 0.1914
2023/06/10 00:18:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:18:25 - mmengine - INFO - Epoch(train) [184][8/8]  lr: 3.7587e-04  eta: 0:09:20  time: 0.5778  data_time: 0.2315  memory: 11379  loss: 0.3328  loss_cls: 0.1382  loss_bbox: 0.1946
2023/06/10 00:18:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:18:30 - mmengine - INFO - Epoch(train) [185][8/8]  lr: 3.7449e-04  eta: 0:09:15  time: 0.5854  data_time: 0.2384  memory: 11374  loss: 0.3269  loss_cls: 0.1337  loss_bbox: 0.1932
2023/06/10 00:18:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:18:35 - mmengine - INFO - Epoch(train) [186][8/8]  lr: 3.7308e-04  eta: 0:09:11  time: 0.5879  data_time: 0.2429  memory: 11371  loss: 0.3181  loss_cls: 0.1300  loss_bbox: 0.1880
2023/06/10 00:18:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:18:40 - mmengine - INFO - Epoch(train) [187][8/8]  lr: 3.7163e-04  eta: 0:09:06  time: 0.5977  data_time: 0.2534  memory: 11374  loss: 0.3152  loss_cls: 0.1280  loss_bbox: 0.1873
2023/06/10 00:18:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:18:45 - mmengine - INFO - Epoch(train) [188][8/8]  lr: 3.7015e-04  eta: 0:09:01  time: 0.5980  data_time: 0.2544  memory: 11371  loss: 0.3110  loss_cls: 0.1252  loss_bbox: 0.1858
2023/06/10 00:18:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:18:50 - mmengine - INFO - Epoch(train) [189][8/8]  lr: 3.6865e-04  eta: 0:08:57  time: 0.6066  data_time: 0.2636  memory: 11374  loss: 0.3121  loss_cls: 0.1255  loss_bbox: 0.1866
2023/06/10 00:18:55 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:18:55 - mmengine - INFO - Epoch(train) [190][8/8]  lr: 3.6711e-04  eta: 0:08:52  time: 0.6083  data_time: 0.2660  memory: 11368  loss: 0.3153  loss_cls: 0.1278  loss_bbox: 0.1875
2023/06/10 00:18:55 - mmengine - INFO - Saving checkpoint at 190 epochs
2023/06/10 00:18:57 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:18:58 - mmengine - INFO - bbox_mAP_copypaste: 0.656 0.781 0.761 0.030 0.436 0.850
2023/06/10 00:18:58 - mmengine - INFO - Epoch(val) [190][3/3]    coco/bbox_mAP: 0.6560  coco/bbox_mAP_50: 0.7810  coco/bbox_mAP_75: 0.7610  coco/bbox_mAP_s: 0.0300  coco/bbox_mAP_m: 0.4360  coco/bbox_mAP_l: 0.8500  data_time: 0.0699  time: 0.1318
2023/06/10 00:19:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:02 - mmengine - INFO - Epoch(train) [191][8/8]  lr: 3.6554e-04  eta: 0:08:47  time: 0.6058  data_time: 0.2633  memory: 11374  loss: 0.3127  loss_cls: 0.1272  loss_bbox: 0.1855
2023/06/10 00:19:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:07 - mmengine - INFO - Epoch(train) [192][8/8]  lr: 3.6394e-04  eta: 0:08:42  time: 0.6008  data_time: 0.2576  memory: 11377  loss: 0.3140  loss_cls: 0.1271  loss_bbox: 0.1869
2023/06/10 00:19:12 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:12 - mmengine - INFO - Epoch(train) [193][8/8]  lr: 3.6232e-04  eta: 0:08:37  time: 0.5926  data_time: 0.2490  memory: 11370  loss: 0.3124  loss_cls: 0.1263  loss_bbox: 0.1861
2023/06/10 00:19:17 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:17 - mmengine - INFO - Epoch(train) [194][8/8]  lr: 3.6067e-04  eta: 0:08:32  time: 0.5878  data_time: 0.2448  memory: 11372  loss: 0.3155  loss_cls: 0.1295  loss_bbox: 0.1860
2023/06/10 00:19:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:21 - mmengine - INFO - Epoch(train) [195][8/8]  lr: 3.5899e-04  eta: 0:08:27  time: 0.5783  data_time: 0.2350  memory: 11372  loss: 0.3107  loss_cls: 0.1272  loss_bbox: 0.1835
2023/06/10 00:19:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:26 - mmengine - INFO - Epoch(train) [196][8/8]  lr: 3.5729e-04  eta: 0:08:22  time: 0.5836  data_time: 0.2403  memory: 11368  loss: 0.3009  loss_cls: 0.1227  loss_bbox: 0.1782
2023/06/10 00:19:31 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:31 - mmengine - INFO - Epoch(train) [197][8/8]  lr: 3.5556e-04  eta: 0:08:18  time: 0.5946  data_time: 0.2498  memory: 11379  loss: 0.2971  loss_cls: 0.1199  loss_bbox: 0.1772
2023/06/10 00:19:36 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:36 - mmengine - INFO - Epoch(train) [198][8/8]  lr: 3.5380e-04  eta: 0:08:13  time: 0.5970  data_time: 0.2525  memory: 11371  loss: 0.2927  loss_cls: 0.1185  loss_bbox: 0.1743
2023/06/10 00:19:41 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:41 - mmengine - INFO - Epoch(train) [199][8/8]  lr: 3.5203e-04  eta: 0:08:08  time: 0.5936  data_time: 0.2496  memory: 11373  loss: 0.2893  loss_cls: 0.1173  loss_bbox: 0.1720
2023/06/10 00:19:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:45 - mmengine - INFO - Epoch(train) [200][8/8]  lr: 3.5023e-04  eta: 0:08:03  time: 0.5913  data_time: 0.2466  memory: 11372  loss: 0.2864  loss_cls: 0.1136  loss_bbox: 0.1728
2023/06/10 00:19:45 - mmengine - INFO - Saving checkpoint at 200 epochs
2023/06/10 00:19:48 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:19:48 - mmengine - INFO - bbox_mAP_copypaste: 0.786 0.905 0.854 0.076 0.674 0.858
2023/06/10 00:19:48 - mmengine - INFO - Epoch(val) [200][3/3]    coco/bbox_mAP: 0.7860  coco/bbox_mAP_50: 0.9050  coco/bbox_mAP_75: 0.8540  coco/bbox_mAP_s: 0.0760  coco/bbox_mAP_m: 0.6740  coco/bbox_mAP_l: 0.8580  data_time: 0.0706  time: 0.1321
2023/06/10 00:19:53 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:53 - mmengine - INFO - Epoch(train) [201][8/8]  lr: 3.4840e-04  eta: 0:07:58  time: 0.5956  data_time: 0.2503  memory: 11375  loss: 0.2756  loss_cls: 0.1061  loss_bbox: 0.1695
2023/06/10 00:19:58 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:19:58 - mmengine - INFO - Epoch(train) [202][8/8]  lr: 3.4656e-04  eta: 0:07:53  time: 0.5927  data_time: 0.2467  memory: 11374  loss: 0.2750  loss_cls: 0.1039  loss_bbox: 0.1711
2023/06/10 00:20:03 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:03 - mmengine - INFO - Epoch(train) [203][8/8]  lr: 3.4470e-04  eta: 0:07:48  time: 0.5851  data_time: 0.2392  memory: 11373  loss: 0.2737  loss_cls: 0.1043  loss_bbox: 0.1694
2023/06/10 00:20:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:07 - mmengine - INFO - Epoch(train) [204][8/8]  lr: 3.4281e-04  eta: 0:07:44  time: 0.5806  data_time: 0.2365  memory: 11371  loss: 0.2751  loss_cls: 0.1042  loss_bbox: 0.1709
2023/06/10 00:20:12 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:12 - mmengine - INFO - Epoch(train) [205][8/8]  lr: 3.4091e-04  eta: 0:07:39  time: 0.5783  data_time: 0.2346  memory: 11375  loss: 0.2751  loss_cls: 0.1044  loss_bbox: 0.1706
2023/06/10 00:20:17 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:17 - mmengine - INFO - Epoch(train) [206][8/8]  lr: 3.3899e-04  eta: 0:07:34  time: 0.5804  data_time: 0.2375  memory: 11371  loss: 0.2758  loss_cls: 0.1049  loss_bbox: 0.1709
2023/06/10 00:20:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:21 - mmengine - INFO - Epoch(train) [207][8/8]  lr: 3.3706e-04  eta: 0:07:29  time: 0.5775  data_time: 0.2356  memory: 11377  loss: 0.2873  loss_cls: 0.1107  loss_bbox: 0.1766
2023/06/10 00:20:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:26 - mmengine - INFO - Epoch(train) [208][8/8]  lr: 3.3510e-04  eta: 0:07:24  time: 0.5832  data_time: 0.2420  memory: 11373  loss: 0.2881  loss_cls: 0.1137  loss_bbox: 0.1744
2023/06/10 00:20:31 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:31 - mmengine - INFO - Epoch(train) [209][8/8]  lr: 3.3313e-04  eta: 0:07:19  time: 0.5747  data_time: 0.2341  memory: 11371  loss: 0.2905  loss_cls: 0.1161  loss_bbox: 0.1744
2023/06/10 00:20:35 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:35 - mmengine - INFO - Epoch(train) [210][8/8]  lr: 3.3115e-04  eta: 0:07:14  time: 0.5719  data_time: 0.2306  memory: 11377  loss: 0.2917  loss_cls: 0.1174  loss_bbox: 0.1743
2023/06/10 00:20:35 - mmengine - INFO - Saving checkpoint at 210 epochs
2023/06/10 00:20:38 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:20:38 - mmengine - INFO - bbox_mAP_copypaste: 0.722 0.879 0.803 0.050 0.613 0.795
2023/06/10 00:20:38 - mmengine - INFO - Epoch(val) [210][3/3]    coco/bbox_mAP: 0.7220  coco/bbox_mAP_50: 0.8790  coco/bbox_mAP_75: 0.8030  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6130  coco/bbox_mAP_l: 0.7950  data_time: 0.0713  time: 0.1335
2023/06/10 00:20:43 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:43 - mmengine - INFO - Epoch(train) [211][8/8]  lr: 3.2915e-04  eta: 0:07:09  time: 0.5779  data_time: 0.2365  memory: 11376  loss: 0.2950  loss_cls: 0.1182  loss_bbox: 0.1768
2023/06/10 00:20:48 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:48 - mmengine - INFO - Epoch(train) [212][8/8]  lr: 3.2714e-04  eta: 0:07:05  time: 0.5876  data_time: 0.2453  memory: 11374  loss: 0.2969  loss_cls: 0.1190  loss_bbox: 0.1779
2023/06/10 00:20:53 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:53 - mmengine - INFO - Epoch(train) [213][8/8]  lr: 3.2512e-04  eta: 0:07:00  time: 0.5904  data_time: 0.2476  memory: 11368  loss: 0.2910  loss_cls: 0.1170  loss_bbox: 0.1740
2023/06/10 00:20:58 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:20:58 - mmengine - INFO - Epoch(train) [214][8/8]  lr: 3.2309e-04  eta: 0:06:55  time: 0.5861  data_time: 0.2414  memory: 11376  loss: 0.2860  loss_cls: 0.1123  loss_bbox: 0.1738
2023/06/10 00:21:02 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:02 - mmengine - INFO - Epoch(train) [215][8/8]  lr: 3.2105e-04  eta: 0:06:50  time: 0.5961  data_time: 0.2508  memory: 11373  loss: 0.2895  loss_cls: 0.1136  loss_bbox: 0.1758
2023/06/10 00:21:08 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:08 - mmengine - INFO - Epoch(train) [216][8/8]  lr: 3.1900e-04  eta: 0:06:46  time: 0.6111  data_time: 0.2654  memory: 11368  loss: 0.2864  loss_cls: 0.1126  loss_bbox: 0.1738
2023/06/10 00:21:13 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:13 - mmengine - INFO - Epoch(train) [217][8/8]  lr: 3.1693e-04  eta: 0:06:41  time: 0.6082  data_time: 0.2621  memory: 11378  loss: 0.2823  loss_cls: 0.1111  loss_bbox: 0.1712
2023/06/10 00:21:17 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:17 - mmengine - INFO - Epoch(train) [218][8/8]  lr: 3.1487e-04  eta: 0:06:36  time: 0.6030  data_time: 0.2553  memory: 11373  loss: 0.2847  loss_cls: 0.1129  loss_bbox: 0.1718
2023/06/10 00:21:22 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:22 - mmengine - INFO - Epoch(train) [219][8/8]  lr: 3.1279e-04  eta: 0:06:31  time: 0.5994  data_time: 0.2520  memory: 11370  loss: 0.2899  loss_cls: 0.1155  loss_bbox: 0.1744
2023/06/10 00:21:27 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:27 - mmengine - INFO - Epoch(train) [220][8/8]  lr: 3.1071e-04  eta: 0:06:26  time: 0.6009  data_time: 0.2542  memory: 11371  loss: 0.2900  loss_cls: 0.1160  loss_bbox: 0.1740
2023/06/10 00:21:27 - mmengine - INFO - Saving checkpoint at 220 epochs
2023/06/10 00:21:29 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:21:30 - mmengine - INFO - bbox_mAP_copypaste: 0.757 0.910 0.832 0.101 0.651 0.830
2023/06/10 00:21:30 - mmengine - INFO - Epoch(val) [220][3/3]    coco/bbox_mAP: 0.7570  coco/bbox_mAP_50: 0.9100  coco/bbox_mAP_75: 0.8320  coco/bbox_mAP_s: 0.1010  coco/bbox_mAP_m: 0.6510  coco/bbox_mAP_l: 0.8300  data_time: 0.0703  time: 0.1327
2023/06/10 00:21:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:34 - mmengine - INFO - Epoch(train) [221][8/8]  lr: 3.0863e-04  eta: 0:06:21  time: 0.5989  data_time: 0.2519  memory: 11374  loss: 0.2871  loss_cls: 0.1153  loss_bbox: 0.1718
2023/06/10 00:21:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:39 - mmengine - INFO - Epoch(train) [222][8/8]  lr: 3.0654e-04  eta: 0:06:16  time: 0.5866  data_time: 0.2405  memory: 11375  loss: 0.2809  loss_cls: 0.1115  loss_bbox: 0.1694
2023/06/10 00:21:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:44 - mmengine - INFO - Epoch(train) [223][8/8]  lr: 3.0445e-04  eta: 0:06:12  time: 0.5871  data_time: 0.2409  memory: 11371  loss: 0.2831  loss_cls: 0.1137  loss_bbox: 0.1694
2023/06/10 00:21:49 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:49 - mmengine - INFO - Epoch(train) [224][8/8]  lr: 3.0236e-04  eta: 0:06:07  time: 0.5854  data_time: 0.2419  memory: 11372  loss: 0.2844  loss_cls: 0.1157  loss_bbox: 0.1687
2023/06/10 00:21:53 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:53 - mmengine - INFO - Epoch(train) [225][8/8]  lr: 3.0026e-04  eta: 0:06:02  time: 0.5860  data_time: 0.2425  memory: 11368  loss: 0.2798  loss_cls: 0.1141  loss_bbox: 0.1657
2023/06/10 00:21:58 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:21:58 - mmengine - INFO - Epoch(train) [226][8/8]  lr: 2.9817e-04  eta: 0:05:57  time: 0.5810  data_time: 0.2375  memory: 11376  loss: 0.2818  loss_cls: 0.1158  loss_bbox: 0.1660
2023/06/10 00:22:03 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:03 - mmengine - INFO - Epoch(train) [227][8/8]  lr: 2.9607e-04  eta: 0:05:52  time: 0.5787  data_time: 0.2357  memory: 11378  loss: 0.2825  loss_cls: 0.1166  loss_bbox: 0.1659
2023/06/10 00:22:08 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:08 - mmengine - INFO - Epoch(train) [228][8/8]  lr: 2.9398e-04  eta: 0:05:47  time: 0.5803  data_time: 0.2362  memory: 11387  loss: 0.2813  loss_cls: 0.1155  loss_bbox: 0.1659
2023/06/10 00:22:12 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:12 - mmengine - INFO - Epoch(train) [229][8/8]  lr: 2.9189e-04  eta: 0:05:42  time: 0.5792  data_time: 0.2362  memory: 11374  loss: 0.2811  loss_cls: 0.1154  loss_bbox: 0.1657
2023/06/10 00:22:17 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:17 - mmengine - INFO - Epoch(train) [230][8/8]  lr: 2.8981e-04  eta: 0:05:38  time: 0.5844  data_time: 0.2409  memory: 11375  loss: 0.2770  loss_cls: 0.1116  loss_bbox: 0.1654
2023/06/10 00:22:17 - mmengine - INFO - Saving checkpoint at 230 epochs
2023/06/10 00:22:20 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:22:20 - mmengine - INFO - bbox_mAP_copypaste: 0.762 0.916 0.835 0.151 0.669 0.829
2023/06/10 00:22:20 - mmengine - INFO - Epoch(val) [230][3/3]    coco/bbox_mAP: 0.7620  coco/bbox_mAP_50: 0.9160  coco/bbox_mAP_75: 0.8350  coco/bbox_mAP_s: 0.1510  coco/bbox_mAP_m: 0.6690  coco/bbox_mAP_l: 0.8290  data_time: 0.0696  time: 0.1309
2023/06/10 00:22:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:25 - mmengine - INFO - Epoch(train) [231][8/8]  lr: 2.8773e-04  eta: 0:05:33  time: 0.5853  data_time: 0.2410  memory: 11371  loss: 0.2738  loss_cls: 0.1093  loss_bbox: 0.1644
2023/06/10 00:22:29 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:29 - mmengine - INFO - Epoch(train) [232][8/8]  lr: 2.8565e-04  eta: 0:05:28  time: 0.5860  data_time: 0.2420  memory: 11380  loss: 0.2736  loss_cls: 0.1095  loss_bbox: 0.1641
2023/06/10 00:22:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:34 - mmengine - INFO - Epoch(train) [233][8/8]  lr: 2.8358e-04  eta: 0:05:23  time: 0.5892  data_time: 0.2454  memory: 11384  loss: 0.2702  loss_cls: 0.1074  loss_bbox: 0.1628
2023/06/10 00:22:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:39 - mmengine - INFO - Epoch(train) [234][8/8]  lr: 2.8152e-04  eta: 0:05:18  time: 0.5924  data_time: 0.2481  memory: 11375  loss: 0.2753  loss_cls: 0.1111  loss_bbox: 0.1642
2023/06/10 00:22:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:44 - mmengine - INFO - Epoch(train) [235][8/8]  lr: 2.7946e-04  eta: 0:05:13  time: 0.5922  data_time: 0.2444  memory: 11379  loss: 0.2722  loss_cls: 0.1072  loss_bbox: 0.1650
2023/06/10 00:22:49 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:49 - mmengine - INFO - Epoch(train) [236][8/8]  lr: 2.7742e-04  eta: 0:05:09  time: 0.5918  data_time: 0.2438  memory: 11376  loss: 0.2798  loss_cls: 0.1115  loss_bbox: 0.1683
2023/06/10 00:22:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:54 - mmengine - INFO - Epoch(train) [237][8/8]  lr: 2.7538e-04  eta: 0:05:04  time: 0.5863  data_time: 0.2382  memory: 11376  loss: 0.2822  loss_cls: 0.1121  loss_bbox: 0.1701
2023/06/10 00:22:58 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:22:58 - mmengine - INFO - Epoch(train) [238][8/8]  lr: 2.7336e-04  eta: 0:04:59  time: 0.5871  data_time: 0.2388  memory: 11386  loss: 0.2809  loss_cls: 0.1113  loss_bbox: 0.1696
2023/06/10 00:23:03 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:03 - mmengine - INFO - Epoch(train) [239][8/8]  lr: 2.7135e-04  eta: 0:04:54  time: 0.5895  data_time: 0.2423  memory: 11368  loss: 0.2780  loss_cls: 0.1099  loss_bbox: 0.1682
2023/06/10 00:23:08 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:08 - mmengine - INFO - Epoch(train) [240][8/8]  lr: 2.6935e-04  eta: 0:04:49  time: 0.5830  data_time: 0.2366  memory: 11374  loss: 0.2731  loss_cls: 0.1067  loss_bbox: 0.1664
2023/06/10 00:23:08 - mmengine - INFO - Saving checkpoint at 240 epochs
2023/06/10 00:23:10 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:23:10 - mmengine - INFO - bbox_mAP_copypaste: 0.809 0.930 0.879 0.041 0.708 0.879
2023/06/10 00:23:10 - mmengine - INFO - Epoch(val) [240][3/3]    coco/bbox_mAP: 0.8090  coco/bbox_mAP_50: 0.9300  coco/bbox_mAP_75: 0.8790  coco/bbox_mAP_s: 0.0410  coco/bbox_mAP_m: 0.7080  coco/bbox_mAP_l: 0.8790  data_time: 0.0713  time: 0.1322
2023/06/10 00:23:15 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:15 - mmengine - INFO - Epoch(train) [241][8/8]  lr: 2.6736e-04  eta: 0:04:44  time: 0.5802  data_time: 0.2369  memory: 11371  loss: 0.2756  loss_cls: 0.1092  loss_bbox: 0.1664
2023/06/10 00:23:20 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:20 - mmengine - INFO - Epoch(train) [242][8/8]  lr: 2.6539e-04  eta: 0:04:40  time: 0.5782  data_time: 0.2358  memory: 11372  loss: 0.2742  loss_cls: 0.1092  loss_bbox: 0.1651
2023/06/10 00:23:25 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:25 - mmengine - INFO - Epoch(train) [243][8/8]  lr: 2.6343e-04  eta: 0:04:35  time: 0.5900  data_time: 0.2478  memory: 11375  loss: 0.2693  loss_cls: 0.1072  loss_bbox: 0.1621
2023/06/10 00:23:30 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:30 - mmengine - INFO - Epoch(train) [244][8/8]  lr: 2.6149e-04  eta: 0:04:30  time: 0.5886  data_time: 0.2470  memory: 11376  loss: 0.2733  loss_cls: 0.1098  loss_bbox: 0.1635
2023/06/10 00:23:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:34 - mmengine - INFO - Epoch(train) [245][8/8]  lr: 2.5957e-04  eta: 0:04:25  time: 0.5861  data_time: 0.2444  memory: 11377  loss: 0.2724  loss_cls: 0.1097  loss_bbox: 0.1627
2023/06/10 00:23:39 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:39 - mmengine - INFO - Epoch(train) [246][8/8]  lr: 2.5766e-04  eta: 0:04:20  time: 0.5919  data_time: 0.2501  memory: 11372  loss: 0.2699  loss_cls: 0.1092  loss_bbox: 0.1606
2023/06/10 00:23:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:44 - mmengine - INFO - Epoch(train) [247][8/8]  lr: 2.5577e-04  eta: 0:04:15  time: 0.6015  data_time: 0.2599  memory: 11377  loss: 0.2674  loss_cls: 0.1076  loss_bbox: 0.1597
2023/06/10 00:23:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:50 - mmengine - INFO - Epoch(train) [248][8/8]  lr: 2.5390e-04  eta: 0:04:11  time: 0.6059  data_time: 0.2609  memory: 11374  loss: 0.2645  loss_cls: 0.1056  loss_bbox: 0.1589
2023/06/10 00:23:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:54 - mmengine - INFO - Epoch(train) [249][8/8]  lr: 2.5205e-04  eta: 0:04:06  time: 0.5963  data_time: 0.2513  memory: 11387  loss: 0.2690  loss_cls: 0.1065  loss_bbox: 0.1625
2023/06/10 00:23:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:23:59 - mmengine - INFO - Epoch(train) [250][8/8]  lr: 2.5023e-04  eta: 0:04:01  time: 0.6009  data_time: 0.2551  memory: 11389  loss: 0.2678  loss_cls: 0.1046  loss_bbox: 0.1632
2023/06/10 00:23:59 - mmengine - INFO - Saving checkpoint at 250 epochs
2023/06/10 00:24:01 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:24:02 - mmengine - INFO - bbox_mAP_copypaste: 0.797 0.915 0.877 0.025 0.710 0.861
2023/06/10 00:24:02 - mmengine - INFO - Epoch(val) [250][3/3]    coco/bbox_mAP: 0.7970  coco/bbox_mAP_50: 0.9150  coco/bbox_mAP_75: 0.8770  coco/bbox_mAP_s: 0.0250  coco/bbox_mAP_m: 0.7100  coco/bbox_mAP_l: 0.8610  data_time: 0.0722  time: 0.1347
2023/06/10 00:24:06 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:24:06 - mmengine - INFO - Epoch(train) [251][8/8]  lr: 2.4842e-04  eta: 0:03:56  time: 0.5993  data_time: 0.2527  memory: 11390  loss: 0.2657  loss_cls: 0.1028  loss_bbox: 0.1629
2023/06/10 00:24:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:24:11 - mmengine - INFO - Epoch(train) [252][8/8]  lr: 2.4664e-04  eta: 0:03:51  time: 0.5962  data_time: 0.2492  memory: 11368  loss: 0.2645  loss_cls: 0.1015  loss_bbox: 0.1630
2023/06/10 00:24:16 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:24:16 - mmengine - INFO - Epoch(train) [253][8/8]  lr: 2.4488e-04  eta: 0:03:46  time: 0.5891  data_time: 0.2417  memory: 11373  loss: 0.2671  loss_cls: 0.1032  loss_bbox: 0.1639
2023/06/10 00:24:21 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:24:21 - mmengine - INFO - Epoch(train) [254][8/8]  lr: 2.4314e-04  eta: 0:03:42  time: 0.5858  data_time: 0.2412  memory: 11369  loss: 0.2662  loss_cls: 0.1016  loss_bbox: 0.1646
2023/06/10 00:24:26 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:24:26 - mmengine - INFO - Epoch(train) [255][8/8]  lr: 2.4143e-04  eta: 0:03:37  time: 0.5943  data_time: 0.2499  memory: 11370  loss: 0.2646  loss_cls: 0.1004  loss_bbox: 0.1642
2023/06/10 00:24:31 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:24:31 - mmengine - INFO - Epoch(train) [256][8/8]  lr: 2.3975e-04  eta: 0:03:32  time: 0.5935  data_time: 0.2494  memory: 11375  loss: 0.2600  loss_cls: 0.0990  loss_bbox: 0.1610
2023/06/10 00:24:36 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:24:36 - mmengine - INFO - Epoch(train) [257][8/8]  lr: 2.3809e-04  eta: 0:03:27  time: 0.5951  data_time: 0.2512  memory: 11374  loss: 0.2545  loss_cls: 0.0967  loss_bbox: 0.1579
2023/06/10 00:24:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:24:40 - mmengine - INFO - Epoch(train) [258][8/8]  lr: 2.3646e-04  eta: 0:03:22  time: 0.5955  data_time: 0.2520  memory: 11370  loss: 0.2604  loss_cls: 0.1005  loss_bbox: 0.1599
2023/06/10 00:24:45 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:24:45 - mmengine - INFO - Epoch(train) [259][8/8]  lr: 2.3486e-04  eta: 0:03:18  time: 0.5993  data_time: 0.2560  memory: 11372  loss: 0.2572  loss_cls: 0.0983  loss_bbox: 0.1589
2023/06/10 00:24:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:24:50 - mmengine - INFO - Epoch(train) [260][8/8]  lr: 2.3328e-04  eta: 0:03:13  time: 0.5991  data_time: 0.2560  memory: 11372  loss: 0.2547  loss_cls: 0.0974  loss_bbox: 0.1573
2023/06/10 00:24:50 - mmengine - INFO - Saving checkpoint at 260 epochs
2023/06/10 00:24:53 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:24:53 - mmengine - INFO - bbox_mAP_copypaste: 0.778 0.905 0.849 0.076 0.723 0.836
2023/06/10 00:24:53 - mmengine - INFO - Epoch(val) [260][3/3]    coco/bbox_mAP: 0.7780  coco/bbox_mAP_50: 0.9050  coco/bbox_mAP_75: 0.8490  coco/bbox_mAP_s: 0.0760  coco/bbox_mAP_m: 0.7230  coco/bbox_mAP_l: 0.8360  data_time: 0.0699  time: 0.1322
2023/06/10 00:24:58 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:24:58 - mmengine - INFO - Epoch(train) [261][8/8]  lr: 2.3174e-04  eta: 0:03:08  time: 0.5933  data_time: 0.2505  memory: 11370  loss: 0.2517  loss_cls: 0.0970  loss_bbox: 0.1547
2023/06/10 00:25:03 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:03 - mmengine - INFO - Epoch(train) [262][8/8]  lr: 2.3022e-04  eta: 0:03:03  time: 0.5987  data_time: 0.2537  memory: 11378  loss: 0.2523  loss_cls: 0.0968  loss_bbox: 0.1555
2023/06/10 00:25:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:07 - mmengine - INFO - Epoch(train) [263][8/8]  lr: 2.2874e-04  eta: 0:02:58  time: 0.5966  data_time: 0.2512  memory: 11372  loss: 0.2566  loss_cls: 0.1000  loss_bbox: 0.1567
2023/06/10 00:25:12 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:12 - mmengine - INFO - Epoch(train) [264][8/8]  lr: 2.2728e-04  eta: 0:02:53  time: 0.6007  data_time: 0.2553  memory: 11372  loss: 0.2559  loss_cls: 0.0983  loss_bbox: 0.1577
2023/06/10 00:25:17 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:17 - mmengine - INFO - Epoch(train) [265][8/8]  lr: 2.2586e-04  eta: 0:02:49  time: 0.6002  data_time: 0.2541  memory: 11386  loss: 0.2613  loss_cls: 0.0999  loss_bbox: 0.1614
2023/06/10 00:25:22 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:22 - mmengine - INFO - Epoch(train) [266][8/8]  lr: 2.2447e-04  eta: 0:02:44  time: 0.6007  data_time: 0.2542  memory: 11378  loss: 0.2628  loss_cls: 0.1003  loss_bbox: 0.1625
2023/06/10 00:25:27 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:27 - mmengine - INFO - Epoch(train) [267][8/8]  lr: 2.2312e-04  eta: 0:02:39  time: 0.6072  data_time: 0.2608  memory: 11373  loss: 0.2676  loss_cls: 0.1023  loss_bbox: 0.1653
2023/06/10 00:25:32 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:32 - mmengine - INFO - Epoch(train) [268][8/8]  lr: 2.2179e-04  eta: 0:02:34  time: 0.5946  data_time: 0.2504  memory: 11394  loss: 0.2708  loss_cls: 0.1040  loss_bbox: 0.1668
2023/06/10 00:25:37 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:37 - mmengine - INFO - Epoch(train) [269][8/8]  lr: 2.2051e-04  eta: 0:02:29  time: 0.6079  data_time: 0.2629  memory: 11375  loss: 0.2734  loss_cls: 0.1052  loss_bbox: 0.1683
2023/06/10 00:25:42 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:42 - mmengine - INFO - Epoch(train) [270][8/8]  lr: 2.1925e-04  eta: 0:02:25  time: 0.6055  data_time: 0.2605  memory: 11372  loss: 0.2729  loss_cls: 0.1051  loss_bbox: 0.1678
2023/06/10 00:25:42 - mmengine - INFO - Saving checkpoint at 270 epochs
2023/06/10 00:25:44 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:25:44 - mmengine - INFO - bbox_mAP_copypaste: 0.795 0.919 0.867 0.270 0.717 0.849
2023/06/10 00:25:45 - mmengine - INFO - Epoch(val) [270][3/3]    coco/bbox_mAP: 0.7950  coco/bbox_mAP_50: 0.9190  coco/bbox_mAP_75: 0.8670  coco/bbox_mAP_s: 0.2700  coco/bbox_mAP_m: 0.7170  coco/bbox_mAP_l: 0.8490  data_time: 0.0706  time: 0.1332
2023/06/10 00:25:49 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:49 - mmengine - INFO - Epoch(train) [271][8/8]  lr: 2.1803e-04  eta: 0:02:20  time: 0.6045  data_time: 0.2596  memory: 11377  loss: 0.2685  loss_cls: 0.1041  loss_bbox: 0.1644
2023/06/10 00:25:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:54 - mmengine - INFO - Epoch(train) [272][8/8]  lr: 2.1685e-04  eta: 0:02:15  time: 0.6021  data_time: 0.2576  memory: 11380  loss: 0.2615  loss_cls: 0.1008  loss_bbox: 0.1607
2023/06/10 00:25:59 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:25:59 - mmengine - INFO - Epoch(train) [273][8/8]  lr: 2.1571e-04  eta: 0:02:10  time: 0.5981  data_time: 0.2533  memory: 11379  loss: 0.2588  loss_cls: 0.0993  loss_bbox: 0.1595
2023/06/10 00:26:04 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:04 - mmengine - INFO - Epoch(train) [274][8/8]  lr: 2.1460e-04  eta: 0:02:05  time: 0.6059  data_time: 0.2608  memory: 11381  loss: 0.2586  loss_cls: 0.1004  loss_bbox: 0.1582
2023/06/10 00:26:09 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:09 - mmengine - INFO - Epoch(train) [275][8/8]  lr: 2.1353e-04  eta: 0:02:00  time: 0.5939  data_time: 0.2500  memory: 11379  loss: 0.2560  loss_cls: 0.0990  loss_bbox: 0.1570
2023/06/10 00:26:14 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:14 - mmengine - INFO - Epoch(train) [276][8/8]  lr: 2.1250e-04  eta: 0:01:56  time: 0.5942  data_time: 0.2504  memory: 11370  loss: 0.2518  loss_cls: 0.0959  loss_bbox: 0.1559
2023/06/10 00:26:18 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:18 - mmengine - INFO - Epoch(train) [277][8/8]  lr: 2.1150e-04  eta: 0:01:51  time: 0.5932  data_time: 0.2499  memory: 11371  loss: 0.2532  loss_cls: 0.0968  loss_bbox: 0.1564
2023/06/10 00:26:23 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:23 - mmengine - INFO - Epoch(train) [278][8/8]  lr: 2.1055e-04  eta: 0:01:46  time: 0.5965  data_time: 0.2519  memory: 11373  loss: 0.2523  loss_cls: 0.0954  loss_bbox: 0.1569
2023/06/10 00:26:28 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:28 - mmengine - INFO - Epoch(train) [279][8/8]  lr: 2.0963e-04  eta: 0:01:41  time: 0.5927  data_time: 0.2478  memory: 11380  loss: 0.2471  loss_cls: 0.0927  loss_bbox: 0.1544
2023/06/10 00:26:29 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:26:29 - mmengine - INFO - bbox_mAP_copypaste: 0.808 0.935 0.866 0.115 0.690 0.877
2023/06/10 00:26:29 - mmengine - INFO - Epoch(val) [279][3/3]    coco/bbox_mAP: 0.8080  coco/bbox_mAP_50: 0.9350  coco/bbox_mAP_75: 0.8660  coco/bbox_mAP_s: 0.1150  coco/bbox_mAP_m: 0.6900  coco/bbox_mAP_l: 0.8770  data_time: 0.0707  time: 0.1295
2023/06/10 00:26:34 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:34 - mmengine - INFO - Epoch(train) [280][8/8]  lr: 2.0875e-04  eta: 0:01:36  time: 0.5948  data_time: 0.2490  memory: 11377  loss: 0.2431  loss_cls: 0.0908  loss_bbox: 0.1523
2023/06/10 00:26:34 - mmengine - INFO - Saving checkpoint at 280 epochs
2023/06/10 00:26:38 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:26:38 - mmengine - INFO - bbox_mAP_copypaste: 0.803 0.936 0.864 0.112 0.697 0.869
2023/06/10 00:26:38 - mmengine - INFO - Epoch(val) [280][3/3]    coco/bbox_mAP: 0.8030  coco/bbox_mAP_50: 0.9360  coco/bbox_mAP_75: 0.8640  coco/bbox_mAP_s: 0.1120  coco/bbox_mAP_m: 0.6970  coco/bbox_mAP_l: 0.8690  data_time: 0.0702  time: 0.1313
2023/06/10 00:26:38 - mmengine - INFO - Switch pipeline now!
2023/06/10 00:26:42 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:42 - mmengine - INFO - Epoch(train) [281][8/8]  lr: 2.0792e-04  eta: 0:01:31  time: 0.5767  data_time: 0.2335  memory: 11368  loss: 0.2389  loss_cls: 0.0916  loss_bbox: 0.1473
2023/06/10 00:26:42 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:26:43 - mmengine - INFO - bbox_mAP_copypaste: 0.760 0.885 0.834 0.038 0.616 0.845
2023/06/10 00:26:43 - mmengine - INFO - Epoch(val) [281][3/3]    coco/bbox_mAP: 0.7600  coco/bbox_mAP_50: 0.8850  coco/bbox_mAP_75: 0.8340  coco/bbox_mAP_s: 0.0380  coco/bbox_mAP_m: 0.6160  coco/bbox_mAP_l: 0.8450  data_time: 0.0708  time: 0.1288
2023/06/10 00:26:46 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:46 - mmengine - INFO - Epoch(train) [282][8/8]  lr: 2.0712e-04  eta: 0:01:26  time: 0.5522  data_time: 0.2109  memory: 11368  loss: 0.2274  loss_cls: 0.0882  loss_bbox: 0.1392
2023/06/10 00:26:47 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:26:47 - mmengine - INFO - bbox_mAP_copypaste: 0.749 0.872 0.827 0.050 0.625 0.828
2023/06/10 00:26:47 - mmengine - INFO - Epoch(val) [282][3/3]    coco/bbox_mAP: 0.7490  coco/bbox_mAP_50: 0.8720  coco/bbox_mAP_75: 0.8270  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6250  coco/bbox_mAP_l: 0.8280  data_time: 0.0709  time: 0.1276
2023/06/10 00:26:50 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:50 - mmengine - INFO - Epoch(train) [283][8/8]  lr: 2.0636e-04  eta: 0:01:21  time: 0.5262  data_time: 0.1875  memory: 11368  loss: 0.2198  loss_cls: 0.0853  loss_bbox: 0.1345
2023/06/10 00:26:51 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:26:51 - mmengine - INFO - bbox_mAP_copypaste: 0.754 0.882 0.854 0.050 0.638 0.831
2023/06/10 00:26:51 - mmengine - INFO - Epoch(val) [283][3/3]    coco/bbox_mAP: 0.7540  coco/bbox_mAP_50: 0.8820  coco/bbox_mAP_75: 0.8540  coco/bbox_mAP_s: 0.0500  coco/bbox_mAP_m: 0.6380  coco/bbox_mAP_l: 0.8310  data_time: 0.0700  time: 0.1253
2023/06/10 00:26:54 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:54 - mmengine - INFO - Epoch(train) [284][8/8]  lr: 2.0565e-04  eta: 0:01:17  time: 0.4911  data_time: 0.1546  memory: 11368  loss: 0.2161  loss_cls: 0.0847  loss_bbox: 0.1314
2023/06/10 00:26:55 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:26:55 - mmengine - INFO - bbox_mAP_copypaste: 0.778 0.915 0.870 0.036 0.636 0.860
2023/06/10 00:26:55 - mmengine - INFO - Epoch(val) [284][3/3]    coco/bbox_mAP: 0.7780  coco/bbox_mAP_50: 0.9150  coco/bbox_mAP_75: 0.8700  coco/bbox_mAP_s: 0.0360  coco/bbox_mAP_m: 0.6360  coco/bbox_mAP_l: 0.8600  data_time: 0.0702  time: 0.1267
2023/06/10 00:26:58 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:26:58 - mmengine - INFO - Epoch(train) [285][8/8]  lr: 2.0498e-04  eta: 0:01:12  time: 0.4651  data_time: 0.1321  memory: 11368  loss: 0.2116  loss_cls: 0.0840  loss_bbox: 0.1277
2023/06/10 00:26:59 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:26:59 - mmengine - INFO - bbox_mAP_copypaste: 0.784 0.916 0.862 0.126 0.644 0.865
2023/06/10 00:26:59 - mmengine - INFO - Epoch(val) [285][3/3]    coco/bbox_mAP: 0.7840  coco/bbox_mAP_50: 0.9160  coco/bbox_mAP_75: 0.8620  coco/bbox_mAP_s: 0.1260  coco/bbox_mAP_m: 0.6440  coco/bbox_mAP_l: 0.8650  data_time: 0.0709  time: 0.1281
2023/06/10 00:27:03 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:03 - mmengine - INFO - Epoch(train) [286][8/8]  lr: 2.0434e-04  eta: 0:01:07  time: 0.4392  data_time: 0.1095  memory: 11368  loss: 0.2071  loss_cls: 0.0817  loss_bbox: 0.1254
2023/06/10 00:27:03 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:03 - mmengine - INFO - bbox_mAP_copypaste: 0.774 0.895 0.870 0.202 0.638 0.850
2023/06/10 00:27:03 - mmengine - INFO - Epoch(val) [286][3/3]    coco/bbox_mAP: 0.7740  coco/bbox_mAP_50: 0.8950  coco/bbox_mAP_75: 0.8700  coco/bbox_mAP_s: 0.2020  coco/bbox_mAP_m: 0.6380  coco/bbox_mAP_l: 0.8500  data_time: 0.0699  time: 0.1268
2023/06/10 00:27:07 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:07 - mmengine - INFO - Epoch(train) [287][8/8]  lr: 2.0375e-04  eta: 0:01:02  time: 0.4272  data_time: 0.0972  memory: 11368  loss: 0.2056  loss_cls: 0.0771  loss_bbox: 0.1285
2023/06/10 00:27:07 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:07 - mmengine - INFO - bbox_mAP_copypaste: 0.764 0.897 0.859 0.156 0.625 0.840
2023/06/10 00:27:07 - mmengine - INFO - Epoch(val) [287][3/3]    coco/bbox_mAP: 0.7640  coco/bbox_mAP_50: 0.8970  coco/bbox_mAP_75: 0.8590  coco/bbox_mAP_s: 0.1560  coco/bbox_mAP_m: 0.6250  coco/bbox_mAP_l: 0.8400  data_time: 0.0678  time: 0.1233
2023/06/10 00:27:11 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:11 - mmengine - INFO - Epoch(train) [288][8/8]  lr: 2.0321e-04  eta: 0:00:57  time: 0.4300  data_time: 0.1001  memory: 11368  loss: 0.2075  loss_cls: 0.0766  loss_bbox: 0.1309
2023/06/10 00:27:12 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:12 - mmengine - INFO - bbox_mAP_copypaste: 0.760 0.904 0.858 0.103 0.599 0.846
2023/06/10 00:27:12 - mmengine - INFO - Epoch(val) [288][3/3]    coco/bbox_mAP: 0.7600  coco/bbox_mAP_50: 0.9040  coco/bbox_mAP_75: 0.8580  coco/bbox_mAP_s: 0.1030  coco/bbox_mAP_m: 0.5990  coco/bbox_mAP_l: 0.8460  data_time: 0.0695  time: 0.1277
2023/06/10 00:27:15 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:15 - mmengine - INFO - Epoch(train) [289][8/8]  lr: 2.0270e-04  eta: 0:00:52  time: 0.4325  data_time: 0.1027  memory: 11368  loss: 0.2131  loss_cls: 0.0781  loss_bbox: 0.1349
2023/06/10 00:27:16 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:16 - mmengine - INFO - bbox_mAP_copypaste: 0.787 0.905 0.889 0.078 0.597 0.885
2023/06/10 00:27:16 - mmengine - INFO - Epoch(val) [289][3/3]    coco/bbox_mAP: 0.7870  coco/bbox_mAP_50: 0.9050  coco/bbox_mAP_75: 0.8890  coco/bbox_mAP_s: 0.0780  coco/bbox_mAP_m: 0.5970  coco/bbox_mAP_l: 0.8850  data_time: 0.0711  time: 0.1287
2023/06/10 00:27:20 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:20 - mmengine - INFO - Epoch(train) [290][8/8]  lr: 2.0224e-04  eta: 0:00:47  time: 0.4374  data_time: 0.1087  memory: 11368  loss: 0.2094  loss_cls: 0.0762  loss_bbox: 0.1332
2023/06/10 00:27:20 - mmengine - INFO - Saving checkpoint at 290 epochs
2023/06/10 00:27:24 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:24 - mmengine - INFO - bbox_mAP_copypaste: 0.803 0.928 0.911 0.080 0.644 0.891
2023/06/10 00:27:24 - mmengine - INFO - Epoch(val) [290][3/3]    coco/bbox_mAP: 0.8030  coco/bbox_mAP_50: 0.9280  coco/bbox_mAP_75: 0.9110  coco/bbox_mAP_s: 0.0800  coco/bbox_mAP_m: 0.6440  coco/bbox_mAP_l: 0.8910  data_time: 0.0694  time: 0.1306
2023/06/10 00:27:28 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:28 - mmengine - INFO - Epoch(train) [291][8/8]  lr: 2.0182e-04  eta: 0:00:43  time: 0.4377  data_time: 0.1088  memory: 11368  loss: 0.2022  loss_cls: 0.0720  loss_bbox: 0.1302
2023/06/10 00:27:28 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:28 - mmengine - INFO - bbox_mAP_copypaste: 0.821 0.945 0.922 0.105 0.671 0.903
2023/06/10 00:27:28 - mmengine - INFO - Epoch(val) [291][3/3]    coco/bbox_mAP: 0.8210  coco/bbox_mAP_50: 0.9450  coco/bbox_mAP_75: 0.9220  coco/bbox_mAP_s: 0.1050  coco/bbox_mAP_m: 0.6710  coco/bbox_mAP_l: 0.9030  data_time: 0.0685  time: 0.1267
2023/06/10 00:27:32 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:32 - mmengine - INFO - Epoch(train) [292][8/8]  lr: 2.0144e-04  eta: 0:00:38  time: 0.4382  data_time: 0.1092  memory: 11368  loss: 0.1975  loss_cls: 0.0701  loss_bbox: 0.1273
2023/06/10 00:27:32 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:33 - mmengine - INFO - bbox_mAP_copypaste: 0.813 0.939 0.923 0.076 0.635 0.902
2023/06/10 00:27:33 - mmengine - INFO - Epoch(val) [292][3/3]    coco/bbox_mAP: 0.8130  coco/bbox_mAP_50: 0.9390  coco/bbox_mAP_75: 0.9230  coco/bbox_mAP_s: 0.0760  coco/bbox_mAP_m: 0.6350  coco/bbox_mAP_l: 0.9020  data_time: 0.0706  time: 0.1278
2023/06/10 00:27:36 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:36 - mmengine - INFO - Epoch(train) [293][8/8]  lr: 2.0111e-04  eta: 0:00:33  time: 0.4422  data_time: 0.1142  memory: 11368  loss: 0.1969  loss_cls: 0.0705  loss_bbox: 0.1264
2023/06/10 00:27:37 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:37 - mmengine - INFO - bbox_mAP_copypaste: 0.809 0.930 0.917 0.076 0.598 0.908
2023/06/10 00:27:37 - mmengine - INFO - Epoch(val) [293][3/3]    coco/bbox_mAP: 0.8090  coco/bbox_mAP_50: 0.9300  coco/bbox_mAP_75: 0.9170  coco/bbox_mAP_s: 0.0760  coco/bbox_mAP_m: 0.5980  coco/bbox_mAP_l: 0.9080  data_time: 0.0691  time: 0.1262
2023/06/10 00:27:40 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:40 - mmengine - INFO - Epoch(train) [294][8/8]  lr: 2.0082e-04  eta: 0:00:28  time: 0.4389  data_time: 0.1102  memory: 11368  loss: 0.1936  loss_cls: 0.0675  loss_bbox: 0.1261
2023/06/10 00:27:41 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:41 - mmengine - INFO - bbox_mAP_copypaste: 0.816 0.928 0.909 0.101 0.613 0.911
2023/06/10 00:27:41 - mmengine - INFO - Epoch(val) [294][3/3]    coco/bbox_mAP: 0.8160  coco/bbox_mAP_50: 0.9280  coco/bbox_mAP_75: 0.9090  coco/bbox_mAP_s: 0.1010  coco/bbox_mAP_m: 0.6130  coco/bbox_mAP_l: 0.9110  data_time: 0.0693  time: 0.1264
2023/06/10 00:27:44 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:44 - mmengine - INFO - Epoch(train) [295][8/8]  lr: 2.0058e-04  eta: 0:00:23  time: 0.4348  data_time: 0.1061  memory: 11368  loss: 0.1875  loss_cls: 0.0651  loss_bbox: 0.1225
2023/06/10 00:27:45 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:45 - mmengine - INFO - bbox_mAP_copypaste: 0.804 0.920 0.890 0.252 0.607 0.899
2023/06/10 00:27:45 - mmengine - INFO - Epoch(val) [295][3/3]    coco/bbox_mAP: 0.8040  coco/bbox_mAP_50: 0.9200  coco/bbox_mAP_75: 0.8900  coco/bbox_mAP_s: 0.2520  coco/bbox_mAP_m: 0.6070  coco/bbox_mAP_l: 0.8990  data_time: 0.0689  time: 0.1261
2023/06/10 00:27:48 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:48 - mmengine - INFO - Epoch(train) [296][8/8]  lr: 2.0037e-04  eta: 0:00:19  time: 0.4330  data_time: 0.1036  memory: 11368  loss: 0.1848  loss_cls: 0.0623  loss_bbox: 0.1226
2023/06/10 00:27:49 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:49 - mmengine - INFO - bbox_mAP_copypaste: 0.798 0.920 0.889 0.202 0.610 0.894
2023/06/10 00:27:49 - mmengine - INFO - Epoch(val) [296][3/3]    coco/bbox_mAP: 0.7980  coco/bbox_mAP_50: 0.9200  coco/bbox_mAP_75: 0.8890  coco/bbox_mAP_s: 0.2020  coco/bbox_mAP_m: 0.6100  coco/bbox_mAP_l: 0.8940  data_time: 0.0693  time: 0.1261
2023/06/10 00:27:53 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:53 - mmengine - INFO - Epoch(train) [297][8/8]  lr: 2.0021e-04  eta: 0:00:14  time: 0.4351  data_time: 0.1059  memory: 11368  loss: 0.1839  loss_cls: 0.0623  loss_bbox: 0.1216
2023/06/10 00:27:53 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:53 - mmengine - INFO - bbox_mAP_copypaste: 0.788 0.919 0.874 0.202 0.604 0.885
2023/06/10 00:27:53 - mmengine - INFO - Epoch(val) [297][3/3]    coco/bbox_mAP: 0.7880  coco/bbox_mAP_50: 0.9190  coco/bbox_mAP_75: 0.8740  coco/bbox_mAP_s: 0.2020  coco/bbox_mAP_m: 0.6040  coco/bbox_mAP_l: 0.8850  data_time: 0.0710  time: 0.1282
2023/06/10 00:27:57 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:27:57 - mmengine - INFO - Epoch(train) [298][8/8]  lr: 2.0010e-04  eta: 0:00:09  time: 0.4306  data_time: 0.1017  memory: 11368  loss: 0.1828  loss_cls: 0.0613  loss_bbox: 0.1215
2023/06/10 00:27:57 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:27:58 - mmengine - INFO - bbox_mAP_copypaste: 0.793 0.924 0.887 0.202 0.616 0.887
2023/06/10 00:27:58 - mmengine - INFO - Epoch(val) [298][3/3]    coco/bbox_mAP: 0.7930  coco/bbox_mAP_50: 0.9240  coco/bbox_mAP_75: 0.8870  coco/bbox_mAP_s: 0.2020  coco/bbox_mAP_m: 0.6160  coco/bbox_mAP_l: 0.8870  data_time: 0.0706  time: 0.1273
2023/06/10 00:28:01 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:28:01 - mmengine - INFO - Epoch(train) [299][8/8]  lr: 2.0003e-04  eta: 0:00:04  time: 0.4252  data_time: 0.0963  memory: 11368  loss: 0.1851  loss_cls: 0.0622  loss_bbox: 0.1229
2023/06/10 00:28:01 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:28:01 - mmengine - INFO - bbox_mAP_copypaste: 0.798 0.929 0.875 0.101 0.622 0.890
2023/06/10 00:28:01 - mmengine - INFO - Epoch(val) [299][3/3]    coco/bbox_mAP: 0.7980  coco/bbox_mAP_50: 0.9290  coco/bbox_mAP_75: 0.8750  coco/bbox_mAP_s: 0.1010  coco/bbox_mAP_m: 0.6220  coco/bbox_mAP_l: 0.8900  data_time: 0.0711  time: 0.1275
2023/06/10 00:28:05 - mmengine - INFO - Exp name: rtmdet_l_8xb32-300e_coco_20230610_000239
2023/06/10 00:28:05 - mmengine - INFO - Epoch(train) [300][8/8]  lr: 2.0000e-04  eta: 0:00:00  time: 0.4242  data_time: 0.0943  memory: 11368  loss: 0.1776  loss_cls: 0.0599  loss_bbox: 0.1177
2023/06/10 00:28:05 - mmengine - INFO - Saving checkpoint at 300 epochs
2023/06/10 00:28:09 - mmengine - INFO - Evaluating bbox...
2023/06/10 00:28:09 - mmengine - INFO - bbox_mAP_copypaste: 0.795 0.916 0.870 0.101 0.636 0.885
2023/06/10 00:28:09 - mmengine - INFO - Epoch(val) [300][3/3]    coco/bbox_mAP: 0.7950  coco/bbox_mAP_50: 0.9160  coco/bbox_mAP_75: 0.8700  coco/bbox_mAP_s: 0.1010  coco/bbox_mAP_m: 0.6360  coco/bbox_mAP_l: 0.8850  data_time: 0.0711  time: 0.1317
